/* jshint devel:true */

/* 所有代码都是以玩法的拼音首字母为组合 */
/* zx: 直选  zux:组选 */
var LotteryClass = LotteryClass || {};
LotteryClass = {
  "names": {
    "WBG": "WBG亿万彩",
    "WBG5FC": "WBG5分彩",
    "WBGFFC": "WEB分分彩",
    "WBGMMC": "WBG秒秒彩",
    "CQSSC": "重庆时时彩",
    "JXSSC": "江西时时彩",
    "XJSSC": "新疆时时彩",
    "GD11Y": "广东11选5",
    "CQ11Y": "重庆11选5",
    "SD11Y": "山东11选5",
    "JX11Y": "江西11选5",
    "3DFC": "3D福彩",
    "BJPK10": "PK10"
  },
  /* Begin WBG亿万彩 */
  "WBG": {
    "ltTab": {
      "wx": "五星",
      "sx": "四星",
      "hsm": "后三码",
      "qsm": "前三码",
      "zsm": "中三码",
      "em": "二码",
      "dwd": "定位胆",
      "bdd": "不定胆",
      "dxds": "大小单双",
      "rx": "任选玩法",
      "rx2": "任选二",
      "rx3": "任选三",
      "rx4": "任选四"
    },
    "ltMethod": {
      "wx": {
        "zx": {
          "title": "五星直选",
          "method": {
            "fs": {
              "desc": "复式",
              "num": "万位,千位,百位,十位,个位|0-9|all",
              "name": "五星直选复式"
            },
            "ds": {
              "desc": "单式",
              "num": "input|zx|5",
              "name": "五星直选单式"
            },
            "zh": {
              "desc": "组合",
              "num": "万位,千位,百位,十位,个位|0-9|all",
              "name": "五星直选组合"
            }
          }
        },
        "zux": {
          "title": "五星组选",
          "method": {
            "z120": {
              "desc": "组120",
              "num": "组选120|0-9|all",
              "name": "五星组选120"
            },
            "z60": {
              "desc": "组选60",
              "num": "二重号,单号|0-9|all",
              "name": "五星组选60"
            },
            "z30": {
              "desc": "组选30",
              "num": "二重号,单号|0-9|all",
              "name": "五星组选30"
            },
            "z20": {
              "desc": "组选20",
              "num": "三重号,单号|0-9|all",
              "name": "五星组选20"
            },
            "z10": {
              "desc": "组选10",
              "num": "三重号,二重号|0-9|all",
              "name": "五星组选10"
            },
            "z5": {
              "desc": "组选5",
              "num": "四重号,单号|0-9|all",
              "name": "五星组选5"
            }
          }
        }
      },
      "sx": {
        "zx": {
          "title": "四星直选",
          "method": {
            "fs": {
              "desc": "复式",
              "num": "千位,百位,十位,个位|0-9|all",
              "name": "四星直选复式"
            },
            "ds": {
              "desc": "单式",
              "num": "input|zx|4",
              "name": "四星直选单式"
            },
            "zh": {
              "desc": "组合",
              "num": "千位,百位,十位,个位|0-9|all",
              "name": "四星直选组合"
            }
          }
        },
        "zux": {
          "title": "四星组选",
          "method": {
            "z24": {
              "desc": "组选24",
              "num": "组24|0-9|all",
              "name": "四星组选24"
            },
            "z12": {
              "desc": "组选12",
              "num": "二重号,单号|0-9|all",
              "name": "四星组选12"
            },
            "z6": {
              "desc": "组选6",
              "num": "二重号|0-9|all",
              "name": "四星组选6"
            },
            "z4": {
              "desc": "组选4",
              "num": "三重号,单号|0-9|all",
              "name": "四星组选4"
            }
          }
        }
      },
      "hsm": {
        "zx": {
          "title": "后三直选",
          "method": {
            "fs": {
              "desc": "复式",
              "num": "百位,十位,个位|0-9|all",
              "name": "后三码直选复式"
            },
            "ds": {
              "desc": "单式",
              "num": "input|zx|3",
              "name": "后三码直选单式"
            },
            "hz": {
              "desc": "和值",
              "num": "直选和值|0-27|",
              "name": "后三码直选和值"
            }
          }
        },
        "zux": {
          "title": "后三组选",
          "method": {
            "z3": {
              "desc": "组三",
              "num": "组三|0-9|all",
              "name": "后三码组选三"
            },
            "z6": {
              "desc": "组六",
              "num": "组六|0-9|all",
              "name": "后三码组选六"
            },
            "hh": {
              "desc": "混合",
              "num": "input|hh|3",
              "name": "后三码混合组选"
            },
            "hz": {
              "desc": "和值",
              "num": "组选和值|1-26|",
              "name": "后三码组选和值"
            }
          }
        }
      },
      "qsm": {
        "zx": {
          "title": "前三直选",
          "method": {
            "fs": {
              "desc": "复式",
              "num": "万位,千位,百位|0-9|all",
              "name": "前三码直选复式"
            },
            "ds": {
              "desc": "单式",
              "num": "input|zx|3",
              "name": "前三码直选单式"
            },
            "hz": {
              "desc": "和值",
              "num": "直选和值|0-27|",
              "name": "前三码直选和值"
            }
          }
        },
        "zux": {
          "title": "前三组选",
          "method": {
            "z3": {
              "desc": "组三",
              "num": "组三|0-9|all",
              "name": "前三码组选三"
            },
            "z6": {
              "desc": "组六",
              "num": "组六|0-9|all",
              "name": "前三码组选六"
            },
            "hh": {
              "desc": "混合",
              "num": "input|hh|3",
              "name": "前三码混合组选"
            },
            "hz": {
              "desc": "和值",
              "num": "组选和值|1-26|",
              "name": "前三码组选和值"
            }
          }
        }
      },
      "zsm": {
        "zx": {
          "title": "中三直选",
          "method": {
            "fs": {
              "desc": "复式",
              "num": "千位,百位,十位|0-9|all",
              "name": "中三码直选复式"
            },
            "ds": {
              "desc": "单式",
              "num": "input|zx|3",
              "name": "中三码直选单式"
            },
            "hz": {
              "desc": "和值",
              "num": "直选和值|0-27|",
              "name": "中三码直选和值"
            }
          }
        },
        "zux": {
          "title": "中三组选",
          "method": {
            "z3": {
              "desc": "组三",
              "num": "组三|0-9|all",
              "name": "中三码组选三"
            },
            "z6": {
              "desc": "组六",
              "num": "组六|0-9|all",
              "name": "中三码组选六"
            },
            "hh": {
              "desc": "混合",
              "num": "input|hh|3",
              "name": "中三码混合组选"
            },
            "hz": {
              "desc": "和值",
              "num": "组选和值|1-26|",
              "name": "中三码组选和值"
            }
          }
        }
      },
      "em": {
        "zx": {
          "title": "直选",
          "method": {
            "hfs": {
              "desc": "后二直选(复式)",
              "num": "十位,个位|0-9|all",
              "name": "后二直选复式"
            },
            "hds": {
              "desc": "后二直选(单式)",
              "num": "input|zx|2",
              "name": "后二直选单式"
            },
            "hhz": {
              "desc": "后二直选(和值)",
              "num": "和值|0-18|",
              "name": "后二直选和值"
            },
            "qfs": {
              "desc": "前二直选(复式)",
              "num": "万位,千位|0-9|all",
              "name": "前二直选复式"
            },
            "qds": {
              "desc": "前二直选(单式)",
              "num": "input|zx|2",
              "name": "前二直选单式"
            },
            "qhz": {
              "desc": "前二直选(和值)",
              "num": "和值|0-18|",
              "name": "前二直选和值"
            }
          }
        },
        "zux": {
          "title": "组选",
          "method": {
            "hfs": {
              "desc": "后二组选(复式)",
              "num": "组选|0-9|all",
              "name": "后二组选复式"
            },
            "hds": {
              "desc": "后二组选(单式)",
              "num": "input|zux|2",
              "name": "后二组选单式"
            },
            "hhz": {
              "desc": "后二组选(和值)",
              "num": "和值|1-17|",
              "name": "后二组选和值"
            },
            "qfs": {
              "desc": "前二组选(复式)",
              "num": "组选|0-9|all",
              "name": "前二组选复式"
            },
            "qds": {
              "desc": "前二组选(单式)",
              "num": "input|zux|2",
              "name": "前二组选单式"
            },
            "qhz": {
              "desc": "前二组选(和值)",
              "num": "和值|1-17|",
              "name": "前二组选和值"
            }
          }
        }
      },
      "dwd": {
        "dwd": {
          "title": "定位胆",
          "method": {
            "dwd": {
              "desc": "定位胆",
              "num": "万位,千位,百位,十位,个位|0-9|all",
              "name": "定位胆"
            }
          }
        }
      },
      "bdd": {
        "bdd": {
          "title": "三星不定胆",
          "method": {
            "hs1": {
              "desc": "后三一码",
              "num": "不定胆|0-9|all",
              "name": "后三一码不定胆"
            },
            "hs2": {
              "desc": "后三二码",
              "num": "不定胆|0-9|all",
              "name": "后三二码不定胆"
            },
            "qs1": {
              "desc": "前三一码",
              "num": "不定胆|0-9|all",
              "name": "前三一码不定胆"
            },
            "qs2": {
              "desc": "前三二码",
              "num": "不定胆|0-9|all",
              "name": "前三二码不定胆"
            }
          }
        }
      },
      "dxds": {
        "dxds": {
          "title": "大小单双",
          "method": {
            "h2": {
              "desc": "后二大小单双",
              "num": "十位,个位|0-3|two",
              "name": "后二大小单双"
            },
            "q2": {
              "desc": "前二大小单双",
              "num": "万位,千位|0-3|two",
              "name": "前二大小单双"
            }
          }
        }
      },
      "rx2": {
        "zx": {
          "title": "任二直选",
          "method": {
            "fs": {
              "desc": "直选复式",
              "num": "万位,千位,百位,十位,个位|0-9|all",
              "name": "任二直选复式"
            },
            "ds": {
              "desc": "直选单式",
              "num": "input|zx|2",
              "name": "任二直选单式"
            },
            "hz": {
              "desc": "直选和值",
              "num": "直选和值|0-18|",
              "name": "任二直选和值"
            }
          }
        },
        "zux": {
          "title": "任二组选",
          "method": {
            "fs": {
              "desc": "组选复式",
              "num": "组选复式|0-9|all",
              "name": "任二组选复式"
            },
            "ds": {
              "desc": "组选单式",
              "num": "input|zux|2",
              "name": "任二组选单式"
            },
            "hz": {
              "desc": "组选和值",
              "num": "组选和值|1-17|",
              "name": "任二组选和值"
            }
          }
        }
      },
      "rx3": {
        "zx": {
          "title": "任三直选",
          "method": {
            "fs": {
              "desc": "复式",
              "num": "万位,千位,百位,十位,个位|0-9|all",
              "name": "任三直选复式"
            },
            "ds": {
              "desc": "单式",
              "num": "input|zx|3",
              "name": "任三直选单式"
            },
            "hz": {
              "desc": "和值",
              "num": "直选和值|0-27|",
              "name": "任三直选和值"
            }
          }
        },
        "zux": {
          "title": "任三组选",
          "method": {
            "z3": {
              "desc": "组三",
              "num": "组三|0-9|all",
              "name": "任三组选三"
            },
            "z6": {
              "desc": "组六",
              "num": "组六|0-9|all",
              "name": "任三组选六"
            },
            "hh": {
              "desc": "混合组选",
              "num": "input|hh|3",
              "name": "任三混合组选"
            },
            "hz": {
              "desc": "组选和值",
              "num": "组选和值|1-26|",
              "name": "任三组选和值"
            }
          }
        }
      },
      "rx4": {
        "zx": {
          "title": "任四直选",
          "method": {
            "fs": {
              "desc": "复式",
              "num": "万位,千位,百位,十位,个位|0-9|all",
              "name": "任四直选复式"
            },
            "ds": {
              "desc": "单式",
              "num": "input|zx|4",
              "name": "任四直选单式"
            }
          }
        },
        "zux": {
          "title": "任四组选",
          "method": {
            "z24": {
              "desc": "组选24",
              "num": "组24|0-9|all",
              "name": "任四组选24"
            },
            "z12": {
              "desc": "组选12",
              "num": "二重号,单号|0-9|all",
              "name": "任四组选12"
            },
            "z6": {
              "desc": "组选6",
              "num": "二重号|0-9|all",
              "name": "任四组选6"
            },
            "z4": {
              "desc": "组选4",
              "num": "三重号,单号|0-9|all",
              "name": "任四组选4"
            }
          }
        }
      }
    }
  },
  /* End WBG亿万彩 */
  /* Begin WBG5分彩 */
  "WBG5FC": {
    "ltTab": {
      "wx": "五星",
      "sx": "四星",
      "hsm": "后三码",
      "qsm": "前三码",
      "zsm": "中三码",
      "em": "二码",
      "dwd": "定位胆",
      "bdd": "不定胆",
      "dxds": "大小单双",
      "rx": "任选玩法",
      "rx2": "任选二",
      "rx3": "任选三",
      "rx4": "任选四"
    },
    "ltMethod": {
      "wx": {
        "zx": {
          "title": "五星直选",
          "method": {
            "fs": {
              "desc": "复式",
              "num": "万位,千位,百位,十位,个位|0-9|all",
              "name": "五星直选复式"
            },
            "ds": {
              "desc": "单式",
              "num": "input|zx|5",
              "name": "五星直选单式"
            },
            "zh": {
              "desc": "组合",
              "num": "万位,千位,百位,十位,个位|0-9|all",
              "name": "五星直选组合"
            }
          }
        },
        "zux": {
          "title": "五星组选",
          "method": {
            "z120": {
              "desc": "组120",
              "num": "组选120|0-9|all",
              "name": "五星组选120"
            },
            "z60": {
              "desc": "组选60",
              "num": "二重号,单号|0-9|all",
              "name": "五星组选60"
            },
            "z30": {
              "desc": "组选30",
              "num": "二重号,单号|0-9|all",
              "name": "五星组选30"
            },
            "z20": {
              "desc": "组选20",
              "num": "三重号,单号|0-9|all",
              "name": "五星组选20"
            },
            "z10": {
              "desc": "组选10",
              "num": "三重号,二重号|0-9|all",
              "name": "五星组选10"
            },
            "z5": {
              "desc": "组选5",
              "num": "四重号,单号|0-9|all",
              "name": "五星组选5"
            }
          }
        }
      },
      "sx": {
        "zx": {
          "title": "四星直选",
          "method": {
            "fs": {
              "desc": "复式",
              "num": "千位,百位,十位,个位|0-9|all",
              "name": "四星直选复式"
            },
            "ds": {
              "desc": "单式",
              "num": "input|zx|4",
              "name": "四星直选单式"
            },
            "zh": {
              "desc": "组合",
              "num": "千位,百位,十位,个位|0-9|all",
              "name": "四星直选组合"
            }
          }
        },
        "zux": {
          "title": "四星组选",
          "method": {
            "z24": {
              "desc": "组选24",
              "num": "组24|0-9|all",
              "name": "四星组选24"
            },
            "z12": {
              "desc": "组选12",
              "num": "二重号,单号|0-9|all",
              "name": "四星组选12"
            },
            "z6": {
              "desc": "组选6",
              "num": "二重号|0-9|all",
              "name": "四星组选6"
            },
            "z4": {
              "desc": "组选4",
              "num": "三重号,单号|0-9|all",
              "name": "四星组选4"
            }
          }
        }
      },
      "hsm": {
        "zx": {
          "title": "后三直选",
          "method": {
            "fs": {
              "desc": "复式",
              "num": "百位,十位,个位|0-9|all",
              "name": "后三码直选复式"
            },
            "ds": {
              "desc": "单式",
              "num": "input|zx|3",
              "name": "后三码直选单式"
            },
            "hz": {
              "desc": "和值",
              "num": "直选和值|0-27|",
              "name": "后三码直选和值"
            }
          }
        },
        "zux": {
          "title": "后三组选",
          "method": {
            "z3": {
              "desc": "组三",
              "num": "组三|0-9|all",
              "name": "后三码组选三"
            },
            "z6": {
              "desc": "组六",
              "num": "组六|0-9|all",
              "name": "后三码组选六"
            },
            "hh": {
              "desc": "混合",
              "num": "input|hh|3",
              "name": "后三码混合组选"
            },
            "hz": {
              "desc": "和值",
              "num": "组选和值|1-26|",
              "name": "后三码组选和值"
            }
          }
        }
      },
      "qsm": {
        "zx": {
          "title": "前三直选",
          "method": {
            "fs": {
              "desc": "复式",
              "num": "万位,千位,百位|0-9|all",
              "name": "前三码直选复式"
            },
            "ds": {
              "desc": "单式",
              "num": "input|zx|3",
              "name": "前三码直选单式"
            },
            "hz": {
              "desc": "和值",
              "num": "直选和值|0-27|",
              "name": "前三码直选和值"
            }
          }
        },
        "zux": {
          "title": "前三组选",
          "method": {
            "z3": {
              "desc": "组三",
              "num": "组三|0-9|all",
              "name": "前三码组选三"
            },
            "z6": {
              "desc": "组六",
              "num": "组六|0-9|all",
              "name": "前三码组选六"
            },
            "hh": {
              "desc": "混合",
              "num": "input|hh|3",
              "name": "前三码混合组选"
            },
            "hz": {
              "desc": "和值",
              "num": "组选和值|1-26|",
              "name": "前三码组选和值"
            }
          }
        }
      },
      "zsm": {
        "zx": {
          "title": "中三直选",
          "method": {
            "fs": {
              "desc": "复式",
              "num": "千位,百位,十位|0-9|all",
              "name": "中三码直选复式"
            },
            "ds": {
              "desc": "单式",
              "num": "input|zx|3",
              "name": "中三码直选单式"
            },
            "hz": {
              "desc": "和值",
              "num": "直选和值|0-27|",
              "name": "中三码直选和值"
            }
          }
        },
        "zux": {
          "title": "中三组选",
          "method": {
            "z3": {
              "desc": "组三",
              "num": "组三|0-9|all",
              "name": "中三码组选三"
            },
            "z6": {
              "desc": "组六",
              "num": "组六|0-9|all",
              "name": "中三码组选六"
            },
            "hh": {
              "desc": "混合",
              "num": "input|hh|3",
              "name": "中三码混合组选"
            },
            "hz": {
              "desc": "和值",
              "num": "组选和值|1-26|",
              "name": "中三码组选和值"
            }
          }
        }
      },
      "em": {
        "zx": {
          "title": "直选",
          "method": {
            "hfs": {
              "desc": "后二直选(复式)",
              "num": "十位,个位|0-9|all",
              "name": "后二直选复式"
            },
            "hds": {
              "desc": "后二直选(单式)",
              "num": "input|zx|2",
              "name": "后二直选单式"
            },
            "hhz": {
              "desc": "后二直选(和值)",
              "num": "和值|0-18|",
              "name": "后二直选和值"
            },
            "qfs": {
              "desc": "前二直选(复式)",
              "num": "万位,千位|0-9|all",
              "name": "前二直选复式"
            },
            "qds": {
              "desc": "前二直选(单式)",
              "num": "input|zx|2",
              "name": "前二直选单式"
            },
            "qhz": {
              "desc": "前二直选(和值)",
              "num": "和值|0-18|",
              "name": "前二直选和值"
            }
          }
        },
        "zux": {
          "title": "组选",
          "method": {
            "hfs": {
              "desc": "后二组选(复式)",
              "num": "组选|0-9|all",
              "name": "后二组选复式"
            },
            "hds": {
              "desc": "后二组选(单式)",
              "num": "input|zux|2",
              "name": "后二组选单式"
            },
            "hhz": {
              "desc": "后二组选(和值)",
              "num": "和值|1-17|",
              "name": "后二组选和值"
            },
            "qfs": {
              "desc": "前二组选(复式)",
              "num": "组选|0-9|all",
              "name": "前二组选复式"
            },
            "qds": {
              "desc": "前二组选(单式)",
              "num": "input|zux|2",
              "name": "前二组选单式"
            },
            "qhz": {
              "desc": "前二组选(和值)",
              "num": "和值|1-17|",
              "name": "前二组选和值"
            }
          }
        }
      },
      "dwd": {
        "dwd": {
          "title": "定位胆",
          "method": {
            "dwd": {
              "desc": "定位胆",
              "num": "万位,千位,百位,十位,个位|0-9|all",
              "name": "定位胆"
            }
          }
        }
      },
      "bdd": {
        "bdd": {
          "title": "三星不定胆",
          "method": {
            "hs1": {
              "desc": "后三一码",
              "num": "不定胆|0-9|all",
              "name": "后三一码不定胆"
            },
            "hs2": {
              "desc": "后三二码",
              "num": "不定胆|0-9|all",
              "name": "后三二码不定胆"
            },
            "qs1": {
              "desc": "前三一码",
              "num": "不定胆|0-9|all",
              "name": "前三一码不定胆"
            },
            "qs2": {
              "desc": "前三二码",
              "num": "不定胆|0-9|all",
              "name": "前三二码不定胆"
            }
          }
        }
      },
      "dxds": {
        "dxds": {
          "title": "大小单双",
          "method": {
            "h2": {
              "desc": "后二大小单双",
              "num": "十位,个位|0-3|two",
              "name": "后二大小单双"
            },
            "q2": {
              "desc": "前二大小单双",
              "num": "万位,千位|0-3|two",
              "name": "前二大小单双"
            }
          }
        }
      },
      "rx2": {
        "zx": {
          "title": "任二直选",
          "method": {
            "fs": {
              "desc": "直选复式",
              "num": "万位,千位,百位,十位,个位|0-9|all",
              "name": "任二直选复式"
            },
            "ds": {
              "desc": "直选单式",
              "num": "input|zx|2",
              "name": "任二直选单式"
            },
            "hz": {
              "desc": "直选和值",
              "num": "直选和值|0-18|",
              "name": "任二直选和值"
            }
          }
        },
        "zux": {
          "title": "任二组选",
          "method": {
            "fs": {
              "desc": "组选复式",
              "num": "组选复式|0-9|all",
              "name": "任二组选复式"
            },
            "ds": {
              "desc": "组选单式",
              "num": "input|zux|2",
              "name": "任二组选单式"
            },
            "hz": {
              "desc": "组选和值",
              "num": "组选和值|1-17|",
              "name": "任二组选和值"
            }
          }
        }
      },
      "rx3": {
        "zx": {
          "title": "任三直选",
          "method": {
            "fs": {
              "desc": "复式",
              "num": "万位,千位,百位,十位,个位|0-9|all",
              "name": "任三直选复式"
            },
            "ds": {
              "desc": "单式",
              "num": "input|zx|3",
              "name": "任三直选单式"
            },
            "hz": {
              "desc": "和值",
              "num": "直选和值|0-27|",
              "name": "任三直选和值"
            }
          }
        },
        "zux": {
          "title": "任三组选",
          "method": {
            "z3": {
              "desc": "组三",
              "num": "组三|0-9|all",
              "name": "任三组选三"
            },
            "z6": {
              "desc": "组六",
              "num": "组六|0-9|all",
              "name": "任三组选六"
            },
            "hh": {
              "desc": "混合组选",
              "num": "input|hh|3",
              "name": "任三混合组选"
            },
            "hz": {
              "desc": "组选和值",
              "num": "组选和值|1-26|",
              "name": "任三组选和值"
            }
          }
        }
      },
      "rx4": {
        "zx": {
          "title": "任四直选",
          "method": {
            "fs": {
              "desc": "复式",
              "num": "万位,千位,百位,十位,个位|0-9|all",
              "name": "任四直选复式"
            },
            "ds": {
              "desc": "单式",
              "num": "input|zx|4",
              "name": "任四直选单式"
            }
          }
        },
        "zux": {
          "title": "任四组选",
          "method": {
            "z24": {
              "desc": "组选24",
              "num": "组24|0-9|all",
              "name": "任四组选24"
            },
            "z12": {
              "desc": "组选12",
              "num": "二重号,单号|0-9|all",
              "name": "任四组选12"
            },
            "z6": {
              "desc": "组选6",
              "num": "二重号|0-9|all",
              "name": "任四组选6"
            },
            "z4": {
              "desc": "组选4",
              "num": "三重号,单号|0-9|all",
              "name": "任四组选4"
            }
          }
        }
      }
    }
  },
  /* End WBG5分彩 */
  /* Begin WBG分分彩 */
  "WBGFFC": {
    "ltTab": {
      "wx": "五星",
      "sx": "四星",
      "hsm": "后三码",
      "qsm": "前三码",
      "zsm": "中三码",
      "em": "二码",
      "dwd": "定位胆",
      "bdd": "不定胆",
      "dxds": "大小单双"
    },
    "ltMethod": {
      "wx": {
        "zx": {
          "title": "五星直选",
          "method": {
            "fs": {
              "desc": "复式",
              "num": "万位,千位,百位,十位,个位|0-9|all",
              "name": "五星直选复式"
            },
            "ds": {
              "desc": "单式",
              "num": "input|zx|5",
              "name": "五星直选单式"
            },
            "zh": {
              "desc": "组合",
              "num": "万位,千位,百位,十位,个位|0-9|all",
              "name": "五星直选组合"
            }
          }
        },
        "zux": {
          "title": "五星组选",
          "method": {
            "z120": {
              "desc": "组120",
              "num": "组选120|0-9|all",
              "name": "五星组选120"
            },
            "z60": {
              "desc": "组选60",
              "num": "二重号,单号|0-9|all",
              "name": "五星组选60"
            },
            "z30": {
              "desc": "组选30",
              "num": "二重号,单号|0-9|all",
              "name": "五星组选30"
            },
            "z20": {
              "desc": "组选20",
              "num": "三重号,单号|0-9|all",
              "name": "五星组选20"
            },
            "z10": {
              "desc": "组选10",
              "num": "三重号,二重号|0-9|all",
              "name": "五星组选10"
            },
            "z5": {
              "desc": "组选5",
              "num": "四重号,单号|0-9|all",
              "name": "五星组选5"
            }
          }
        }
      },
      "sx": {
        "zx": {
          "title": "四星直选",
          "method": {
            "fs": {
              "desc": "复式",
              "num": "千位,百位,十位,个位|0-9|all",
              "name": "四星直选复式"
            },
            "ds": {
              "desc": "单式",
              "num": "input|zx|4",
              "name": "四星直选单式"
            },
            "zh": {
              "desc": "组合",
              "num": "千位,百位,十位,个位|0-9|all",
              "name": "四星直选组合"
            }
          }
        },
        "zux": {
          "title": "四星组选",
          "method": {
            "z24": {
              "desc": "组选24",
              "num": "组24|0-9|all",
              "name": "四星组选24"
            },
            "z12": {
              "desc": "组选12",
              "num": "二重号,单号|0-9|all",
              "name": "四星组选12"
            },
            "z6": {
              "desc": "组选6",
              "num": "二重号|0-9|all",
              "name": "四星组选6"
            },
            "z4": {
              "desc": "组选4",
              "num": "三重号,单号|0-9|all",
              "name": "四星组选4"
            }
          }
        }
      },
      "hsm": {
        "zx": {
          "title": "后三直选",
          "method": {
            "fs": {
              "desc": "复式",
              "num": "百位,十位,个位|0-9|all",
              "name": "后三码直选复式"
            },
            "ds": {
              "desc": "单式",
              "num": "input|zx|3",
              "name": "后三码直选单式"
            },
            "hz": {
              "desc": "和值",
              "num": "直选和值|0-27|",
              "name": "后三码直选和值"
            }
          }
        },
        "zux": {
          "title": "后三组选",
          "method": {
            "z3": {
              "desc": "组三",
              "num": "组三|0-9|all",
              "name": "后三码组选三"
            },
            "z6": {
              "desc": "组六",
              "num": "组六|0-9|all",
              "name": "后三码组选六"
            },
            "hh": {
              "desc": "混合",
              "num": "input|hh|3",
              "name": "后三码混合组选"
            },
            "hz": {
              "desc": "和值",
              "num": "组选和值|1-26|",
              "name": "后三码组选和值"
            }
          }
        }
      },
      "qsm": {
        "zx": {
          "title": "前三直选",
          "method": {
            "fs": {
              "desc": "复式",
              "num": "万位,千位,百位|0-9|all",
              "name": "前三码直选复式"
            },
            "ds": {
              "desc": "单式",
              "num": "input|zx|3",
              "name": "前三码直选单式"
            },
            "hz": {
              "desc": "和值",
              "num": "直选和值|0-27|",
              "name": "前三码直选和值"
            }
          }
        },
        "zux": {
          "title": "前三组选",
          "method": {
            "z3": {
              "desc": "组三",
              "num": "组三|0-9|all",
              "name": "前三码组选三"
            },
            "z6": {
              "desc": "组六",
              "num": "组六|0-9|all",
              "name": "前三码组选六"
            },
            "hh": {
              "desc": "混合",
              "num": "input|hh|3",
              "name": "前三码混合组选"
            },
            "hz": {
              "desc": "和值",
              "num": "组选和值|1-26|",
              "name": "前三码组选和值"
            }
          }
        }
      },
      "zsm": {
        "zx": {
          "title": "中三直选",
          "method": {
            "fs": {
              "desc": "复式",
              "num": "千位,百位,十位|0-9|all",
              "name": "中三码直选复式"
            },
            "ds": {
              "desc": "单式",
              "num": "input|zx|3",
              "name": "中三码直选单式"
            },
            "hz": {
              "desc": "和值",
              "num": "直选和值|0-27|",
              "name": "中三码直选和值"
            }
          }
        },
        "zux": {
          "title": "中三组选",
          "method": {
            "z3": {
              "desc": "组三",
              "num": "组三|0-9|all",
              "name": "中三码组选三"
            },
            "z6": {
              "desc": "组六",
              "num": "组六|0-9|all",
              "name": "中三码组选六"
            },
            "hh": {
              "desc": "混合",
              "num": "input|hh|3",
              "name": "中三码混合组选"
            },
            "hz": {
              "desc": "和值",
              "num": "组选和值|1-26|",
              "name": "中三码组选和值"
            }
          }
        }
      },
      "em": {
        "zx": {
          "title": "直选",
          "method": {
            "hfs": {
              "desc": "后二直选(复式)",
              "num": "十位,个位|0-9|all",
              "name": "后二直选复式"
            },
            "hds": {
              "desc": "后二直选(单式)",
              "num": "input|zx|2",
              "name": "后二直选单式"
            },
            "hhz": {
              "desc": "后二直选(和值)",
              "num": "和值|0-18|",
              "name": "后二直选和值"
            },
            "qfs": {
              "desc": "前二直选(复式)",
              "num": "万位,千位|0-9|all",
              "name": "前二直选复式"
            },
            "qds": {
              "desc": "前二直选(单式)",
              "num": "input|zx|2",
              "name": "前二直选单式"
            },
            "qhz": {
              "desc": "前二直选(和值)",
              "num": "和值|0-18|",
              "name": "前二直选和值"
            }
          }
        },
        "zux": {
          "title": "组选",
          "method": {
            "hfs": {
              "desc": "后二组选(复式)",
              "num": "组选|0-9|all",
              "name": "后二组选复式"
            },
            "hds": {
              "desc": "后二组选(单式)",
              "num": "input|zux|2",
              "name": "后二组选单式"
            },
            "hhz": {
              "desc": "后二组选(和值)",
              "num": "和值|1-17|",
              "name": "后二组选和值"
            },
            "qfs": {
              "desc": "前二组选(复式)",
              "num": "组选|0-9|all",
              "name": "前二组选复式"
            },
            "qds": {
              "desc": "前二组选(单式)",
              "num": "input|zux|2",
              "name": "前二组选单式"
            },
            "qhz": {
              "desc": "前二组选(和值)",
              "num": "和值|1-17|",
              "name": "前二组选和值"
            }
          }
        }
      },
      "dwd": {
        "dwd": {
          "title": "定位胆",
          "method": {
            "dwd": {
              "desc": "定位胆",
              "num": "万位,千位,百位,十位,个位|0-9|all",
              "name": "定位胆"
            }
          }
        }
      },
      "bdd": {
        "bdd": {
          "title": "三星不定胆",
          "method": {
            "hs1": {
              "desc": "后三一码",
              "num": "不定胆|0-9|all",
              "name": "后三一码不定胆"
            },
            "hs2": {
              "desc": "后三二码",
              "num": "不定胆|0-9|all",
              "name": "后三二码不定胆"
            },
            "qs1": {
              "desc": "前三一码",
              "num": "不定胆|0-9|all",
              "name": "前三一码不定胆"
            },
            "qs2": {
              "desc": "前三二码",
              "num": "不定胆|0-9|all",
              "name": "前三二码不定胆"
            }
          }
        }
      },
      "dxds": {
        "dxds": {
          "title": "大小单双",
          "method": {
            "h2": {
              "desc": "后二大小单双",
              "num": "十位,个位|0-3|two",
              "name": "后二大小单双"
            },
            "q2": {
              "desc": "前二大小单双",
              "num": "万位,千位|0-3|two",
              "name": "前二大小单双"
            }
          }
        }
      }
    }
  },
  /* End WBG分分彩 */
  /* Begin WBG秒秒彩 */
  "WBGMMC": {
    "ltTab": {
      "wx": "五星",
      "sx": "四星",
      "hsm": "后三码",
      "qsm": "前三码",
      "zsm": "中三码",
      "em": "二码",
      "dwd": "定位胆",
      "bdd": "不定胆",
      "dxds": "大小单双"
    },
    "ltMethod": {
      "wx": {
        "zx": {
          "title": "五星直选",
          "method": {
            "fs": {
              "desc": "复式",
              "num": "万位,千位,百位,十位,个位|0-9|all",
              "name": "五星直选复式"
            },
            "ds": {
              "desc": "单式",
              "num": "input|zx|5",
              "name": "五星直选单式"
            },
            "zh": {
              "desc": "组合",
              "num": "万位,千位,百位,十位,个位|0-9|all",
              "name": "五星直选组合"
            }
          }
        },
        "zux": {
          "title": "五星组选",
          "method": {
            "z120": {
              "desc": "组120",
              "num": "组选120|0-9|all",
              "name": "五星组选120"
            },
            "z60": {
              "desc": "组选60",
              "num": "二重号,单号|0-9|all",
              "name": "五星组选60"
            },
            "z30": {
              "desc": "组选30",
              "num": "二重号,单号|0-9|all",
              "name": "五星组选30"
            },
            "z20": {
              "desc": "组选20",
              "num": "三重号,单号|0-9|all",
              "name": "五星组选20"
            },
            "z10": {
              "desc": "组选10",
              "num": "三重号,二重号|0-9|all",
              "name": "五星组选10"
            },
            "z5": {
              "desc": "组选5",
              "num": "四重号,单号|0-9|all",
              "name": "五星组选5"
            }
          }
        }
      },
      "sx": {
        "zx": {
          "title": "四星直选",
          "method": {
            "fs": {
              "desc": "复式",
              "num": "千位,百位,十位,个位|0-9|all",
              "name": "四星直选复式"
            },
            "ds": {
              "desc": "单式",
              "num": "input|zx|4",
              "name": "四星直选单式"
            },
            "zh": {
              "desc": "组合",
              "num": "千位,百位,十位,个位|0-9|all",
              "name": "四星直选组合"
            }
          }
        },
        "zux": {
          "title": "四星组选",
          "method": {
            "z24": {
              "desc": "组选24",
              "num": "组24|0-9|all",
              "name": "四星组选24"
            },
            "z12": {
              "desc": "组选12",
              "num": "二重号,单号|0-9|all",
              "name": "四星组选12"
            },
            "z6": {
              "desc": "组选6",
              "num": "二重号|0-9|all",
              "name": "四星组选6"
            },
            "z4": {
              "desc": "组选4",
              "num": "三重号,单号|0-9|all",
              "name": "四星组选4"
            }
          }
        }
      },
      "hsm": {
        "zx": {
          "title": "后三直选",
          "method": {
            "fs": {
              "desc": "复式",
              "num": "百位,十位,个位|0-9|all",
              "name": "后三码直选复式"
            },
            "ds": {
              "desc": "单式",
              "num": "input|zx|3",
              "name": "后三码直选单式"
            },
            "hz": {
              "desc": "和值",
              "num": "直选和值|0-27|",
              "name": "后三码直选和值"
            }
          }
        },
        "zux": {
          "title": "后三组选",
          "method": {
            "z3": {
              "desc": "组三",
              "num": "组三|0-9|all",
              "name": "后三码组选三"
            },
            "z6": {
              "desc": "组六",
              "num": "组六|0-9|all",
              "name": "后三码组选六"
            },
            "hh": {
              "desc": "混合",
              "num": "input|hh|3",
              "name": "后三码混合组选"
            },
            "hz": {
              "desc": "和值",
              "num": "组选和值|1-26|",
              "name": "后三码组选和值"
            }
          }
        }
      },
      "qsm": {
        "zx": {
          "title": "前三直选",
          "method": {
            "fs": {
              "desc": "复式",
              "num": "万位,千位,百位|0-9|all",
              "name": "前三码直选复式"
            },
            "ds": {
              "desc": "单式",
              "num": "input|zx|3",
              "name": "前三码直选单式"
            },
            "hz": {
              "desc": "和值",
              "num": "直选和值|0-27|",
              "name": "前三码直选和值"
            }
          }
        },
        "zux": {
          "title": "前三组选",
          "method": {
            "z3": {
              "desc": "组三",
              "num": "组三|0-9|all",
              "name": "前三码组选三"
            },
            "z6": {
              "desc": "组六",
              "num": "组六|0-9|all",
              "name": "前三码组选六"
            },
            "hh": {
              "desc": "混合",
              "num": "input|hh|3",
              "name": "前三码混合组选"
            },
            "hz": {
              "desc": "和值",
              "num": "组选和值|1-26|",
              "name": "前三码组选和值"
            }
          }
        }
      },
      "zsm": {
        "zx": {
          "title": "中三直选",
          "method": {
            "fs": {
              "desc": "复式",
              "num": "千位,百位,十位|0-9|all",
              "name": "中三码直选复式"
            },
            "ds": {
              "desc": "单式",
              "num": "input|zx|3",
              "name": "中三码直选单式"
            },
            "hz": {
              "desc": "和值",
              "num": "直选和值|0-27|",
              "name": "中三码直选和值"
            }
          }
        },
        "zux": {
          "title": "中三组选",
          "method": {
            "z3": {
              "desc": "组三",
              "num": "组三|0-9|all",
              "name": "中三码组选三"
            },
            "z6": {
              "desc": "组六",
              "num": "组六|0-9|all",
              "name": "中三码组选六"
            },
            "hh": {
              "desc": "混合",
              "num": "input|hh|3",
              "name": "中三码混合组选"
            },
            "hz": {
              "desc": "和值",
              "num": "组选和值|1-26|",
              "name": "中三码组选和值"
            }
          }
        }
      },
      "em": {
        "zx": {
          "title": "直选",
          "method": {
            "hfs": {
              "desc": "后二直选(复式)",
              "num": "十位,个位|0-9|all",
              "name": "后二直选复式"
            },
            "hds": {
              "desc": "后二直选(单式)",
              "num": "input|zx|2",
              "name": "后二直选单式"
            },
            "hhz": {
              "desc": "后二直选(和值)",
              "num": "和值|0-18|",
              "name": "后二直选和值"
            },
            "qfs": {
              "desc": "前二直选(复式)",
              "num": "万位,千位|0-9|all",
              "name": "前二直选复式"
            },
            "qds": {
              "desc": "前二直选(单式)",
              "num": "input|zx|2",
              "name": "前二直选单式"
            },
            "qhz": {
              "desc": "前二直选(和值)",
              "num": "和值|0-18|",
              "name": "前二直选和值"
            }
          }
        },
        "zux": {
          "title": "组选",
          "method": {
            "hfs": {
              "desc": "后二组选(复式)",
              "num": "组选|0-9|all",
              "name": "后二组选复式"
            },
            "hds": {
              "desc": "后二组选(单式)",
              "num": "input|zux|2",
              "name": "后二组选单式"
            },
            "hhz": {
              "desc": "后二组选(和值)",
              "num": "和值|1-17|",
              "name": "后二组选和值"
            },
            "qfs": {
              "desc": "前二组选(复式)",
              "num": "组选|0-9|all",
              "name": "前二组选复式"
            },
            "qds": {
              "desc": "前二组选(单式)",
              "num": "input|zux|2",
              "name": "前二组选单式"
            },
            "qhz": {
              "desc": "前二组选(和值)",
              "num": "和值|1-17|",
              "name": "前二组选和值"
            }
          }
        }
      },
      "dwd": {
        "dwd": {
          "title": "定位胆",
          "method": {
            "dwd": {
              "desc": "定位胆",
              "num": "万位,千位,百位,十位,个位|0-9|all",
              "name": "定位胆"
            }
          }
        }
      },
      "bdd": {
        "bdd": {
          "title": "三星不定胆",
          "method": {
            "hs1": {
              "desc": "后三一码",
              "num": "不定胆|0-9|all",
              "name": "后三一码不定胆"
            },
            "hs2": {
              "desc": "后三二码",
              "num": "不定胆|0-9|all",
              "name": "后三二码不定胆"
            },
            "qs1": {
              "desc": "前三一码",
              "num": "不定胆|0-9|all",
              "name": "前三一码不定胆"
            },
            "qs2": {
              "desc": "前三二码",
              "num": "不定胆|0-9|all",
              "name": "前三二码不定胆"
            }
          }
        }
      },
      "dxds": {
        "dxds": {
          "title": "大小单双",
          "method": {
            "h2": {
              "desc": "后二大小单双",
              "num": "十位,个位|0-3|two",
              "name": "后二大小单双"
            },
            "q2": {
              "desc": "前二大小单双",
              "num": "万位,千位|0-3|two",
              "name": "前二大小单双"
            }
          }
        }
      }
    }
  },
  /* End WBG秒秒彩 */
  /* Begin 重庆时时彩 */
  "CQSSC": {
    "ltTab": {
      "wx": "五星",
      "sx": "四星",
      "hsm": "后三码",
      "qsm": "前三码",
      "zsm": "中三码",
      "em": "二码",
      "dwd": "定位胆",
      "bdd": "不定胆",
      "dxds": "大小单双",
      "rx": "任选玩法",
      "rx2": "任选二",
      "rx3": "任选三",
      "rx4": "任选四"
    },
    "ltMethod": {
      "wx": {
        "zx": {
          "title": "五星直选",
          "method": {
            "fs": {
              "desc": "复式",
              "num": "万位,千位,百位,十位,个位|0-9|all",
              "name": "五星直选复式"
            },
            "ds": {
              "desc": "单式",
              "num": "input|zx|5",
              "name": "五星直选单式"
            },
            "zh": {
              "desc": "组合",
              "num": "万位,千位,百位,十位,个位|0-9|all",
              "name": "五星直选组合"
            }
          }
        },
        "zux": {
          "title": "五星组选",
          "method": {
            "z120": {
              "desc": "组120",
              "num": "组选120|0-9|all",
              "name": "五星组选120"
            },
            "z60": {
              "desc": "组选60",
              "num": "二重号,单号|0-9|all",
              "name": "五星组选60"
            },
            "z30": {
              "desc": "组选30",
              "num": "二重号,单号|0-9|all",
              "name": "五星组选30"
            },
            "z20": {
              "desc": "组选20",
              "num": "三重号,单号|0-9|all",
              "name": "五星组选20"
            },
            "z10": {
              "desc": "组选10",
              "num": "三重号,二重号|0-9|all",
              "name": "五星组选10"
            },
            "z5": {
              "desc": "组选5",
              "num": "四重号,单号|0-9|all",
              "name": "五星组选5"
            }
          }
        }
      },
      "sx": {
        "zx": {
          "title": "四星直选",
          "method": {
            "fs": {
              "desc": "复式",
              "num": "千位,百位,十位,个位|0-9|all",
              "name": "四星直选复式"
            },
            "ds": {
              "desc": "单式",
              "num": "input|zx|4",
              "name": "四星直选单式"
            },
            "zh": {
              "desc": "组合",
              "num": "千位,百位,十位,个位|0-9|all",
              "name": "四星直选组合"
            }
          }
        },
        "zux": {
          "title": "四星组选",
          "method": {
            "z24": {
              "desc": "组选24",
              "num": "组24|0-9|all",
              "name": "四星组选24"
            },
            "z12": {
              "desc": "组选12",
              "num": "二重号,单号|0-9|all",
              "name": "四星组选12"
            },
            "z6": {
              "desc": "组选6",
              "num": "二重号|0-9|all",
              "name": "四星组选6"
            },
            "z4": {
              "desc": "组选4",
              "num": "三重号,单号|0-9|all",
              "name": "四星组选4"
            }
          }
        }
      },
      "hsm": {
        "zx": {
          "title": "后三直选",
          "method": {
            "fs": {
              "desc": "复式",
              "num": "百位,十位,个位|0-9|all",
              "name": "后三码直选复式"
            },
            "ds": {
              "desc": "单式",
              "num": "input|zx|3",
              "name": "后三码直选单式"
            },
            "hz": {
              "desc": "和值",
              "num": "直选和值|0-27|",
              "name": "后三码直选和值"
            }
          }
        },
        "zux": {
          "title": "后三组选",
          "method": {
            "z3": {
              "desc": "组三",
              "num": "组三|0-9|all",
              "name": "后三码组选三"
            },
            "z6": {
              "desc": "组六",
              "num": "组六|0-9|all",
              "name": "后三码组选六"
            },
            "hh": {
              "desc": "混合",
              "num": "input|hh|3",
              "name": "后三码混合组选"
            },
            "hz": {
              "desc": "和值",
              "num": "组选和值|1-26|",
              "name": "后三码组选和值"
            }
          }
        }
      },
      "qsm": {
        "zx": {
          "title": "前三直选",
          "method": {
            "fs": {
              "desc": "复式",
              "num": "万位,千位,百位|0-9|all",
              "name": "前三码直选复式"
            },
            "ds": {
              "desc": "单式",
              "num": "input|zx|3",
              "name": "前三码直选单式"
            },
            "hz": {
              "desc": "和值",
              "num": "直选和值|0-27|",
              "name": "前三码直选和值"
            }
          }
        },
        "zux": {
          "title": "前三组选",
          "method": {
            "z3": {
              "desc": "组三",
              "num": "组三|0-9|all",
              "name": "前三码组选三"
            },
            "z6": {
              "desc": "组六",
              "num": "组六|0-9|all",
              "name": "前三码组选六"
            },
            "hh": {
              "desc": "混合",
              "num": "input|hh|3",
              "name": "前三码混合组选"
            },
            "hz": {
              "desc": "和值",
              "num": "组选和值|1-26|",
              "name": "前三码组选和值"
            }
          }
        }
      },
      "zsm": {
        "zx": {
          "title": "中三直选",
          "method": {
            "fs": {
              "desc": "复式",
              "num": "千位,百位,十位|0-9|all",
              "name": "中三码直选复式"
            },
            "ds": {
              "desc": "单式",
              "num": "input|zx|3",
              "name": "中三码直选单式"
            },
            "hz": {
              "desc": "和值",
              "num": "直选和值|0-27|",
              "name": "中三码直选和值"
            }
          }
        },
        "zux": {
          "title": "中三组选",
          "method": {
            "z3": {
              "desc": "组三",
              "num": "组三|0-9|all",
              "name": "中三码组选三"
            },
            "z6": {
              "desc": "组六",
              "num": "组六|0-9|all",
              "name": "中三码组选六"
            },
            "hh": {
              "desc": "混合",
              "num": "input|hh|3",
              "name": "中三码混合组选"
            },
            "hz": {
              "desc": "和值",
              "num": "组选和值|1-26|",
              "name": "中三码组选和值"
            }
          }
        }
      },
      "em": {
        "zx": {
          "title": "直选",
          "method": {
            "hfs": {
              "desc": "后二直选(复式)",
              "num": "十位,个位|0-9|all",
              "name": "后二直选复式"
            },
            "hds": {
              "desc": "后二直选(单式)",
              "num": "input|zx|2",
              "name": "后二直选单式"
            },
            "hhz": {
              "desc": "后二直选(和值)",
              "num": "和值|0-18|",
              "name": "后二直选和值"
            },
            "qfs": {
              "desc": "前二直选(复式)",
              "num": "万位,千位|0-9|all",
              "name": "前二直选复式"
            },
            "qds": {
              "desc": "前二直选(单式)",
              "num": "input|zx|2",
              "name": "前二直选单式"
            },
            "qhz": {
              "desc": "前二直选(和值)",
              "num": "和值|0-18|",
              "name": "前二直选和值"
            }
          }
        },
        "zux": {
          "title": "组选",
          "method": {
            "hfs": {
              "desc": "后二组选(复式)",
              "num": "组选|0-9|all",
              "name": "后二组选复式"
            },
            "hds": {
              "desc": "后二组选(单式)",
              "num": "input|zux|2",
              "name": "后二组选单式"
            },
            "hhz": {
              "desc": "后二组选(和值)",
              "num": "和值|1-17|",
              "name": "后二组选和值"
            },
            "qfs": {
              "desc": "前二组选(复式)",
              "num": "组选|0-9|all",
              "name": "前二组选复式"
            },
            "qds": {
              "desc": "前二组选(单式)",
              "num": "input|zux|2",
              "name": "前二组选单式"
            },
            "qhz": {
              "desc": "前二组选(和值)",
              "num": "和值|1-17|",
              "name": "前二组选和值"
            }
          }
        }
      },
      "dwd": {
        "dwd": {
          "title": "定位胆",
          "method": {
            "dwd": {
              "desc": "定位胆",
              "num": "万位,千位,百位,十位,个位|0-9|all",
              "name": "定位胆"
            }
          }
        }
      },
      "bdd": {
        "bdd": {
          "title": "三星不定胆",
          "method": {
            "hs1": {
              "desc": "后三一码",
              "num": "不定胆|0-9|all",
              "name": "后三一码不定胆"
            },
            "hs2": {
              "desc": "后三二码",
              "num": "不定胆|0-9|all",
              "name": "后三二码不定胆"
            },
            "qs1": {
              "desc": "前三一码",
              "num": "不定胆|0-9|all",
              "name": "前三一码不定胆"
            },
            "qs2": {
              "desc": "前三二码",
              "num": "不定胆|0-9|all",
              "name": "前三二码不定胆"
            }
          }
        }
      },
      "dxds": {
        "dxds": {
          "title": "大小单双",
          "method": {
            "h2": {
              "desc": "后二大小单双",
              "num": "十位,个位|0-3|two",
              "name": "后二大小单双"
            },
            "q2": {
              "desc": "前二大小单双",
              "num": "万位,千位|0-3|two",
              "name": "前二大小单双"
            }
          }
        }
      },
      "rx2": {
        "zx": {
          "title": "任二直选",
          "method": {
            "fs": {
              "desc": "直选复式",
              "num": "万位,千位,百位,十位,个位|0-9|all",
              "name": "任二直选复式"
            },
            "ds": {
              "desc": "直选单式",
              "num": "input|zx|2",
              "name": "任二直选单式"
            },
            "hz": {
              "desc": "直选和值",
              "num": "直选和值|0-18|",
              "name": "任二直选和值"
            }
          }
        },
        "zux": {
          "title": "任二组选",
          "method": {
            "fs": {
              "desc": "组选复式",
              "num": "组选复式|0-9|all",
              "name": "任二组选复式"
            },
            "ds": {
              "desc": "组选单式",
              "num": "input|zux|2",
              "name": "任二组选单式"
            },
            "hz": {
              "desc": "组选和值",
              "num": "组选和值|1-17|",
              "name": "任二组选和值"
            }
          }
        }
      },
      "rx3": {
        "zx": {
          "title": "任三直选",
          "method": {
            "fs": {
              "desc": "复式",
              "num": "万位,千位,百位,十位,个位|0-9|all",
              "name": "任三直选复式"
            },
            "ds": {
              "desc": "单式",
              "num": "input|zx|3",
              "name": "任三直选单式"
            },
            "hz": {
              "desc": "和值",
              "num": "直选和值|0-27|",
              "name": "任三直选和值"
            }
          }
        },
        "zux": {
          "title": "任三组选",
          "method": {
            "z3": {
              "desc": "组三",
              "num": "组三|0-9|all",
              "name": "任三组选三"
            },
            "z6": {
              "desc": "组六",
              "num": "组六|0-9|all",
              "name": "任三组选六"
            },
            "hh": {
              "desc": "混合组选",
              "num": "input|hh|3",
              "name": "任三混合组选"
            },
            "hz": {
              "desc": "组选和值",
              "num": "组选和值|1-26|",
              "name": "任三组选和值"
            }
          }
        }
      },
      "rx4": {
        "zx": {
          "title": "任四直选",
          "method": {
            "fs": {
              "desc": "复式",
              "num": "万位,千位,百位,十位,个位|0-9|all",
              "name": "任四直选复式"
            },
            "ds": {
              "desc": "单式",
              "num": "input|zx|4",
              "name": "任四直选单式"
            }
          }
        },
        "zux": {
          "title": "任四组选",
          "method": {
            "z24": {
              "desc": "组选24",
              "num": "组24|0-9|all",
              "name": "任四组选24"
            },
            "z12": {
              "desc": "组选12",
              "num": "二重号,单号|0-9|all",
              "name": "任四组选12"
            },
            "z6": {
              "desc": "组选6",
              "num": "二重号|0-9|all",
              "name": "任四组选6"
            },
            "z4": {
              "desc": "组选4",
              "num": "三重号,单号|0-9|all",
              "name": "任四组选4"
            }
          }
        }
      }
    }
  },
  /* End 重庆时时彩 */
  /* Begin 江西时时彩 */
  "JXSSC": {
    "ltTab": {
      "wx": "五星",
      "sx": "四星",
      "hsm": "后三码",
      "qsm": "前三码",
      "zsm": "中三码",
      "em": "二码",
      "dwd": "定位胆",
      "bdd": "不定胆",
      "dxds": "大小单双",
      "rx": "任选玩法",
      "rx2": "任选二",
      "rx3": "任选三",
      "rx4": "任选四"
    },
    "ltMethod": {
      "wx": {
        "zx": {
          "title": "五星直选",
          "method": {
            "fs": {
              "desc": "复式",
              "num": "万位,千位,百位,十位,个位|0-9|all",
              "name": "五星直选复式"
            },
            "ds": {
              "desc": "单式",
              "num": "input|zx|5",
              "name": "五星直选单式"
            },
            "zh": {
              "desc": "组合",
              "num": "万位,千位,百位,十位,个位|0-9|all",
              "name": "五星直选组合"
            }
          }
        },
        "zux": {
          "title": "五星组选",
          "method": {
            "z120": {
              "desc": "组120",
              "num": "组选120|0-9|all",
              "name": "五星组选120"
            },
            "z60": {
              "desc": "组选60",
              "num": "二重号,单号|0-9|all",
              "name": "五星组选60"
            },
            "z30": {
              "desc": "组选30",
              "num": "二重号,单号|0-9|all",
              "name": "五星组选30"
            },
            "z20": {
              "desc": "组选20",
              "num": "三重号,单号|0-9|all",
              "name": "五星组选20"
            },
            "z10": {
              "desc": "组选10",
              "num": "三重号,二重号|0-9|all",
              "name": "五星组选10"
            },
            "z5": {
              "desc": "组选5",
              "num": "四重号,单号|0-9|all",
              "name": "五星组选5"
            }
          }
        }
      },
      "sx": {
        "zx": {
          "title": "四星直选",
          "method": {
            "fs": {
              "desc": "复式",
              "num": "千位,百位,十位,个位|0-9|all",
              "name": "四星直选复式"
            },
            "ds": {
              "desc": "单式",
              "num": "input|zx|4",
              "name": "四星直选单式"
            },
            "zh": {
              "desc": "组合",
              "num": "千位,百位,十位,个位|0-9|all",
              "name": "四星直选组合"
            }
          }
        },
        "zux": {
          "title": "四星组选",
          "method": {
            "z24": {
              "desc": "组选24",
              "num": "组24|0-9|all",
              "name": "四星组选24"
            },
            "z12": {
              "desc": "组选12",
              "num": "二重号,单号|0-9|all",
              "name": "四星组选12"
            },
            "z6": {
              "desc": "组选6",
              "num": "二重号|0-9|all",
              "name": "四星组选6"
            },
            "z4": {
              "desc": "组选4",
              "num": "三重号,单号|0-9|all",
              "name": "四星组选4"
            }
          }
        }
      },
      "hsm": {
        "zx": {
          "title": "后三直选",
          "method": {
            "fs": {
              "desc": "复式",
              "num": "百位,十位,个位|0-9|all",
              "name": "后三码直选复式"
            },
            "ds": {
              "desc": "单式",
              "num": "input|zx|3",
              "name": "后三码直选单式"
            },
            "hz": {
              "desc": "和值",
              "num": "直选和值|0-27|",
              "name": "后三码直选和值"
            }
          }
        },
        "zux": {
          "title": "后三组选",
          "method": {
            "z3": {
              "desc": "组三",
              "num": "组三|0-9|all",
              "name": "后三码组选三"
            },
            "z6": {
              "desc": "组六",
              "num": "组六|0-9|all",
              "name": "后三码组选六"
            },
            "hh": {
              "desc": "混合",
              "num": "input|hh|3",
              "name": "后三码混合组选"
            },
            "hz": {
              "desc": "和值",
              "num": "组选和值|1-26|",
              "name": "后三码组选和值"
            }
          }
        }
      },
      "qsm": {
        "zx": {
          "title": "前三直选",
          "method": {
            "fs": {
              "desc": "复式",
              "num": "万位,千位,百位|0-9|all",
              "name": "前三码直选复式"
            },
            "ds": {
              "desc": "单式",
              "num": "input|zx|3",
              "name": "前三码直选单式"
            },
            "hz": {
              "desc": "和值",
              "num": "直选和值|0-27|",
              "name": "前三码直选和值"
            }
          }
        },
        "zux": {
          "title": "前三组选",
          "method": {
            "z3": {
              "desc": "组三",
              "num": "组三|0-9|all",
              "name": "前三码组选三"
            },
            "z6": {
              "desc": "组六",
              "num": "组六|0-9|all",
              "name": "前三码组选六"
            },
            "hh": {
              "desc": "混合",
              "num": "input|hh|3",
              "name": "前三码混合组选"
            },
            "hz": {
              "desc": "和值",
              "num": "组选和值|1-26|",
              "name": "前三码组选和值"
            }
          }
        }
      },
      "zsm": {
        "zx": {
          "title": "中三直选",
          "method": {
            "fs": {
              "desc": "复式",
              "num": "千位,百位,十位|0-9|all",
              "name": "中三码直选复式"
            },
            "ds": {
              "desc": "单式",
              "num": "input|zx|3",
              "name": "中三码直选单式"
            },
            "hz": {
              "desc": "和值",
              "num": "直选和值|0-27|",
              "name": "中三码直选和值"
            }
          }
        },
        "zux": {
          "title": "中三组选",
          "method": {
            "z3": {
              "desc": "组三",
              "num": "组三|0-9|all",
              "name": "中三码组选三"
            },
            "z6": {
              "desc": "组六",
              "num": "组六|0-9|all",
              "name": "中三码组选六"
            },
            "hh": {
              "desc": "混合",
              "num": "input|hh|3",
              "name": "中三码混合组选"
            },
            "hz": {
              "desc": "和值",
              "num": "组选和值|1-26|",
              "name": "中三码组选和值"
            }
          }
        }
      },
      "em": {
        "zx": {
          "title": "直选",
          "method": {
            "hfs": {
              "desc": "后二直选(复式)",
              "num": "十位,个位|0-9|all",
              "name": "后二直选复式"
            },
            "hds": {
              "desc": "后二直选(单式)",
              "num": "input|zx|2",
              "name": "后二直选单式"
            },
            "hhz": {
              "desc": "后二直选(和值)",
              "num": "和值|0-18|",
              "name": "后二直选和值"
            },
            "qfs": {
              "desc": "前二直选(复式)",
              "num": "万位,千位|0-9|all",
              "name": "前二直选复式"
            },
            "qds": {
              "desc": "前二直选(单式)",
              "num": "input|zx|2",
              "name": "前二直选单式"
            },
            "qhz": {
              "desc": "前二直选(和值)",
              "num": "和值|0-18|",
              "name": "前二直选和值"
            }
          }
        },
        "zux": {
          "title": "组选",
          "method": {
            "hfs": {
              "desc": "后二组选(复式)",
              "num": "组选|0-9|all",
              "name": "后二组选复式"
            },
            "hds": {
              "desc": "后二组选(单式)",
              "num": "input|zux|2",
              "name": "后二组选单式"
            },
            "hhz": {
              "desc": "后二组选(和值)",
              "num": "和值|1-17|",
              "name": "后二组选和值"
            },
            "qfs": {
              "desc": "前二组选(复式)",
              "num": "组选|0-9|all",
              "name": "前二组选复式"
            },
            "qds": {
              "desc": "前二组选(单式)",
              "num": "input|zux|2",
              "name": "前二组选单式"
            },
            "qhz": {
              "desc": "前二组选(和值)",
              "num": "和值|1-17|",
              "name": "前二组选和值"
            }
          }
        }
      },
      "dwd": {
        "dwd": {
          "title": "定位胆",
          "method": {
            "dwd": {
              "desc": "定位胆",
              "num": "万位,千位,百位,十位,个位|0-9|all",
              "name": "定位胆"
            }
          }
        }
      },
      "bdd": {
        "bdd": {
          "title": "三星不定胆",
          "method": {
            "hs1": {
              "desc": "后三一码",
              "num": "不定胆|0-9|all",
              "name": "后三一码不定胆"
            },
            "hs2": {
              "desc": "后三二码",
              "num": "不定胆|0-9|all",
              "name": "后三二码不定胆"
            },
            "qs1": {
              "desc": "前三一码",
              "num": "不定胆|0-9|all",
              "name": "前三一码不定胆"
            },
            "qs2": {
              "desc": "前三二码",
              "num": "不定胆|0-9|all",
              "name": "前三二码不定胆"
            }
          }
        }
      },
      "dxds": {
        "dxds": {
          "title": "大小单双",
          "method": {
            "h2": {
              "desc": "后二大小单双",
              "num": "十位,个位|0-3|two",
              "name": "后二大小单双"
            },
            "q2": {
              "desc": "前二大小单双",
              "num": "万位,千位|0-3|two",
              "name": "前二大小单双"
            }
          }
        }
      },
      "rx2": {
        "zx": {
          "title": "任二直选",
          "method": {
            "fs": {
              "desc": "直选复式",
              "num": "万位,千位,百位,十位,个位|0-9|all",
              "name": "任二直选复式"
            },
            "ds": {
              "desc": "直选单式",
              "num": "input|zx|2",
              "name": "任二直选单式"
            },
            "hz": {
              "desc": "直选和值",
              "num": "直选和值|0-18|",
              "name": "任二直选和值"
            }
          }
        },
        "zux": {
          "title": "任二组选",
          "method": {
            "fs": {
              "desc": "组选复式",
              "num": "组选复式|0-9|all",
              "name": "任二组选复式"
            },
            "ds": {
              "desc": "组选单式",
              "num": "input|zux|2",
              "name": "任二组选单式"
            },
            "hz": {
              "desc": "组选和值",
              "num": "组选和值|1-17|",
              "name": "任二组选和值"
            }
          }
        }
      },
      "rx3": {
        "zx": {
          "title": "任三直选",
          "method": {
            "fs": {
              "desc": "复式",
              "num": "万位,千位,百位,十位,个位|0-9|all",
              "name": "任三直选复式"
            },
            "ds": {
              "desc": "单式",
              "num": "input|zx|3",
              "name": "任三直选单式"
            },
            "hz": {
              "desc": "和值",
              "num": "直选和值|0-27|",
              "name": "任三直选和值"
            }
          }
        },
        "zux": {
          "title": "任三组选",
          "method": {
            "z3": {
              "desc": "组三",
              "num": "组三|0-9|all",
              "name": "任三组选三"
            },
            "z6": {
              "desc": "组六",
              "num": "组六|0-9|all",
              "name": "任三组选六"
            },
            "hh": {
              "desc": "混合组选",
              "num": "input|hh|3",
              "name": "任三混合组选"
            },
            "hz": {
              "desc": "组选和值",
              "num": "组选和值|1-26|",
              "name": "任三组选和值"
            }
          }
        }
      },
      "rx4": {
        "zx": {
          "title": "任四直选",
          "method": {
            "fs": {
              "desc": "复式",
              "num": "万位,千位,百位,十位,个位|0-9|all",
              "name": "任四直选复式"
            },
            "ds": {
              "desc": "单式",
              "num": "input|zx|4",
              "name": "任四直选单式"
            }
          }
        },
        "zux": {
          "title": "任四组选",
          "method": {
            "z24": {
              "desc": "组选24",
              "num": "组24|0-9|all",
              "name": "任四组选24"
            },
            "z12": {
              "desc": "组选12",
              "num": "二重号,单号|0-9|all",
              "name": "任四组选12"
            },
            "z6": {
              "desc": "组选6",
              "num": "二重号|0-9|all",
              "name": "任四组选6"
            },
            "z4": {
              "desc": "组选4",
              "num": "三重号,单号|0-9|all",
              "name": "任四组选4"
            }
          }
        }
      }
    }
  },
  /* End 江西时时彩 */
  /* Begin 新疆时时彩 */
  "XJSSC": {
    "ltTab": {
      "wx": "五星",
      "sx": "四星",
      "hsm": "后三码",
      "qsm": "前三码",
      "zsm": "中三码",
      "em": "二码",
      "dwd": "定位胆",
      "bdd": "不定胆",
      "dxds": "大小单双",
      "rx": "任选玩法",
      "rx2": "任选二",
      "rx3": "任选三",
      "rx4": "任选四"
    },
    "ltMethod": {
      "wx": {
        "zx": {
          "title": "五星直选",
          "method": {
            "fs": {
              "desc": "复式",
              "num": "万位,千位,百位,十位,个位|0-9|all",
              "name": "五星直选复式"
            },
            "ds": {
              "desc": "单式",
              "num": "input|zx|5",
              "name": "五星直选单式"
            },
            "zh": {
              "desc": "组合",
              "num": "万位,千位,百位,十位,个位|0-9|all",
              "name": "五星直选组合"
            }
          }
        },
        "zux": {
          "title": "五星组选",
          "method": {
            "z120": {
              "desc": "组120",
              "num": "组选120|0-9|all",
              "name": "五星组选120"
            },
            "z60": {
              "desc": "组选60",
              "num": "二重号,单号|0-9|all",
              "name": "五星组选60"
            },
            "z30": {
              "desc": "组选30",
              "num": "二重号,单号|0-9|all",
              "name": "五星组选30"
            },
            "z20": {
              "desc": "组选20",
              "num": "三重号,单号|0-9|all",
              "name": "五星组选20"
            },
            "z10": {
              "desc": "组选10",
              "num": "三重号,二重号|0-9|all",
              "name": "五星组选10"
            },
            "z5": {
              "desc": "组选5",
              "num": "四重号,单号|0-9|all",
              "name": "五星组选5"
            }
          }
        }
      },
      "sx": {
        "zx": {
          "title": "四星直选",
          "method": {
            "fs": {
              "desc": "复式",
              "num": "千位,百位,十位,个位|0-9|all",
              "name": "四星直选复式"
            },
            "ds": {
              "desc": "单式",
              "num": "input|zx|4",
              "name": "四星直选单式"
            },
            "zh": {
              "desc": "组合",
              "num": "千位,百位,十位,个位|0-9|all",
              "name": "四星直选组合"
            }
          }
        },
        "zux": {
          "title": "四星组选",
          "method": {
            "z24": {
              "desc": "组选24",
              "num": "组24|0-9|all",
              "name": "四星组选24"
            },
            "z12": {
              "desc": "组选12",
              "num": "二重号,单号|0-9|all",
              "name": "四星组选12"
            },
            "z6": {
              "desc": "组选6",
              "num": "二重号|0-9|all",
              "name": "四星组选6"
            },
            "z4": {
              "desc": "组选4",
              "num": "三重号,单号|0-9|all",
              "name": "四星组选4"
            }
          }
        }
      },
      "hsm": {
        "zx": {
          "title": "后三直选",
          "method": {
            "fs": {
              "desc": "复式",
              "num": "百位,十位,个位|0-9|all",
              "name": "后三码直选复式"
            },
            "ds": {
              "desc": "单式",
              "num": "input|zx|3",
              "name": "后三码直选单式"
            },
            "hz": {
              "desc": "和值",
              "num": "直选和值|0-27|",
              "name": "后三码直选和值"
            }
          }
        },
        "zux": {
          "title": "后三组选",
          "method": {
            "z3": {
              "desc": "组三",
              "num": "组三|0-9|all",
              "name": "后三码组选三"
            },
            "z6": {
              "desc": "组六",
              "num": "组六|0-9|all",
              "name": "后三码组选六"
            },
            "hh": {
              "desc": "混合",
              "num": "input|hh|3",
              "name": "后三码混合组选"
            },
            "hz": {
              "desc": "和值",
              "num": "组选和值|1-26|",
              "name": "后三码组选和值"
            }
          }
        }
      },
      "qsm": {
        "zx": {
          "title": "前三直选",
          "method": {
            "fs": {
              "desc": "复式",
              "num": "万位,千位,百位|0-9|all",
              "name": "前三码直选复式"
            },
            "ds": {
              "desc": "单式",
              "num": "input|zx|3",
              "name": "前三码直选单式"
            },
            "hz": {
              "desc": "和值",
              "num": "直选和值|0-27|",
              "name": "前三码直选和值"
            }
          }
        },
        "zux": {
          "title": "前三组选",
          "method": {
            "z3": {
              "desc": "组三",
              "num": "组三|0-9|all",
              "name": "前三码组选三"
            },
            "z6": {
              "desc": "组六",
              "num": "组六|0-9|all",
              "name": "前三码组选六"
            },
            "hh": {
              "desc": "混合",
              "num": "input|hh|3",
              "name": "前三码混合组选"
            },
            "hz": {
              "desc": "和值",
              "num": "组选和值|1-26|",
              "name": "前三码组选和值"
            }
          }
        }
      },
      "zsm": {
        "zx": {
          "title": "中三直选",
          "method": {
            "fs": {
              "desc": "复式",
              "num": "千位,百位,十位|0-9|all",
              "name": "中三码直选复式"
            },
            "ds": {
              "desc": "单式",
              "num": "input|zx|3",
              "name": "中三码直选单式"
            },
            "hz": {
              "desc": "和值",
              "num": "直选和值|0-27|",
              "name": "中三码直选和值"
            }
          }
        },
        "zux": {
          "title": "中三组选",
          "method": {
            "z3": {
              "desc": "组三",
              "num": "组三|0-9|all",
              "name": "中三码组选三"
            },
            "z6": {
              "desc": "组六",
              "num": "组六|0-9|all",
              "name": "中三码组选六"
            },
            "hh": {
              "desc": "混合",
              "num": "input|hh|3",
              "name": "中三码混合组选"
            },
            "hz": {
              "desc": "和值",
              "num": "组选和值|1-26|",
              "name": "中三码组选和值"
            }
          }
        }
      },
      "em": {
        "zx": {
          "title": "直选",
          "method": {
            "hfs": {
              "desc": "后二直选(复式)",
              "num": "十位,个位|0-9|all",
              "name": "后二直选复式"
            },
            "hds": {
              "desc": "后二直选(单式)",
              "num": "input|zx|2",
              "name": "后二直选单式"
            },
            "hhz": {
              "desc": "后二直选(和值)",
              "num": "和值|0-18|",
              "name": "后二直选和值"
            },
            "qfs": {
              "desc": "前二直选(复式)",
              "num": "万位,千位|0-9|all",
              "name": "前二直选复式"
            },
            "qds": {
              "desc": "前二直选(单式)",
              "num": "input|zx|2",
              "name": "前二直选单式"
            },
            "qhz": {
              "desc": "前二直选(和值)",
              "num": "和值|0-18|",
              "name": "前二直选和值"
            }
          }
        },
        "zux": {
          "title": "组选",
          "method": {
            "hfs": {
              "desc": "后二组选(复式)",
              "num": "组选|0-9|all",
              "name": "后二组选复式"
            },
            "hds": {
              "desc": "后二组选(单式)",
              "num": "input|zux|2",
              "name": "后二组选单式"
            },
            "hhz": {
              "desc": "后二组选(和值)",
              "num": "和值|1-17|",
              "name": "后二组选和值"
            },
            "qfs": {
              "desc": "前二组选(复式)",
              "num": "组选|0-9|all",
              "name": "前二组选复式"
            },
            "qds": {
              "desc": "前二组选(单式)",
              "num": "input|zux|2",
              "name": "前二组选单式"
            },
            "qhz": {
              "desc": "前二组选(和值)",
              "num": "和值|1-17|",
              "name": "前二组选和值"
            }
          }
        }
      },
      "dwd": {
        "dwd": {
          "title": "定位胆",
          "method": {
            "dwd": {
              "desc": "定位胆",
              "num": "万位,千位,百位,十位,个位|0-9|all",
              "name": "定位胆"
            }
          }
        }
      },
      "bdd": {
        "bdd": {
          "title": "三星不定胆",
          "method": {
            "hs1": {
              "desc": "后三一码",
              "num": "不定胆|0-9|all",
              "name": "后三一码不定胆"
            },
            "hs2": {
              "desc": "后三二码",
              "num": "不定胆|0-9|all",
              "name": "后三二码不定胆"
            },
            "qs1": {
              "desc": "前三一码",
              "num": "不定胆|0-9|all",
              "name": "前三一码不定胆"
            },
            "qs2": {
              "desc": "前三二码",
              "num": "不定胆|0-9|all",
              "name": "前三二码不定胆"
            }
          }
        }
      },
      "dxds": {
        "dxds": {
          "title": "大小单双",
          "method": {
            "h2": {
              "desc": "后二大小单双",
              "num": "十位,个位|0-3|two",
              "name": "后二大小单双"
            },
            "q2": {
              "desc": "前二大小单双",
              "num": "万位,千位|0-3|two",
              "name": "前二大小单双"
            }
          }
        }
      },
      "rx2": {
        "zx": {
          "title": "任二直选",
          "method": {
            "fs": {
              "desc": "直选复式",
              "num": "万位,千位,百位,十位,个位|0-9|all",
              "name": "任二直选复式"
            },
            "ds": {
              "desc": "直选单式",
              "num": "input|zx|2",
              "name": "任二直选单式"
            },
            "hz": {
              "desc": "直选和值",
              "num": "直选和值|0-18|",
              "name": "任二直选和值"
            }
          }
        },
        "zux": {
          "title": "任二组选",
          "method": {
            "fs": {
              "desc": "组选复式",
              "num": "组选复式|0-9|all",
              "name": "任二组选复式"
            },
            "ds": {
              "desc": "组选单式",
              "num": "input|zux|2",
              "name": "任二组选单式"
            },
            "hz": {
              "desc": "组选和值",
              "num": "组选和值|1-17|",
              "name": "任二组选和值"
            }
          }
        }
      },
      "rx3": {
        "zx": {
          "title": "任三直选",
          "method": {
            "fs": {
              "desc": "复式",
              "num": "万位,千位,百位,十位,个位|0-9|all",
              "name": "任三直选复式"
            },
            "ds": {
              "desc": "单式",
              "num": "input|zx|3",
              "name": "任三直选单式"
            },
            "hz": {
              "desc": "和值",
              "num": "直选和值|0-27|",
              "name": "任三直选和值"
            }
          }
        },
        "zux": {
          "title": "任三组选",
          "method": {
            "z3": {
              "desc": "组三",
              "num": "组三|0-9|all",
              "name": "任三组选三"
            },
            "z6": {
              "desc": "组六",
              "num": "组六|0-9|all",
              "name": "任三组选六"
            },
            "hh": {
              "desc": "混合组选",
              "num": "input|hh|3",
              "name": "任三混合组选"
            },
            "hz": {
              "desc": "组选和值",
              "num": "组选和值|1-26|",
              "name": "任三组选和值"
            }
          }
        }
      },
      "rx4": {
        "zx": {
          "title": "任四直选",
          "method": {
            "fs": {
              "desc": "复式",
              "num": "万位,千位,百位,十位,个位|0-9|all",
              "name": "任四直选复式"
            },
            "ds": {
              "desc": "单式",
              "num": "input|zx|4",
              "name": "任四直选单式"
            }
          }
        },
        "zux": {
          "title": "任四组选",
          "method": {
            "z24": {
              "desc": "组选24",
              "num": "组24|0-9|all",
              "name": "任四组选24"
            },
            "z12": {
              "desc": "组选12",
              "num": "二重号,单号|0-9|all",
              "name": "任四组选12"
            },
            "z6": {
              "desc": "组选6",
              "num": "二重号|0-9|all",
              "name": "任四组选6"
            },
            "z4": {
              "desc": "组选4",
              "num": "三重号,单号|0-9|all",
              "name": "任四组选4"
            }
          }
        }
      }
    }
  },
  /* End 新疆时时彩 */
  /* Begin 广东11选5 */
  "GD11Y": {
    "ltTab": {
      "sm": "三码",
      "em": "二码",
      "bdd": "不定胆",
      "dwd": "定位胆",
      "rxfs": "任选复式",
      "rxds": "任选单式"
    },
    "ltMethod": {
      "sm": {
        "sm": {
          "title": "三码",
          "method": {
            "zxfs": {
              "desc": "前三直选复式",
              "num": "第一位,第二位,第三位|1-11|all",
              "name": "前三直选复式"
            },
            "zxds": {
              "desc": "前三直选单式",
              "num": "input|zx11|3",
              "name": "前三直选单式"
            },
            "zuxfs": {
              "desc": "前三组选复式",
              "num": "前三组选|1-11|all",
              "name": "前三组选复式"
            },
            "zuxds": {
              "desc": "前三组选单式",
              "num": "input|zux11|3",
              "name": "前三组选单式"
            }
          }
        }
      },
      "em": {
        "em": {
          "title": "二码",
          "method": {
            "zxfs": {
              "desc": "前二直选复式",
              "num": "第一位,第二位|1-11|all",
              "name": "前二直选复式"
            },
            "zxds": {
              "desc": "前二直选单式",
              "num": "input|zx11|2",
              "name": "前二直选单式"
            },
            "zuxfs": {
              "desc": "前二组选复式",
              "num": "前二组选|1-11|all",
              "name": "前二组选复式"
            },
            "zuxds": {
              "desc": "前二组选单式",
              "num": "input|zux11|2",
              "name": "前二组选单式"
            }
          }
        }
      },
      "bdd": {
        "bdd": {
          "title": "不定胆",
          "method": {
            "bdd11y": {
              "desc": "前三位",
              "num": "前三位|1-11|all",
              "name": "前三位不定胆"
            }
          }
        }
      },
      "dwd": {
        "dwd": {
          "title": "定位胆",
          "method": {
            "dwd11y": {
              "desc": "定位胆",
              "num": "第一位,第二位,第三位|1-11|all",
              "name": "定位胆"
            }
          }
        }
      },
      "rxfs": {
        "rxfs": {
          "title": "任选复式",
          "method": {
            "1z1": {
              "desc": "一中一",
              "num": "选一中1|1-11|all",
              "name": "任选复式一中一"
            },
            "2z2": {
              "desc": "二中二",
              "num": "选二中2|1-11|all",
              "name": "任选复式二中二"
            },
            "3z3": {
              "desc": "三中三",
              "num": "选三中3|1-11|all",
              "name": "任选复式三中三"
            },
            "4z4": {
              "desc": "四中四",
              "num": "选四中4|1-11|all",
              "name": "任选复式四中四"
            },
            "5z5": {
              "desc": "五中五",
              "num": "选五中5|1-11|all",
              "name": "任选复式五中五"
            },
            "6z5": {
              "desc": "六中五",
              "num": "选六中5|1-11|all",
              "name": "任选复式六中五"
            },
            "7z5": {
              "desc": "七中五",
              "num": "选七中5|1-11|all",
              "name": "任选复式七中五"
            },
            "8z5": {
              "desc": "八中五",
              "num": "选八中5|1-11|all",
              "name": "任选复式八中五"
            }
          }
        }
      },
      "rxds": {
        "rxds": {
          "title": "任选单式",
          "method": {
            "1z1": {
              "desc": "一中一",
              "num": "input|rx|1",
              "name": "任选单式一中一"
            },
            "2z2": {
              "desc": "二中二",
              "num": "input|rx|2",
              "name": "任选单式二中二"
            },
            "3z3": {
              "desc": "三中三",
              "num": "input|rx|3",
              "name": "任选单式三中三"
            },
            "4z4": {
              "desc": "四中四",
              "num": "input|rx|4",
              "name": "任选单式四中四"
            },
            "5z5": {
              "desc": "五中五",
              "num": "input|rx|5",
              "name": "任选单式五中五"
            },
            "6z5": {
              "desc": "六中五",
              "num": "input|rx|6",
              "name": "任选单式六中五"
            },
            "7z5": {
              "desc": "七中五",
              "num": "input|rx|7",
              "name": "任选单式七中五"
            },
            "8z5": {
              "desc": "八中五",
              "num": "input|rx|8",
              "name": "任选单式八中五"
            }
          }
        }
      }
    }
  },
  /* End 广东11选5 */
  /* Begin 重庆11选5 */
  "CQ11Y": {
    "ltTab": {
      "sm": "三码",
      "em": "二码",
      "bdd": "不定胆",
      "dwd": "定位胆",
      "rxfs": "任选复式",
      "rxds": "任选单式"
    },
    "ltMethod": {
      "sm": {
        "sm": {
          "title": "三码",
          "method": {
            "zxfs": {
              "desc": "前三直选复式",
              "num": "第一位,第二位,第三位|1-11|all",
              "name": "前三直选复式"
            },
            "zxds": {
              "desc": "前三直选单式",
              "num": "input|zx11|3",
              "name": "前三直选单式"
            },
            "zuxfs": {
              "desc": "前三组选复式",
              "num": "前三组选|1-11|all",
              "name": "前三组选复式"
            },
            "zuxds": {
              "desc": "前三组选单式",
              "num": "input|zux11|3",
              "name": "前三组选单式"
            }
          }
        }
      },
      "em": {
        "em": {
          "title": "二码",
          "method": {
            "zxfs": {
              "desc": "前二直选复式",
              "num": "第一位,第二位|1-11|all",
              "name": "前二直选复式"
            },
            "zxds": {
              "desc": "前二直选单式",
              "num": "input|zx11|2",
              "name": "前二直选单式"
            },
            "zuxfs": {
              "desc": "前二组选复式",
              "num": "前二组选|1-11|all",
              "name": "前二组选复式"
            },
            "zuxds": {
              "desc": "前二组选单式",
              "num": "input|zux11|2",
              "name": "前二组选单式"
            }
          }
        }
      },
      "bdd": {
        "bdd": {
          "title": "不定胆",
          "method": {
            "bdd11y": {
              "desc": "前三位",
              "num": "前三位|1-11|all",
              "name": "前三位不定胆"
            }
          }
        }
      },
      "dwd": {
        "dwd": {
          "title": "定位胆",
          "method": {
            "dwd11y": {
              "desc": "定位胆",
              "num": "第一位,第二位,第三位|1-11|all",
              "name": "定位胆"
            }
          }
        }
      },
      "rxfs": {
        "rxfs": {
          "title": "任选复式",
          "method": {
            "1z1": {
              "desc": "一中一",
              "num": "选一中1|1-11|all",
              "name": "任选复式一中一"
            },
            "2z2": {
              "desc": "二中二",
              "num": "选二中2|1-11|all",
              "name": "任选复式二中二"
            },
            "3z3": {
              "desc": "三中三",
              "num": "选三中3|1-11|all",
              "name": "任选复式三中三"
            },
            "4z4": {
              "desc": "四中四",
              "num": "选四中4|1-11|all",
              "name": "任选复式四中四"
            },
            "5z5": {
              "desc": "五中五",
              "num": "选五中5|1-11|all",
              "name": "任选复式五中五"
            },
            "6z5": {
              "desc": "六中五",
              "num": "选六中5|1-11|all",
              "name": "任选复式六中五"
            },
            "7z5": {
              "desc": "七中五",
              "num": "选七中5|1-11|all",
              "name": "任选复式七中五"
            },
            "8z5": {
              "desc": "八中五",
              "num": "选八中5|1-11|all",
              "name": "任选复式八中五"
            }
          }
        }
      },
      "rxds": {
        "rxds": {
          "title": "任选单式",
          "method": {
            "1z1": {
              "desc": "一中一",
              "num": "input|rx|1",
              "name": "任选单式一中一"
            },
            "2z2": {
              "desc": "二中二",
              "num": "input|rx|2",
              "name": "任选单式二中二"
            },
            "3z3": {
              "desc": "三中三",
              "num": "input|rx|3",
              "name": "任选单式三中三"
            },
            "4z4": {
              "desc": "四中四",
              "num": "input|rx|4",
              "name": "任选单式四中四"
            },
            "5z5": {
              "desc": "五中五",
              "num": "input|rx|5",
              "name": "任选单式五中五"
            },
            "6z5": {
              "desc": "六中五",
              "num": "input|rx|6",
              "name": "任选单式六中五"
            },
            "7z5": {
              "desc": "七中五",
              "num": "input|rx|7",
              "name": "任选单式七中五"
            },
            "8z5": {
              "desc": "八中五",
              "num": "input|rx|8",
              "name": "任选单式八中五"
            }
          }
        }
      }
    }
  },
  /* End 重庆11选5 */
  /* Begin 山东11选5 */
  "SD11Y": {
    "ltTab": {
      "sm": "三码",
      "em": "二码",
      "bdd": "不定胆",
      "dwd": "定位胆",
      "rxfs": "任选复式",
      "rxds": "任选单式"
    },
    "ltMethod": {
      "sm": {
        "sm": {
          "title": "三码",
          "method": {
            "zxfs": {
              "desc": "前三直选复式",
              "num": "第一位,第二位,第三位|1-11|all",
              "name": "前三直选复式"
            },
            "zxds": {
              "desc": "前三直选单式",
              "num": "input|zx11|3",
              "name": "前三直选单式"
            },
            "zuxfs": {
              "desc": "前三组选复式",
              "num": "前三组选|1-11|all",
              "name": "前三组选复式"
            },
            "zuxds": {
              "desc": "前三组选单式",
              "num": "input|zux11|3",
              "name": "前三组选单式"
            }
          }
        }
      },
      "em": {
        "em": {
          "title": "二码",
          "method": {
            "zxfs": {
              "desc": "前二直选复式",
              "num": "第一位,第二位|1-11|all",
              "name": "前二直选复式"
            },
            "zxds": {
              "desc": "前二直选单式",
              "num": "input|zx11|2",
              "name": "前二直选单式"
            },
            "zuxfs": {
              "desc": "前二组选复式",
              "num": "前二组选|1-11|all",
              "name": "前二组选复式"
            },
            "zuxds": {
              "desc": "前二组选单式",
              "num": "input|zux11|2",
              "name": "前二组选单式"
            }
          }
        }
      },
      "bdd": {
        "bdd": {
          "title": "不定胆",
          "method": {
            "bdd11y": {
              "desc": "前三位",
              "num": "前三位|1-11|all",
              "name": "前三位不定胆"
            }
          }
        }
      },
      "dwd": {
        "dwd": {
          "title": "定位胆",
          "method": {
            "dwd11y": {
              "desc": "定位胆",
              "num": "第一位,第二位,第三位|1-11|all",
              "name": "定位胆"
            }
          }
        }
      },
      "rxfs": {
        "rxfs": {
          "title": "任选复式",
          "method": {
            "1z1": {
              "desc": "一中一",
              "num": "选一中1|1-11|all",
              "name": "任选复式一中一"
            },
            "2z2": {
              "desc": "二中二",
              "num": "选二中2|1-11|all",
              "name": "任选复式二中二"
            },
            "3z3": {
              "desc": "三中三",
              "num": "选三中3|1-11|all",
              "name": "任选复式三中三"
            },
            "4z4": {
              "desc": "四中四",
              "num": "选四中4|1-11|all",
              "name": "任选复式四中四"
            },
            "5z5": {
              "desc": "五中五",
              "num": "选五中5|1-11|all",
              "name": "任选复式五中五"
            },
            "6z5": {
              "desc": "六中五",
              "num": "选六中5|1-11|all",
              "name": "任选复式六中五"
            },
            "7z5": {
              "desc": "七中五",
              "num": "选七中5|1-11|all",
              "name": "任选复式七中五"
            },
            "8z5": {
              "desc": "八中五",
              "num": "选八中5|1-11|all",
              "name": "任选复式八中五"
            }
          }
        }
      },
      "rxds": {
        "rxds": {
          "title": "任选单式",
          "method": {
            "1z1": {
              "desc": "一中一",
              "num": "input|rx|1",
              "name": "任选单式一中一"
            },
            "2z2": {
              "desc": "二中二",
              "num": "input|rx|2",
              "name": "任选单式二中二"
            },
            "3z3": {
              "desc": "三中三",
              "num": "input|rx|3",
              "name": "任选单式三中三"
            },
            "4z4": {
              "desc": "四中四",
              "num": "input|rx|4",
              "name": "任选单式四中四"
            },
            "5z5": {
              "desc": "五中五",
              "num": "input|rx|5",
              "name": "任选单式五中五"
            },
            "6z5": {
              "desc": "六中五",
              "num": "input|rx|6",
              "name": "任选单式六中五"
            },
            "7z5": {
              "desc": "七中五",
              "num": "input|rx|7",
              "name": "任选单式七中五"
            },
            "8z5": {
              "desc": "八中五",
              "num": "input|rx|8",
              "name": "任选单式八中五"
            }
          }
        }
      }
    }
  },
  /* End 山东11选5 */
  /* Begin 江西11选5 */
  "JX11Y": {
    "ltTab": {
      "sm": "三码",
      "em": "二码",
      "bdd": "不定胆",
      "dwd": "定位胆",
      "rxfs": "任选复式",
      "rxds": "任选单式"
    },
    "ltMethod": {
      "sm": {
        "sm": {
          "title": "三码",
          "method": {
            "zxfs": {
              "desc": "前三直选复式",
              "num": "第一位,第二位,第三位|1-11|all",
              "name": "前三直选复式"
            },
            "zxds": {
              "desc": "前三直选单式",
              "num": "input|zx11|3",
              "name": "前三直选单式"
            },
            "zuxfs": {
              "desc": "前三组选复式",
              "num": "前三组选|1-11|all",
              "name": "前三组选复式"
            },
            "zuxds": {
              "desc": "前三组选单式",
              "num": "input|zux11|3",
              "name": "前三组选单式"
            }
          }
        }
      },
      "em": {
        "em": {
          "title": "二码",
          "method": {
            "zxfs": {
              "desc": "前二直选复式",
              "num": "第一位,第二位|1-11|all",
              "name": "前二直选复式"
            },
            "zxds": {
              "desc": "前二直选单式",
              "num": "input|zx11|2",
              "name": "前二直选单式"
            },
            "zuxfs": {
              "desc": "前二组选复式",
              "num": "前二组选|1-11|all",
              "name": "前二组选复式"
            },
            "zuxds": {
              "desc": "前二组选单式",
              "num": "input|zux11|2",
              "name": "前二组选单式"
            }
          }
        }
      },
      "bdd": {
        "bdd": {
          "title": "不定胆",
          "method": {
            "bdd11y": {
              "desc": "前三位",
              "num": "前三位|1-11|all",
              "name": "前三位不定胆"
            }
          }
        }
      },
      "dwd": {
        "dwd": {
          "title": "定位胆",
          "method": {
            "dwd11y": {
              "desc": "定位胆",
              "num": "第一位,第二位,第三位|1-11|all",
              "name": "定位胆"
            }
          }
        }
      },
      "rxfs": {
        "rxfs": {
          "title": "任选复式",
          "method": {
            "1z1": {
              "desc": "一中一",
              "num": "选一中1|1-11|all",
              "name": "任选复式一中一"
            },
            "2z2": {
              "desc": "二中二",
              "num": "选二中2|1-11|all",
              "name": "任选复式二中二"
            },
            "3z3": {
              "desc": "三中三",
              "num": "选三中3|1-11|all",
              "name": "任选复式三中三"
            },
            "4z4": {
              "desc": "四中四",
              "num": "选四中4|1-11|all",
              "name": "任选复式四中四"
            },
            "5z5": {
              "desc": "五中五",
              "num": "选五中5|1-11|all",
              "name": "任选复式五中五"
            },
            "6z5": {
              "desc": "六中五",
              "num": "选六中5|1-11|all",
              "name": "任选复式六中五"
            },
            "7z5": {
              "desc": "七中五",
              "num": "选七中5|1-11|all",
              "name": "任选复式七中五"
            },
            "8z5": {
              "desc": "八中五",
              "num": "选八中5|1-11|all",
              "name": "任选复式八中五"
            }
          }
        }
      },
      "rxds": {
        "rxds": {
          "title": "任选单式",
          "method": {
            "1z1": {
              "desc": "一中一",
              "num": "input|rx|1",
              "name": "任选单式一中一"
            },
            "2z2": {
              "desc": "二中二",
              "num": "input|rx|2",
              "name": "任选单式二中二"
            },
            "3z3": {
              "desc": "三中三",
              "num": "input|rx|3",
              "name": "任选单式三中三"
            },
            "4z4": {
              "desc": "四中四",
              "num": "input|rx|4",
              "name": "任选单式四中四"
            },
            "5z5": {
              "desc": "五中五",
              "num": "input|rx|5",
              "name": "任选单式五中五"
            },
            "6z5": {
              "desc": "六中五",
              "num": "input|rx|6",
              "name": "任选单式六中五"
            },
            "7z5": {
              "desc": "七中五",
              "num": "input|rx|7",
              "name": "任选单式七中五"
            },
            "8z5": {
              "desc": "八中五",
              "num": "input|rx|8",
              "name": "任选单式八中五"
            }
          }
        }
      }
    }
  },
  /* End 江西11选5 */
  /* Begin 3D福彩 */
  "3DFC": {
    "ltTab": {
      "sm": "三码",
      "em": "二码",
      "dwd": "定位胆",
      "bdd": "不定胆"
    },
    "ltMethod": {
      "sm": {
        "zx": {
          "title": "直选",
          "method": {
            "fs": {
              "desc": "复式",
              "num": "百位,十位,个位|0-9|all",
              "name": "三码直选复式"
            },
            "ds": {
              "desc": "单式",
              "num": "input|zx|3",
              "name": "三码直选单式"
            },
            "hz": {
              "desc": "和值",
              "num": "直选和值|0-27|",
              "name": "三码直选和值"
            }
          }
        },
        "zux": {
          "title": "组选",
          "method": {
            "z3": {
              "desc": "组三",
              "num": "组三|0-9|all",
              "name": "三码组选三"
            },
            "z6": {
              "desc": "组六",
              "num": "组六|0-9|all",
              "name": "三码组选六"
            },
            "hh": {
              "desc": "混合",
              "num": "input|hh|3",
              "name": "三码混合组选"
            },
            "hz": {
              "desc": "和值",
              "num": "组选和值|1-26|",
              "name": "三码组选和值"
            }
          }
        }
      },
      "em": {
        "zx": {
          "title": "直选",
          "method": {
            "hfs": {
              "desc": "后二直选复式",
              "num": "十位,个位|0-9|all",
              "name": "后二直选复式"
            },
            "hds": {
              "desc": "后二直选单式",
              "num": "input|zx|2",
              "name": "后二直选单式"
            },
            "qfs": {
              "desc": "前二直选复式",
              "num": "百位,十位|0-9|all",
              "name": "前二直选复式"
            },
            "qds": {
              "desc": "前二直选单式",
              "num": "input|zx|2",
              "name": "前二直选单式"
            }
          }
        },
        "zux": {
          "title": "组选",
          "method": {
            "hfs": {
              "desc": "后二组选复式",
              "num": "组选|0-9|all",
              "name": "后二组选复式"
            },
            "hds": {
              "desc": "后二组选单式",
              "num": "input|zux|2",
              "name": "后二组选单式"
            },
            "qfs": {
              "desc": "前二组选复式",
              "num": "组选|0-9|all",
              "name": "前二组选复式"
            },
            "qds": {
              "desc": "前二组选单式",
              "num": "input|zux|2",
              "name": "前二组选单式"
            }
          }
        }
      },
      "dwd": {
        "dwd": {
          "title": "定位胆",
          "method": {
            "dwd": {
              "desc": "定位胆",
              "num": "百位,十位,个位|0-9|all",
              "name": "定位胆"
            }
          }
        }
      },
      "bdd": {
        "bdd": {
          "title": "不定胆",
          "method": {
            "bdd1": {
              "desc": "一码",
              "num": "不定胆|0-9|all",
              "name": "一码不定胆"
            },
            "bdd2": {
              "desc": "二码",
              "num": "不定胆|0-9|all",
              "name": "二码不定胆"
            }
          }
        }
      }
    }
  },
  /* End 3D福彩 */
  /* Begin 排列三 */
  "PL3": {
    "ltTab": {
      "sm": "三码",
      "em": "二码",
      "dwd": "定位胆",
      "bdd": "不定胆"
    },
    "ltMethod": {
      "sm": {
        "zx": {
          "title": "直选",
          "method": {
            "fs": {
              "desc": "复式",
              "num": "百位,十位,个位|0-9|all",
              "name": "三码直选复式"
            },
            "ds": {
              "desc": "单式",
              "num": "input|zux|3",
              "name": "三码直选单式"
            },
            "hz": {
              "desc": "和值",
              "num": "直选和值|0-27|",
              "name": "三码直选和值"
            }
          }
        },
        "zux": {
          "title": "组选",
          "method": {
            "z3": {
              "desc": "组三",
              "num": "组三|0-9|all",
              "name": "三码组选三"
            },
            "z6": {
              "desc": "组六",
              "num": "组六|0-9|all",
              "name": "三码组选六"
            },
            "hh": {
              "desc": "混合",
              "num": "input|hh|3",
              "name": "三码混合组选"
            },
            "hz": {
              "desc": "和值",
              "num": "组选和值|1-26|",
              "name": "三码组选和值"
            }
          }
        }
      },
      "em": {
        "em": {
          "title": "二星",
          "method": {
            "hzxfs": {
              "desc": "后二直选复式",
              "num": "十位,个位|0-9|all",
              "name": "后二直选复式"
            },
            "hzxds": {
              "desc": "后二直选单式",
              "num": "input|zx|2",
              "name": "后二直选单式"
            },
            "hzuxfs": {
              "desc": "后二组选复式",
              "num": "组选|0-9|all",
              "name": "后二组选复式"
            },
            "hzuxds": {
              "desc": "后二组选单式",
              "num": "input|zux|2",
              "name": "后二组选单式"
            },
            "qzxfs": {
              "desc": "前二直选复式",
              "num": "百位,十位|0-9|all",
              "name": "前二直选复式"
            },
            "qzxds": {
              "desc": "前二直选单式",
              "num": "input|zx|2",
              "name": "前二直选单式"
            },
            "qzuxfs": {
              "desc": "前二组选复式",
              "num": "组选|0-9|all",
              "name": "前二组选复式"
            },
            "qzuxds": {
              "desc": "前二组选单式",
              "num": "input|zux|2",
              "name": "前二组选单式"
            }
          }
        }
      },
      "dwd": {
        "dwd": {
          "title": "定位胆",
          "method": {
            "dwd": {
              "desc": "定位胆",
              "num": "百位,十位,个位|0-9|all",
              "name": "定位胆"
            }
          }
        }
      },
      "bdd": {
        "bdd": {
          "title": "不定胆",
          "method": {
            "bdd1": {
              "desc": "一码",
              "num": "不定胆|0-9|all",
              "name": "一码不定胆"
            },
            "bdd2": {
              "desc": "二码",
              "num": "不定胆|0-9|all",
              "name": "二码不定胆"
            }
          }
        }
      }
    }
  },
  /* End 排列三 */
  /* Begin 北京快乐8 */
  "BJKL8": {
    "ltTab": {
      "qw": "趣味",
      "rxx": "任选"
    },
    "ltMethod": {
      "qw": {
        "qw": {
          "title": "趣味型",
          "method": {
            "jo": {
              "desc": "奇偶盘",
              "num": "奇和偶|4-6|two",
              "name": "趣味奇偶盘"
            },
            "sx": {
              "desc": "上下盘",
              "num": "上中下|7-9|two",
              "name": "趣味上下盘"
            },
            "hzdx": {
              "desc": "和值大小",
              "num": "大小|0-1|two",
              "name": "趣味和值大小"
            },
            "hzds": {
              "desc": "和值单双",
              "num": "单双|2-3|two",
              "name": "趣味和值单双"
            },
            "hzdxds": {
              "desc": "和值大小单双",
              "num": "全部|10-13|two",
              "name": "趣味和值大小单双"
            }
          }
        }
      },
      "rxx": {
        "rxx": {
          "title": "任选型",
          "method": {
            "rx1": {
              "desc": "任选一",
              "num": "上,下|1-40|",
              "name": "任选型任选一"
            },
            "rx2": {
              "desc": "任选二",
              "num": "上,下|1-40|",
              "name": "任选型任选二"
            },
            "rx3": {
              "desc": "任选三",
              "num": "上,下|1-40|",
              "name": "任选型任选三"
            },
            "rx4": {
              "desc": "任选四",
              "num": "上,下|1-40|",
              "name": "任选型任选四"
            },
            "rx5": {
              "desc": "任选五",
              "num": "上,下|1-40|",
              "name": "任选型任选五"
            },
            "rx6": {
              "desc": "任选六",
              "num": "上,下|1-40|",
              "name": "任选型任选六"
            },
            "rx7": {
              "desc": "任选七",
              "num": "上,下|1-40|",
              "name": "任选型任选七"
            }
          }
        }
      }
    }
  },
  /* End 北京快乐8 */
  /* Begin pk10 */
  "BJPK10": {
	    "ltTab": {
	      "cq1": "猜冠军",
	      "cq2": "猜前二",
	      "cq3": "猜前三",
	      "cq4": "猜前四",
	      "cq5": "猜前五",
	      "dwd": "定位胆",
	      "dx": "大小",
	      "hz": "和值",
	      "ds": "单双",
	      "lh": "龙虎"
	    },
	    "ltMethod": {
	      "cq1": {
	        "cq1": {
	          "title": "猜冠军",
	          "method": {
	          	"cq1": {
	              "desc": "猜冠军",
	              "num": "冠军|1-10|all",
	              "name": "猜冠军"
	            }
	          }
	        }
	      },
	      "cq2": {
	        "cq2": {
	          "title": "猜前二",
	          "method": {
	          	"cq2": {
	              "desc": "猜前二",
	              "num": "冠军,第二名|1-10|all",
	              "name": "猜前二"
	            },
	            "ds": {
	              "desc": "单式",
	              "num": "input|pkzux|2",
	              "name": "猜前二单式"
	            }
	          }
	        }
	      },
	      "cq3": {
	        "cq3": {
	          "title": "猜前三",
	          "method": {
	          	"cq3": {
	              "desc": "猜前三",
	              "num": "冠军,第二名,第三名|1-10|all",
	              "name": "猜前三"
	            },
	            "ds": {
	              "desc": "单式",
	              "num": "input|pkzux|3",
	              "name": "猜前三单式"
	            }
	          }
	        }
	      },
	      "cq4": {
	        "cq4": {
	          "title": "猜前四",
	          "method": {
	          	"cq4": {
	              "desc": "猜前四",
	              "num": "冠军,第二名,第三名,第四名|1-10|all",
	              "name": "猜前四"
	            },
	            "ds": {
	              "desc": "单式",
	              "num": "input|pkzux|4",
	              "name": "猜前四单式"
	            }
	          }
	        }
	      },
	      "cq5": {
	        "cq5": {
	          "title": "猜前五",
	          "method": {
	          	"cq5": {
	              "desc": "猜前五",
	              "num": "冠军,第二名,第三名,第四名,第五名|1-10|all",
	              "name": "猜前五"
	            },
	      		"ds": {
	              "desc": "单式",
	              "num": "input|pkzux|5",
	              "name": "猜前五单式"
	            }
	          }
	        }
	      },
	      "dwd": {
	        "dwd": {
	          "title": "定位胆",
	          "method": {
	          	"q5": {
	              "desc": "前五定位胆",
	              "num": "冠军,第二名,第三名,第四名,第五名|1-10|all",
	              "name": "前五定位胆"
	            },
		      	"h5": {
	              "desc": "后五定位胆",
	              "num": "第六名,第七名,第八名,第九名,第十名|1-10|all",
	              "name": "后五定位胆"
	            }
	          }
	        }
	      },
	      "dx": {
	        "dx": {
	          "title": "大小",
	          "method": {
	          	"d1": {
	              "desc": "冠军",
	              "num": "冠军|0-1|two",
	              "name": "大小冠军"
	            },
		      	"d2": {
	              "desc": "第二名",
	              "num": "第二名|0-1|two",
	              "name": "大小第二名"
	            },
		      	"d3": {
	              "desc": "第三名",
	              "num": "第三名|0-1|two",
	              "name": "大小第三名"
	            },
		      	"d4": {
	              "desc": "第四名",
	              "num": "第四名|0-1|two",
	              "name": "大小第四名"
	            },
		      	"d5": {
	              "desc": "第五名",
	              "num": "第五名|0-1|two",
	              "name": "大小第五名"
		        }
	          }
	        }
	      },
	      "hz": {
	        "hz": {
	          "title": "和值",
	          "method": {
//	          	"q2": {
//	              "desc": "前二和值",
//	              "num": "和值|3-19|",
//	              "name": "前二和值"
//	            },
		      	"q3": {
	              "desc": "前三和值",
	              "num": "和值|6-27|",
	              "name": "前三和值"
	            }
	          }
	        }
	      },
	      "ds": {
	        "ds": {
	          "title": "单双",
	          "method": {
	          	"d1": {
	              "desc": "冠军",
	              "num": "冠军|2-3|two",
	              "name": "单双冠军"
	            },
		      	"d2": {
	              "desc": "第二名",
	              "num": "第二名|2-3|two",
	              "name": "单双第二名"
	            },
		      	"d3": {
	              "desc": "第三名",
	              "num": "第三名|2-3|two",
	              "name": "单双第三名"
	            },
		      	"d4": {
	              "desc": "第四名",
	              "num": "第四名|2-3|two",
	              "name": "单双第四名"
	            },
		      	"d5": {
	              "desc": "第五名",
	              "num": "第五名|2-3|two",
	              "name": "单双第五名"
		        }
	          }
	        }
	      },
	      "lh": {
	        "lh": {
	          "title": "龙虎",
	          "method": {
	          	"1v10": {
	              "desc": "1v10",
	              "num": "1v10|14-15|two",
	              "name": "龙虎1v10"
	            },
		      	"2v9": {
	              "desc": "2v9",
	              "num": "2v9|14-15|two",
	              "name": "龙虎2v9"
	            },
		      	"3v8": {
	              "desc": "3v8",
	              "num": "3v8|14-15|two",
	              "name": "龙虎3v8"
	            },
		      	"4v7": {
	              "desc": "4v7",
	              "num": "4v7|14-15|two",
	              "name": "龙虎4v7"
	            },
		      	"5v6": {
	              "desc": "5v6",
	              "num": "5v6|14-15|two",
	              "name": "龙虎5v6"
		        }
	          }
	        }
	      }
	    }
	  }
};
/* jshint devel:true */

var Api = Api || {};
Api = {
  url: globeEnv[envFlag].caipiao,
  sso: globeEnv[envFlag].sso,
  cache: {},
  apimap: {
    route: {
      'getOdds': '/api/anon/v1/lottery/odds',
      'getMarketOdds': '/api/anon/v1/lottery_market/odds',
      'getIssueInfo': '/api/anon/v1/lottery/issue_info',
      'getLotteryTimes': '/api/call/v1/lottery/times',
      'getSimilar': '/api/anon/v1/lottery/matches',
      'getDish': '/api/anon/v1/lottery_market/top_odds_code',
      'getUserTradeVolume': '/api/anon/v1/lottery_market/trade_volume',
      'getSameNumber': '/api/anon/v1/lottery_market/same_number',
      'qusrpermission': '/api/u/v1/agent/queryUserPermission', //12.3 查询用户权限
      'getproxyinfo': '/api/u/v1/agent/getProxyInfo', //12.3 查询代理信息[很慢]
      'qpermissionlist': '/api/u/v1/agent/queryPermissionList', //12.4 查询代理目前的全部权限
      'qpermissionbyid': '/api/u/v1/agent/queryUserPermissionById', //12.5 查询当前ID的全部权限
      'mpermission': '/api/u/v1/agent/modifyPermission', //12.6 修改管理账号权限
      'addOrder': '/api/u/v1/lottery/add_order',
      'addOrderMMC': '/api/u/v1/lottery/add_order_now',
      'uploadCode': '/api/u/v1/lottery/uploadCode',
      'getRecency': '/api/u/v1/lottery/recent_order',
      'getRecencyDetail': '/api/u/v1/lottery/recent_detail',
      'addOrderMarket': '/api/u/v1/lottery_market/add_order',
      'getTradeNumber': '/api/u/v1/lottery_market/trade_number',
      'getOrderDetail': '/api/u/v1/lottery_market/order_detail',
      'getMoney': '/api/u/money',
      'getHistoryParams': '/api/u/v1/lottery/search_params',
      'getHistory': '/api/u/v1/lottery/history_orders',
      'getMarketHistory': '/api/u/v1/lottery_market/history_orders',
      'cancelOrder': '/api/u/v1/lottery/cancel_order',
      'cancelOrderMarket': '/api/u/v1/lottery_market/cancel_order',
      'getTraces': '/api/u/v1/lottery/lottery_trace',
      'getMarketTraces': '/api/u/v1/lottery_market/lottery_trace',
      'getTrace': '/api/u/v1/lottery/trace',
      'getMarketTrace': '/api/u/v1/lottery_market/trace',
      'cancelTrace': '/api/u/v1/lottery/trace_cancel', //traceId=79&issues[]=20150605-585&issues[]=20150605-584
      'cancelMarketTrace': '/api/u/v1/lottery_market/trace_cancel', //?traceId=83&issues[]=20150605-585&issues[]=20150605-584
      'agentlink': '/api/u/v1/agent/user_link', //9.1 获取代理链接 - 代理用户获取自己推广链接 CHECKED
      'updatepoint': '/api/u/v1/agent/update_point', //9.3 设置推广自助注册返点

      'createlink': '/api/u/v1/agent/create_link', // 推广链接 → 生成链接
      'getlinks': '/api/u/v1/agent/links', // 推广链接 → 获取链接列表
      'deletelink': '/api/u/v1/agent/delete_link', // 推广链接 → 删除一条链接

      'lotterypoints': '/api/u/v1/agent/lottery_points', //9.2 用户当前代理彩种返点信息 - 代理用户当前代理的彩票返点信息 //9.5 彩种玩法返点详情 CHECKED
      'lotterypointrate': '/api/u/v1/agent/point_info', //9.2 用户当前代理彩种返点信息 - 代理用户当前代理的彩票返点信息 //9.5 彩种玩法返点详情(缺：玩法的返点)
      'users': '/api/u/v1/agent/users', //9.4 代理用户 (缺：用户ID未返回，balance字段是用户余额还是返点率不明确，按用户名查询和按余额范围查询的参数)
      'agentregister': '/api/u/v1/agent/agent_register', //9.6 代理开户
      'userinfo': '/api/u/v1/agent/user_info', //10.1 用户信息
      'teambalance': '/api/u/v1/agent/team_balance', //10.2 用户团队余额 CHECKED
      'transfer': '', //10.3 转账 (直接调用用户中心接口)
      'setpoints': '/api/u/v1/agent/set_user_point', //10.4 设定用户返点
      'accountinfo': '/api/u/v1/agent/account_info', //10.5 账变查询
      'getteamreport': '/api/u/v1/agent/getTeamReport',//10.6 团队报表 (String startTime, String endTime, Integer currPage, Integer pageSize)

      'accountinforeport': '/api/u/v1/report/account_info', //11.3 账变查询
      'pointinfo': '/api/u/v1/agent/point_info', //10.6 返点查询,用户查询返点信息(缺：玩法的返点)
      'summary': '/api/u/v1/agent/summary', //10.7 摘要
      'reportquery': '/api/u/v1/report/report_query', //11.1 传统投注模式报表查询接口
      'reportquerymarket': '/api/u/v1/report/report_query', //11.2 交易市场模式报表查询接口
      'commission': '/api/u/v1/report/commission', //11.4 佣金总额查询接口
      'getteaminfo': '/api/u/v1/agent/getTeamInfo', //11.5 团队报表新接口 startTime=2015-11-05%2013:30:15&endTime=2015-11-08%2013:46:15
      'getagentquota':'/api/u/v1/agent/getAgentquota',//'/api/u/v1/agent/getAgentquota',//11.6 读取当前用户配额
      'getagentquotabyusr':'/api/u/v1/agent/getAgentquotaByUser',//'/api/u/v1/agent/getAgentquota',//11.7 获取某下级用户配额
      'quotaassign':'/api/u/v1/agent/quotaAssign',//'/api/u/v1/agent/quotaAssign',//11.8 更新某下级用户赠送配额
      'quotagc':'/api/u/v1/agent/quotagc',//'/api/u/v1/agent/quotagc',//11.9 更新某下级用户回收配额
      'agent': {
        'html': '/lottery/agent.html'
      }, // 10.8 代理
      'report': {
        'html': '/lottery/report.html'
      }, // 10.9 报表
      'queryActivity':'/api/i/anon/activity/queryCurrentActivity'
    }
  },
  geturl: function(apiName) {
    //函数重载1.Api.geturl('getTradeNumber',{p:1})；2.Api.geturl('agent','html')；
    var params;
    var ps = arguments;
    if (arguments.length > 1) {
      params = arguments[1];
    }
    if (typeof Api.apimap.route[apiName] == 'object') {
      if (params) {
        if (arguments.length > 2) {
          pageparams = arguments[2];
          return [String(Api.apimap.route[apiName][params]).replace('.json', (pageparams.page > 1 ? '_' + pageparams.page : '') + '.json')].join('');
        }
        return [Api.apimap.route[apiName][params]].join('');
      }
    }
    var pspage = 0;
    if (ps.length > 1) {
      pspage = ps[1].page;
    } 
    return [Api.url, String(Api.apimap.route[apiName]).replace('.json', (pspage > 1 ? '_' + pspage : '') + '.json')].join('');
  },
  getCommon: function(route, p, fn) {
    var args = arguments;
    //同一接口增加cache时，有10秒钟缓存
    if (typeof p.cache !== 'undefined') {
      if (typeof Api.cache[route] === 'object') {
        var res = Api.cache[route];
        if (res === -1 && args[3] !== undefined && args[3] === true && !$(".loginlnk").hasClass('waiting')) {
          $(".loginlnk").trigger('click');
          return false;
        } else {
          fn(res);
          setTimeout(function(){
            delete Api.cache[route];
          },10000);
          return false;
        }    
      }else {
        Api.cache[route]=1;  
      }
    }
    $.ajax({
      url: Api.geturl(route, p),
      type: (typeof p.action !== 'undefined' ? p.action : 'GET'),
      cache: false,
      dataType: 'json',
      data: p
    }).done(function(res) {
      // 缓存控制
      if (typeof Api.cache[route] !== 'undefined') {
        if (Api.cache[route]) {
          Api.cache[route]=res;
        }  
      }
      // arguments[3] 为true的时候，未登录需要弹框
      if (res === -1 && args[3] !== undefined && args[3] === 1 && !$(".loginlnk").hasClass('waiting')) {
        $(".loginlnk").trigger('click');
        if (typeof p.failed === 'function') {
          p.failed();    
        }

        return false;
      } else {
        fn(res);
      }
    }).fail(function() {
      if (typeof p.failed === 'function') {
        p.failed();    
      }
      fn("error");
    });
  },
  getHtml: function(route, path, p, fn) {
    $.ajax({
      url: Api.geturl(route, path, p),
      type: 'GET',
      cache: false,
      dataType: (typeof p.type != 'undefined' ? p.type : 'html'),
      data: p
    }).done(function(res) {
      fn(res);
    }).fail(function() {
      fn("error");
    });
  },
  getOdds: function(fn) {
    $.ajax({
      url: Api.geturl('getOdds'),
      type: 'GET',
      cache: false,
      dataType: 'json'
    }).done(function(res) {
      fn(res);
    }).fail(function() {
      fn("error");
    });
  },
  getMarketOdds: function(fn) {
    $.ajax({
      url: Api.geturl('getMarketOdds'),
      type: 'GET',
      cache: false,
      dataType: 'json'
    }).done(function(res) {
      fn(res);
    }).fail(function() {
      fn("error");
    });
  },
  getIssueInfo: function(p, fn) {
    $.ajax({
      url: Api.geturl('getIssueInfo', p),
      type: 'GET',
      cache: false,
      dataType: 'json',
      data: p
    }).done(function(res) {
      fn(res);
    }).fail(function() {
      fn("error");
    });
  },
  getLotteryTimes: function(p, fn) {
    $.ajax({
      url: Api.geturl('getLotteryTimes', p),
      type: 'GET',
      cache: false,
      dataType: 'json',
      data: p
    }).done(function(res) {
      fn(res);
    }).fail(function() {
      fn("error");
    });
  },
  getSimilar: function(p, fn) {
    $.ajax({
      url: Api.geturl('getSimilar', p),
      type: 'GET',
      cache: false,
      dataType: 'json',
      data: p
    }).done(function(res) {
      fn(res);
    }).fail(function() {
      fn("error");
    });
  },
  addOrder: function(obj, fn) {
    $.ajax({
      url: obj.lottery === 'WBGMMC' ? Api.geturl('addOrderMMC', obj) : Api.geturl('addOrder', obj),
      type: 'POST',
      cache: false,
      dataType: 'json',
      data: obj
    }).done(function(res) {
      fn(res);
    }).fail(function(res) {
      fn(res);
    });
  },
  cancelOrder: function(obj, fn) {
    $.ajax({
      url: Api.geturl('cancelOrder', obj),
      type: 'POST',
      cache: false,
      dataType: 'json',
      data: obj
    }).done(function(res) {
      fn(res);
    }).fail(function(res) {
      fn(res);
    });
  },
  cancelOrderMarket: function(obj, fn) {
    $.ajax({
      url: Api.geturl('cancelOrderMarket', obj),
      type: 'POST',
      cache: false,
      dataType: 'json',
      data: obj
    }).done(function(res) {
      fn(res);
    }).fail(function(res) {
      fn(res);
    });
  },
  getRecency: function(obj, fn) {
    $.ajax({
      url: Api.geturl('getRecency', obj),
      type: 'GET',
      cache: false,
      dataType: 'json',
      data: obj
    }).done(function(res) {
      fn(res);
    }).fail(function(res) {
      fn(res);
    });
  },
  getRecencyDetail: function(obj, fn) {
    $.ajax({
      url: Api.url + '/api/u/v1/lottery/recent_detail',
      type: 'GET',
      cache: false,
      dataType: 'json',
      data: obj
    }).done(function(res) {
      fn(res);
    }).fail(function(res) {
      fn(res);
    });
  },
  addOrderMarket: function(obj, fn) {
    $.ajax({
      url: Api.url + '/api/u/v1/lottery_market/add_order',
      type: 'POST',
      cache: false,
      dataType: 'json',
      data: obj
    }).done(function(res) {
      fn(res);
    }).fail(function(res) {
      fn(res);
    });
  },
  getSameNumber: function(obj, fn) {
    $.ajax({
      url: Api.geturl('getSameNumber', obj),
      type: 'GET',
      cache: false,
      dataType: 'json',
      data: obj
    }).done(function(res) {
      fn(res);
    }).fail(function() {
      fn("error");
    });
  },
  getTradeNumber: function(obj, fn) {
    $.ajax({
      url: Api.geturl('getTradeNumber', obj),
      type: 'GET',
      cache: false,
      dataType: 'json',
      data: obj
    }).done(function(res) {
      fn(res);
    }).fail(function() {
      fn("error");
    });
  },
  getOrderDetail: function(obj, fn) {
    $.ajax({
      url: Api.url + '/api/u/v1/lottery_market/order_detail',
      type: 'GET',
      cache: false,
      dataType: 'json',
      data: obj
    }).done(function(res) {
      fn(res);
    }).fail(function() {
      fn("error");
    });
  },
  getDish: function(obj, fn) {
    $.ajax({
      url: Api.geturl('getDish', obj),
      type: 'GET',
      cache: false,
      dataType: 'json',
      data: obj
    }).done(function(res) {
      fn(res);
    }).fail(function() {
      fn("error");
    });
  },
  getUserTradeVolume: function(s, fn) {
    $.ajax({
      url: Api.geturl('getUserTradeVolume', s),
      type: 'GET',
      cache: false,
      dataType: 'json',
      data: s
    }).done(function(res) {
      fn(res);
    }).fail(function() {
      fn("error");
    });
  },
  getMoney: function(fn) {
    $.ajax({
      url: Api.url + '/api/u/money',
      type: 'GET',
      cache: false,
      dataType: 'json',
      data: s
    }).done(function(res) {
      fn(res);
    }).fail(function(res) {
      fn(res);
    });
  },
  getTrace: function(p, fn) {
    Api.getCommon('getTrace', p, fn);
  },
  getMarketTrace: function(p, fn) {
    Api.getCommon('getMarketTrace', p, fn);
  },
  cancelTrace: function(p, fn) {
    Api.getCommon('cancelTrace', p, fn);
  },
  cancelMarketTrace: function(p, fn) {
    Api.getCommon('cancelMarketTrace', p, fn);
  },
  //活动列表页数据
  getActivity : function(p, fn) {
	var url = Api.geturl('queryActivity').replace('/lottery/','/sobet/');
    $.ajax({
        url : url,
        type : 'GET',
        dataType : 'json',
        cache: false,
        data: p
    }).done(function(res) {
        fn(res);
    }).fail(function() {
        fn('error');
    });
   },
};
/* jshint devel:true */

var Q = Q || {};

Q = {
  /* 格式化日期 */
  formatOne: 'MM-dd hh:mm:ss',
  convertStamp: function(d, format) {
    var date = new Date(parseInt(d));
    if (format === undefined) {
      return 'Error Format';
    }
    var map = {
      'M': date.getMonth() + 1,
      'd': date.getDate(),
      'h': date.getHours(),
      'm': date.getMinutes(),
      's': date.getSeconds(),
      'q': Math.floor((date.getMonth() + 3) / 3), //季度
      'S': date.getMilliseconds() //毫秒
    };
    format = format.replace(/([yMdhmsqS])+/g, function(all, t) {
      var v = map[t];
      if (v !== undefined) {
        if (all.length > 1) {
          v = '0' + v;
          v = v.substr(v.length - 2);
        }
        return v;
      } else if (t === 'y') {
        return (date.getFullYear() + '').substr(4 - all.length);
      }
      return all;
    });
    return format;
  },
  datetimeFormat:function(datetime,format) {
    //YYYYMMDDhhmmss
    var date = new Date(datetime);
    if (format === undefined) {
      return 'Error Format';
    }
    return date.Format(format);
  },
  secondFormat: function(s) {
    var sec_num = parseInt(s, 10);
    var hours = Math.floor(sec_num / 3600);
    var minutes = Math.floor((sec_num - (hours * 3600)) / 60);
    var seconds = sec_num - (hours * 3600) - (minutes * 60);

    if (hours < 10) {
      hours = '0' + hours;
    }
    if (minutes < 10) {
      minutes = '0' + minutes;
    }
    if (seconds < 10) {
      seconds = '0' + seconds;
    }
    var time = s > 3600 ? hours + ':' + minutes + ':' + seconds : minutes + ':' + seconds;
    return time;
  },
  formatNull: function(d) {
    return d === null ? 0 : d;
  },
  // unique: function(array) {
  //   return $.grep(array, function(el, index) {
  //     return index === $.inArray(el, array);
  //   });
  // },
  unique: function(array) {
    var n = {}, arr = [];
    for (var i = 0; i < array.length; i++) {
      if(!n[array[i]]) {
        n[array[i]] = true;
        arr.push(array[i]);
      }
    }
    return arr;
  },
  nameLottery: function(lottery) {
    return $('#lotteryClass dd[data-lt=' + lottery + '] em').html() || '';
  },
  getIcon: function(t) {
    if (t !== undefined) {
      return '<div class="icon"><i>' + (parseInt(t, 10) ? '卖' : '买') + '</i></div>';
    } else {
      return '';
    }
  },
  nameCode: function(desc) {
    if (desc == null) {
      return '';
    }
    var idx = desc.indexOf(' ');
    return {
      name: desc.substr(0, idx),
      code: desc.substr(idx + 1)
    };
  },
  iconGreenChs: function(typ) {
    var typCls = {
      '买': 0,
      '卖': 1
    };
    return typCls[typ];
  },
  traceType: function(type) {
    var traceType = ['利润率追号', '同倍追号', '翻倍追号', '买彩票同倍追号', '卖彩票同倍追号'];
    return traceType[parseInt(type, 10) - 1] || '未指定';
  },
  traceChs: function(typ) {
    var traceCls = ['追中继续', '追中即停'];
    return traceCls[typ];
  },
  iconGreen: function(typ) {
    var typCls = ['买', '卖'];
    return typCls[typ];
  },
  itemTyp: function(typ) {
    var typCls = ['buy', 'sale'];
    return typCls[typ] || '';
  },
  getMethodName: function(method, lottery) {
    if (method === null || method === '') {
      return '-';
    }
    var m = method.split('_');
    return LotteryClass[lottery]['ltMethod'][m[0]][m[1]]['method'][m[2]]['name'];
  },
  getPositionName: function(pos) {
    var posConf = ["万", "千", "百", "十", "个"];
    pos = pos ? ' ' + pos : '';
    return pos.replace(/\d/g, function($1) {
      return posConf[$1 - 1];
    });
  },
  nameContent: function(desc) {
    return Q.nameCode(desc).code;
  },
  expireFormat: function(d) {
    return parseInt(d, 10) > 0 ? d + '天' : '永久有效';
  },
  urlFormat: function(url) {
    return 'http://' + window.location.host + url;
  },
  statusFormat: function(n) {
    var s = ['正常', '过期'];
    return s[n] || '';
  },
  percentFormat: function(num) {
    var dotnum = 2;
    if (arguments.length > 1) dotnum = arguments[1];

    if (num == 0 || parseInt(num * 100, 10).toFixed(dotnum) == Number(num * 100).toFixed(dotnum)) {
      return parseInt(num * 100, 10);
    }
    return parseFloat(num * 100).toFixed((dotnum == 2 ? 1 : dotnum));
  },
  percentStyle: function(num) {
    if (num == -1) {
      return ' rateabnormal';
    }
    return ' ratenormal';
  },
  doubleFormat: function(num) {
    var defaultnum = 3;
    if (num == 0 || parseInt(num, 10).toFixed(3) == Number(num).toFixed(3)) {
      return parseInt(num, 10);
    }
    if (arguments.length > 1) defaultnum = arguments[1];
    return parseFloat(num).toFixed(defaultnum);
  },
  lotteryPointDiff: function(num) {
    return parseFloat((num * 100 - 0.1)).toFixed(1);
  },
  /* 投注模式 */
  modeName: function(mode) {
    var modeNameDict = {
      '2': '元',
      '0.2': '角',
      '0.02': '分',
      '0.002': '厘'
    };
    return modeNameDict[String(parseFloat(mode))] || '-';
  },
  getItemIdForChange: function(id){
	  return id ? '<a class="change-issue" data-id="' + id + '">' + id + '</a>' : '-';
  },
  // 投注状态
  statusCls: function(status) {
    return status === '已派奖' ? ' status' : '';
  },
  // 投注状态
  statusChs: function(state) {
    var s = ['未开奖', '未中奖', '已派奖', '等待派奖', '个人撤单', '系统撤单', '已退款', '已中奖', '异常状态'];
    return s[state] || '';
  },
  istraceCh: function(a) {
    if (a === 1) return '是';
    return '否';
  },
  traceStatusChs: function(a) {
    var sCh = {
      '1': '<i class="altrace">已追</i>',
      '0': '未开始'
    };
    return sCh[a];
  },
  lotteryStatusChs: function(a) {
    var sCh = {
      '1': '<i class="already">已派奖</i>',
      '0': '未开奖'
    };
    return sCh[a];
  },
  agentStatusChs: function(a) {
    var sCh = {
      '1': '暂停',
      '0': '正常'
    };
    return sCh[a];
  },
  statusCh: function(a) {
    var sCh = {
      '0': '进行中',
      '1': '已完成',
      '2': '已取消',
      '4': '已撤单'
    };
    return sCh[a];
  },
  userChs: function(typ) {
    var sCh = ['普通用户', '代理用户', '代理用户', '代理用户', '商家', '管理用户']
    return sCh[typ];
  },
  combineChs: function(typ) {
    // 0：合庄 1：补充合庄资金 2:撤庄
    var sCh = ['合庄资金', '补充合庄资金', '撤庄资金']
    return sCh[typ];
  },
  setBalance: function(typ, id, point) {
    if (typeof point !== 'number') {
      return '';  
    }
    if (point < 0.0751) {
      return '';
    }
    if (typ == '5') {
      return '';
    }
    return '<a class="hand balance" name="' + id + '" rel="balance">充值</a>';
  },
  setPermission: function(typ, id) {
    if (typ == '5') {
      return '<a class="hand setting" name="' + id + '" rel="permission">修改权限</a>';
    }
    return '';
  },
  lotteryChs: function(code) {
    var pauseLottery = {
      'CQ11Y': '重庆11选5'
    };

    if ($("#lotteryClass dd[data-lt=" + code + "] em").size() > 0) {
      return $("#lotteryClass dd[data-lt=" + code + "] em").html();
    } else {
      if (typeof pauseLottery[code] !== 'undefined') {
        return pauseLottery[code];
      }
      return '-';
    }
  },
  ltDesc: function(lottery) {
    var desc = {
      'WBG': '10:00-02:00 3分钟一期 共320期',
      'WBG5FC': '5分钟一期 全天参与',
      'WBGFFC': '每分钟开奖 全天参与',
      'WBGMMC': '即买即开 无需等待',
      'CQSSC': '<span>10:00-22:00</span> 10分钟一期 共72期',
      'JXSSC': '<span>9:10-23:00</span> 10分钟一期 共84期',
      'XJSSC': '<span>10:10-02:00</span> 10分钟一期 共96期',
      'CQ11Y': '<span>9:10-23:00</span> 10分钟一期 共84期',
      'GD11Y': '<span>9:10-23:00</span> 10分钟一期 共84期',
      'JX11Y': '<span>9:10-23:00</span> 10分钟一期 共84期',
      'SD11Y': '<span>9:05-21:55</span> 10分钟一期 共78期',
      '3DFC': '每天一期 20:30开奖',
      'BJPK10': '<span>9:02-23:57</span> 5分钟一期 共179期'
    };
    var now = new Date(); 
    if(lottery === 'CQSSC' && (now.getHours() > 21 || now.getHours() < 2)) {
      desc['CQSSC'] = '22:00—01:55 5分钟一期 共48期';
    }
    return desc[lottery] || ''
  },
  checkDetail: function(id) {
    return id === undefined ? '&nbsp;' : '<a class="hand traceDetails" data-id="' + id + '">详情</a>';
  },
  checkDetailByStatus: function(id,status) {
    return (id === undefined || status === 4) ? '&nbsp;' : '<a class="hand traceDetails" data-id="' + id + '">详情</a>';
  },
  tracestatusChs: function(a) {
    var chs = {
      '1': '已追号',
      '0': '追号中',
      '2': '追号撤销',
      '3': '系统撤销'
    };
    return chs[a];
  },
  tracestatusDisable: function(a) {
    var chs = {
      '1': ' disabled="disabled"',
      '0': '追号中',
      '2': ' disabled="disabled"',
      '3': ' disabled="disabled"'
    };
    return chs[a];
  },
  traceDisable: function(id) {
    return id === undefined ? '' : ' disabled="disabled"';
  },
  traceClsDisable: function(a) {
    var chs = {
      '1': ' disabled',
      '0': '',
      '2': ' disabled',
      '3': ' disabled',
      '4': ' disabled'
    };
    return chs[a];
    //return id === undefined ? '' : ' disabled';
  },
  traceClsDisableId: function(orderid) {
    return orderid === undefined ? '' : ' disabled';
  },
  modeTyp: function(a, b) {
    if (typeof a === 'undefined') {
      return '';
    }
    var modeDict = {
      '0': 'Y',
      '1': 'SHI',
      '2': '是'
    };
    if (b === '0') {
      return modeDict[a];
    } else {
      return '否';
    }
  },
  /* 判断是否为数字类型 */
  isNumber: function(o) {
    return typeof o === 'number' && isFinite(o);
  },
  /* 千分位逗号 */
  thousandSep: function(num) {
    if (!Q.isNumber(num)) {
      return '-';
    }
    var n = num.toString(),
      p = n.indexOf('.');
    return n.replace(/\d(?=(?:\d{3})+(?:\.|$))/g, function($0, i) {
      return p < 0 || i < p ? ($0 + ',') : $0;
    });
  },
  /* 延迟函数 */
  debouncer: function(func, timeout) {
    var timeoutID, timeout = timeout || 200;
    return function() {
      var scope = this,
        args = arguments;
      clearTimeout(timeoutID);
      timeoutID = setTimeout(function() {
        func.apply(scope, Array.prototype.slice.call(args));
      }, timeout);
    };
  },
  /* INPUT输入格式验证 */
  inputChk: function(a, fn) {
    a.keyup(Q.debouncer(fn, 600));

    a.on("paste", function(e) {
      Q.debouncer(fn, 200);
    });

    a.change(function() {
      Q.debouncer(fn, 200);
    });
  },
  /* INPUT输入格式验证空 */
  inputBlankCheck: function(a, form, blank) {
    var f = function() {
      var taginput = a.attr('name');
      var cls = 'errorcount';
      var blabktip = blank;
      if (a.val() === '') {
        form.find('.regform-error[name="' + taginput + '"]').html(blabktip).css('opacity', 1).addClass(cls);
      } else {
        form.find('.regform-error[name="' + taginput + '"]').css('opacity', 0).removeClass(cls);
      }
    };
    Q.inputChk(a, f);
  },
  /* INPUT输入格式验证用户名 */
  inputFormatCheck: function(a, re, form, blank) {
    var f = function() {
      var taginput = a.attr('name');
      var cls = 'errorcount';
      var blabktip = blank;
      if (a.val() === '') {
        form.find('.regform-error[name="' + taginput + '"]').html(blabktip).css('opacity', 1).addClass(cls);
      } else {
        if (!re.test(a.val())) {
          form.find('.regform-error[name="' + taginput + '"]').html(a.attr('rel')).css('opacity', 1).addClass(cls);
        } else {
          form.find('.regform-error[name="' + taginput + '"]').css('opacity', 0).removeClass(cls);
        }
      }
    };
    Q.inputChk(a, f);
  },
  /* INPUT输入格式验证密码配对 */
  inputPwdFormatCheck: function(a, re, form, blank, pairname, pair) {
    var f = function() {
      var taginput = a.attr('name');
      if (a.val() === '') {
        form.find('.regform-error[name="' + taginput + '"]').html(blank).css('opacity', 1).addClass('errorcount');
      } else {
        if (!re.test(a.val())) {
          form.find('.regform-error[name="' + taginput + '"]').html(a.attr('rel')).css('opacity', 1).addClass('errorcount');
        } else {
          if (a.val() !== pair.val()) {
            if (pair.val() !== '') {
              form.find('.regform-error[name="' + taginput + '"]').html('两次输入的密码不一致').css('opacity', 1).addClass('errorcount');
            }
          } else {
            form.find('.regform-error[name="' + taginput + '"]').css('opacity', 0).removeClass('errorcount');
            form.find('.regform-error[name="' + pairname + '"]').css('opacity', 0).removeClass('errorcount');
          }
        }
      }
    };
    Q.inputChk(a, f);
  },
  getRandom: function() {
    return Math.floor(Math.random() * 8 + 1);
  },
  smartResize: function() {
    (function($) {

      var $event = $.event,
        $special,
        resizeTimeout;

      $special = $event.special.debouncedresize = {
        setup: function() {
          $(this).on("resize", $special.handler);
        },
        teardown: function() {
          $(this).off("resize", $special.handler);
        },
        handler: function(event, execAsap) {
          // Save the context
          var context = this,
            args = arguments,
            dispatch = function() {
              // set correct event type
              event.type = "debouncedresize";
              $event.dispatch.apply(context, args);
            };

          if (resizeTimeout) {
            clearTimeout(resizeTimeout);
          }

          execAsap ?
            dispatch() :
            resizeTimeout = setTimeout(dispatch, $special.threshold);
        },
        threshold: 75
      };

    })(jQuery);
  },
  showPagination: function(page_no, page_size, total, totalpage) {
    $('#page').val(page_no);
    var total_page = Math.ceil(total / page_size);
    if (total_page !== totalpage && totalpage !== null) {
      total_page = totalpage;
    }
    if (total === 0) {
      return '';
    }
    var prev_page = '';
    var num_page = '';
    var next_page = '';
    if (page_no != 1) {
      prev_page = '<a href="javascript:void(0);" class="prev" page="' + (page_no - 1) + '">上一页</a>';
    }
    if (page_no !== total_page) {
      next_page = '<a href="javascript:void(0);" class="next" page="' + (page_no + 1) + '">下一页</a>';
    }

    if (page_no - 2 >= 1) {
      num_page += '<a href="javascript:void(0);" page="' + (page_no - 2) + '">' + (page_no - 2) + '</a>';
    }
    if (page_no - 1 >= 1) {
      num_page += '<a href="javascript:void(0);" page="' + (page_no - 1) + '">' + (page_no - 1) + '</a>';
    }
    //num_page += '<span class="page-cur">' + page_no + '</span>';
    num_page += '<a href="javascript:;" class="on" page="' + page_no + '">' + page_no + '</a>';
    if (page_no + 1 <= total_page) {
      num_page += '<a href="javascript:void(0);" page="' + (page_no + 1) + '">' + (page_no + 1) + '</a>';
      if (total_page > page_no + 2 && total_page < 4) {
        num_page += '<span class="page-break">...</span>';
      }
    }
    if (page_no + 2 <= total_page) {
      num_page += '<a href="javascript:void(0);" page="' + (page_no + 2) + '">' + (page_no + 2) + '</a>';
      if (page_no >= 2 && total_page > 6 && page_no > 99) {
        num_page += '<span class="page-break">...</span>';
      }
    }
    if (page_no + 3 <= total_page && page_no < 100) {
      num_page += '<a href="javascript:void(0);" page="' + (page_no + 3) + '">' + (page_no + 3) + '</a>';
      if (page_no >= 3 && total_page > 6) {
        num_page += '<span class="page-break">...</span>';
      }
    }
    if (page_no - 2 < 1 && page_no + 4 <= total_page) {
      num_page += '<a href="javascript:void(0);" page="' + (page_no + 4) + '">' + (page_no + 4) + '</a>';
      if (page_no == 2 && total_page > 6) {
        num_page += '<span class="page-break">...</span>';
      }
    }
    if (page_no == 1 && total_page >= 6) {
      num_page += '<a href="javascript:void(0);" page="' + (page_no + 5) + '">' + (page_no + 5) + '</a>';
      if (total_page > 6) {
        num_page += '<span class="page-break">...</span>';
      }
    }
    var pagination_html = [prev_page, num_page, next_page].join('');
    return pagination_html;
    //$('#pagination').html(pagination_html);
  },
  changeTypeChs: function(index) {
    var changeChs = [
      '游戏投注', '追号扣款', '奖金派送', '投注返点', '佣金收入', '撤单返款',
      '撤销追号', '撤销派奖', '撤销返点', '撤销佣金', '成交金额', '冻结返款','','','','活动红利'
    ];
    return changeChs[index - 1];
  },
  orderTypeChs: function(index) {
    var changeChs = [
      '交易市场', '传统投注'
    ];
    return changeChs[index];
  },
  isSelf: function(n) {
    return n !== undefined && parseInt(n, 10) === 1 ? 'highlight': '';
  },
  calTxtwidth: function(el) {
    var html_org = el.html();
    var html_calc = '<span>' + html_org + '</span>';
    el.html(html_calc);
    var width = el.find('span:first').width();
    el.html(html_org);
    return width;
  },
  oddEven: function(intellect) {
    if (intellect % 2 === 0) {
      return intellect === 0 ? 'evenTr first' : 'evenTr';
    }
  },
  traceNumber: function(date, next, number) {
    if (number > 119) {
      var tempn = Math.abs(119 - number);
      number = tempn < 10 ? ('0' + tempn) : tempn;
      return next + '-' + number;
    } else {
      number = number + 1;
      return date + '-' + number;
    }

  },
  minutePer: function(start, per) {
    return (start + 1) * per;
  },
  nextDay: function(index, start) {
    if (start > 119) {
      return ' nextDay';
    }
    return '';
  },
  initChk: function(index) {
    if (index < 5) {
      return ' checked="checked"';
    }
    return '';
  },
  rightChk: function(index) {
    if (index) {
      return ' checked="checked"';
    }
    return '';
  },
  itemChk: function(index) {
    if (index < 5) {
      return ' chkitem';
    }
    return '';
  },
  itemNextDay: function(issue) {
    if (issue.indexOf('-') > -1) {
      var now = new Date();
      if (String(issue.split('-')[0]) === now.Format('YYYYMMDD')) {
        return '';
      }
    }
    return ' nextDay';
  },
  sameTimes: function() {
    return 1;
  },
  doubleTimes: function() {
    return [
      1, 1, 2, 2, 4, 4, 8, 8, 16, 16,
      32, 32, 64, 64, 128, 128, 256, 256, 512, 512,
      1024, 1024, 2048, 2048, 4096, 4096, 8192, 8192, 16384, 16384,
      32768, 32768, 65536, 65536, 99999
    ];
  },
  initTraceList: function(index) {
    var max = Trace.maxtimes;
    var initlst = Q.doubleTimes();

    if (index < initlst.length) {
      return initlst[index];
    } else {
      return max
    }
  },
  initSameTraceList: function(index) {
    var initlst = Q.sameTimes();
    return initlst;
  },
  getUrlVars: function() {
    var vars = {};
    var parts = window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function(m, key, value) {
      vars[key] = value;
    });
    return vars;
  },
  numberConuter: function(els, maxs) {
    var initNumber = [];
    var speed = [40, 50, 20, 15, 30];
    if (arguments.length > 2) initNumber = arguments[2];
    if (arguments.length > 3) speed = arguments[3];

    Counter = (function() {
      function Counter() {}

      Counter.prototype.init = function(elments) {
        var most = Math.max.apply(null, maxs);
        var mindex = maxs.indexOf(String(most));

        for (j = 0; j < elments.length; j++) {
          if (initNumber.length > 0) {
            Counter.prototype['n' + j] = initNumber[j];
          } else {
            Counter.prototype['n' + j] = 1;
          }
        }

        return this.render = setInterval((function(_this) {
          return function() {
            for (i = 0; i < elments.length; i++) {

              if (_this['n' + i] == '0') {
                continue
              }

              if (i == mindex) {
                speed[i] = Math.min.apply(null, speed);
              }

              _this['n' + i] += Math.round(_this['n' + i] * Math.random() * speed[i]) / 100;

              if (_this['n' + i] > maxs[i]) {
                _this['n' + i] = maxs[i] + '.00';

                if (parseInt(maxs[i]) == maxs[i]) {
                  _this['n' + i] = maxs[i] + '.00';
                } else {
                  _this['n' + i] = maxs[i];
                }

              }
              if (_this['n' + i] <= parseFloat(maxs[i])) {

                if (parseInt(_this['n' + i]) == _this['n' + i]) {
                  elments[i].html(Q.thousandSep(parseFloat(_this['n' + i])) + '.00');
                } else {
                  elments[i].html(Q.thousandSep(Math.round(_this['n' + i] * 100) / 100));
                }

              }
            }

            if (els.length > 1 && maxs.length > 1) {
              if (_this['n' + mindex] == most) {
                return clearInterval(_this.render);
              }
            } else {
              if (_this['n0'] == most) {
                return clearInterval(_this.render);
              }
            }
          };
        })(this), 1000 / 60);
      };

      return Counter;

    })();
    var sTACounter = new Counter;
    var nowLoop = sTACounter.init(els);
    return nowLoop;
  },
  chkquota: function(num) {
    return parseFloat(num * 100) < 7.6 ? '0' : '1';
  },
  //加法  
  floatAdd: function(arg1,arg2){  
       var r1,r2,m;  
       try{r1=arg1.toString().split(".")[1].length}catch(e){r1=0}  
       try{r2=arg2.toString().split(".")[1].length}catch(e){r2=0}  
       m=Math.pow(10,Math.max(r1,r2));  
       return (arg1*m+arg2*m)/m;  
  },  
  //减法  
  floatSub: function(arg1,arg2){  
      var r1,r2,m,n;  
      try{r1=arg1.toString().split(".")[1].length}catch(e){r1=0}  
      try{r2=arg2.toString().split(".")[1].length}catch(e){r2=0}  
      m=Math.pow(10,Math.max(r1,r2));  
      //动态控制精度长度  
      n=(r1>=r2)?r1:r2;  
      return ((arg1*m-arg2*m)/m).toFixed(n);  
  },
  //乘法  
  floatMul: function(arg1,arg2)   {   
      var m=0,s1=arg1.toString(),s2=arg2.toString();   
      try{m+=s1.split(".")[1].length}catch(e){}   
      try{m+=s2.split(".")[1].length}catch(e){}   
      return Number(s1.replace(".",""))*Number(s2.replace(".",""))/Math.pow(10,m);   
  },
  //除法  
  floatDiv: function(arg1,arg2){   
        var t1=0,t2=0,r1,r2;   
        try{t1=arg1.toString().split(".")[1].length}catch(e){}   
        try{t2=arg2.toString().split(".")[1].length}catch(e){}   
        with(Math){   
            r1=Number(arg1.toString().replace(".",""));
   
            r2=Number(arg2.toString().replace(".",""));   
            return (r1/r2)*pow(10,t2-t1);   
        }   
  },
  
  PkHzNum: {
	q2:['3_19','4_18','5_17','6_16','7_15','8_14','9_13','10_12','11'],
	q3:['6_27','7_26','8_25','9_24','10_23','11_22','12_21','13_20','14_19','15_18','16_17']
  },
  getUrlParam: function(name){
       var reg = new RegExp("(^|&)"+ name +"=([^&]*)(&|$)");
       var r = window.location.search.substr(1).match(reg);
       if(r!=null)return  unescape(r[2]).toUpperCase(); return null;
  }
};

/*日期格式化函数*/
Date.prototype.Format = function(formatStr) {
  var str = formatStr;
  str = str.replace(/YYYY/, this.getFullYear());
  str = str.replace(/MM/, (this.getMonth() + 1) > 9 ? (this.getMonth() + 1).toString() : '0' + (this.getMonth() + 1));
  str = str.replace(/DD/, this.getDate() > 9 ? this.getDate().toString() : '0' + this.getDate());
  str = str.replace(/hh/, this.getHours() > 9 ? this.getHours().toString() : '0' + this.getHours());
  str = str.replace(/mm/, this.getMinutes() > 9 ? this.getMinutes().toString() : '0' + this.getMinutes());
  str = str.replace(/ss/, this.getSeconds() > 9 ? this.getSeconds().toString() : '0' + this.getSeconds());
  return str;
};

//IE8 数组不支持 indexOf
(function(){
	if(!Array.prototype.indexOf){
		Array.prototype.indexOf = function(elt /*, from*/){
			var len = this.length >>> 0;
		    var from = Number(arguments[1]) || 0;
		    from = (from < 0)
		         ? Math.ceil(from)
		         : Math.floor(from);
		    if (from < 0)
		      from += len;
		    for (; from < len; from++)
		    {
		      if (from in this &&
		          this[from] === elt)
		        return from;
		    }
		    return -1;
		};
	}
})();

/*日期计算*/
Date.prototype.DateAdd = function(strInterval, Number) {
  var dtTmp = this;
  switch (strInterval) {
    case 's':
      return new Date(Date.parse(dtTmp) + (1000 * Number));
    case 'n':
      return new Date(Date.parse(dtTmp) + (60000 * Number));
    case 'h':
      return new Date(Date.parse(dtTmp) + (3600000 * Number));
    case 'd':
      return new Date(Date.parse(dtTmp) + (86400000 * Number));
    case 'w':
      return new Date(Date.parse(dtTmp) + ((86400000 * 7) * Number));
    case 'q':
      return new Date(dtTmp.getFullYear(), (dtTmp.getMonth()) + Number * 3, dtTmp.getDate(), dtTmp.getHours(), dtTmp.getMinutes(), dtTmp.getSeconds());
    case 'm':
      return new Date(dtTmp.getFullYear(), (dtTmp.getMonth()) + Number, dtTmp.getDate(), dtTmp.getHours(), dtTmp.getMinutes(), dtTmp.getSeconds());
    case 'y':
      return new Date((dtTmp.getFullYear() + Number), dtTmp.getMonth(), dtTmp.getDate(), dtTmp.getHours(), dtTmp.getMinutes(), dtTmp.getSeconds());
  }
};

/*日期差计算*/
Date.prototype.DaysBetween = function(date2) {
  var dtTmp = this;
  var ONE_DAY = 1000 * 60 * 60 * 24;
  var date1_ms = dtTmp.getTime();
  var date2_ms = date2.getTime();
  var difference_ms = Math.abs(date1_ms - date2_ms)
  return Math.round(difference_ms / ONE_DAY) + 1;
};

// 秒秒彩滚动数字
(function($) {
  function F(t, o) {
    this.opts = $.extend({
      ballsize: 5, // 彩球个数
      initball: '0,0,0,0,0', // 初始化彩球数据
      loop: 5, // 彩球滚动循环次数（必须为整数）
      timeout: 5000, // 彩球滚动动画执行时间基数
      delay: 150, // 每个彩球动画执行延迟时间基数
      offset: [50, 80], // 球的宽高
      handbar: '.handle_hand', // 拉杆元素
      lamp: '.lamp', // 跑马灯元素
      debugs: true // 是否支持debug [0/false, 1=>对象级输出, 2=>字符串级输出]
    }, o);
    this.slides = [];
    this.size = this.opts.ballsize;
    this.$t = $(t);
    this.balls = [];
    // CALLBACK
    this.callback = function() {
      'sss'
    };
    this.errors = {
      'invalidBallFormat': '彩球数据格式错误'
    };
    this.debugs = this.opts.debugs;
    this.init();
  }

  F.prototype = {
    init: function() {
      var me = this,
        opts = me.opts;
      if (me.checkballs(opts.initball) != me.size) {
        alert(me.errors['invalidBallFormat']);
      }
      me.$handles = $(opts.handbar).children();
      me.createdom();
      // me.flip(me.balls, false);
      me.preloadLightImg();
    },
    checkballs: function(balls) {
      var me = this,
        k = 0;
      if (balls && typeof balls === 'string') {
        balls = balls.split(',');
      }
      // balls存在、为数组，且其长度为size
      if (balls &&
        Object.prototype.toString.call(balls) === '[object Array]' &&
        balls.length == me.size
      ) {
        me.balls = balls;
        for (var i = 0; i < balls.length; i++) {
          var ball = Number(balls[i]);
          if (ball < 0 || ball > 9) {
            break;
          }
          k++;
        }
      }
      // me.debug(k);
      return k;
    },
    createdom: function() {
      var me = this,
        opts = me.opts,
        balls = me.balls;
      for (var i = 0; i < me.size; i++) {
        var _style = 'position:absolute;top:0;left:' + i * me.opts.offset[0] + 'px;float:none;';
        /* ball_number*ball_height*(ball_max_loop+3) */
        _style += 'height:' + 10 * opts.offset[1] * (opts.loop + 3) + 'px';
        me.slides.push(
          $('<div>', {
            'class': 'flipball flipball_' + (i + 1),
            'style': _style,
            text: balls[i]
          }).appendTo(me.$t)
        );
      }
    },
    preloadLightImg: function() {
      var me = this,
        $img = $('img', this.opts.lamp),
        src = $img.data('imgholder');
      $('<img/>').load(function() {
        me.$lampimg = $img;
        me.originsrc = $img.attr('src');
        me.lampsrc = src;
      }).attr('src', src);
    },
    // 跑马灯效果
    marquee: function(status) {
      if (this.lampsrc && this.$lampimg.length) {
        if (status == 'on') {
          this.$lampimg.attr('src', this.lampsrc);
        } else if (status == 'off') {
          this.$lampimg.attr('src', this.originsrc);
        }
      }
    },
    // 拉杆动画效果
    drawbar: function(callback) {
      this.$handles.eq(0).animate({
        opacity: 'hide'
      }, 300, function() {
        $(this).animate({
          opacity: 'show'
        }, 300, function() {
          callback && callback();
        });
      });
    },
    play: function() {
      this.marquee('on');
      this.drawbar();
    },
    stop: function() {
      this.marquee('off');
    },
    // 数字球滚动效果
    flip: function(balls, anim, callback) {
      var me = this,
        opts = me.opts,
        balls = balls || me.balls,
        callback = callback || me.callback;
      if (me.checkballs(balls) != me.size) {
        return alert(me.errors['invalidBallFormat']);
      }
      if (!me.$t.hasClass('.hasball')) me.$t.addClass('hasball');
      balls = me.balls;
      me.callback = callback;
      if (anim === false || anim === 'undefined') {
        me.stop();
        $.each(me.slides, function(idx, slide) {
          var ball_num = Number(balls[idx]);
          slide.stop().css('marginTop', -(10 + ball_num) * opts.offset[1]);
        });
        me.doCallback(me.callback);
      } else {
        me.play();
        $.each(me.slides, function(idx, slide) {
          var ball_num = Number(balls[idx]),
            timeout = opts.timeout + opts.delay * idx,
            // 一圈是10个数，循环opts.loop圈后，在移动ball_num单位个高度(opts.offset[1])
            step = (opts.loop * 10 + ball_num) * opts.offset[1];
          slide.stop().animate({
            marginTop: '+=' + (opts.offset[1] * .6)
          }).stop().animate({
            marginTop: -step
          }, timeout, function() {
            $(this).css('marginTop', -(10 + ball_num) * opts.offset[1]);
            if (idx == me.size - 1) {
              me.stop();
              me.doCallback(me.callback);
            }
          });
        });
      }
    },
    quickflip: function(callback1) {
      var me = this,
        opts = me.opts,
        balls = balls || me.balls,
        callback = callback || me.callback;
      //快速开奖后立即重置掉当前的CALLBACK缓存
      //防止正常开奖逻辑再次执行回调
      me.callback = null;
      if (me.checkballs(balls) != me.size) {
        return alert(me.errors['invalidBallFormat']);
      }
      $.each(me.slides, function(idx, slide) {
        var ball_num = Number(balls[idx]);
        slide.stop().css({
          marginTop: -(10 + ball_num) * opts.offset[1]
        }).animate({
          marginTop: -(10 + ball_num + 10) * opts.offset[1]
        }, 1000, function() {

          if (idx == me.size - 1) {
            me.doCallback(callback);
            callback1 && callback1();
          }
        });
      });
    },
    doCallback: function(callback) {
      if (callback && Object.prototype.toString.call(callback) === '[object Function]') {
        callback();
      }
    },
    // debug
    debug: function() {
      this.debugs && window.console && console.log && console.log('[flipball] ' + Array.prototype.join.call(arguments, ' '));
    }
  }

  $.fn.flipball = function(o) {
    var instance;
    this.each(function() {
      instance = $.data(this, 'flipball');
      // instance = $(this).data( 'flipball' );
      if (instance) {
        // instance.init();
      } else {
        instance = $.data(this, 'flipball', new F(this, o));
      }
    });
    return instance;
  }
})(jQuery);


// jQuery editable select
(function(c){c.extend(c.expr[":"],{nic:function(a,c,d,b){return!(0<=(a.textContent||a.innerText||"").toLowerCase().indexOf((d[3]||"").toLowerCase()))}});c.fn.editableSelect=function(a){var g=this.clone(),d=c('<input type="text">'),b=c('<ul class="es-list">');a=c.extend({},{filter:!0,effect:"default",duration:"fast",onCreate:null,onShow:null,onHide:null,onSelect:null},a);switch(a.effects){case "default":case "fade":case "slide":break;default:a.effects="default"}isNaN(a.duration)&&"fast"==a.duration&&
"slow"==a.duration&&(a.duration="fast");this.replaceWith(d);({init:function(){var f=this;f.copyAttributes(g,d);d.addClass("es-input");c(document.body).append(b);g.find("option").each(function(){var a=c("<li>");a.html(c(this).text());f.copyAttributes(this,a);b.append(a);c(this).attr("selected")&&d.val(c(this).text())});d.on("focus input click",f.show);c(document).click(function(a){c(a.target).is(d)||c(a.target).is(b)||f.hide()});f.initializeList();f.initializeEvents();a.onCreate&&a.onCreate.call(this,
d)},initializeList:function(){var a=this;b.find("li").each(function(){c(this).on("mousemove",function(){b.find(".selected").removeClass("selected");c(this).addClass("selected")});c(this).click(function(){a.setField.call(this,a)})});b.mouseenter(function(){b.find("li.selected").removeClass("selected")})},initializeEvents:function(){var a=this;d.bind("input keydown",function(c){switch(c.keyCode){case 40:a.show();c=b.find("li:visible");var e=c.filter("li.selected");b.find(".selected").removeClass("selected");
e=c.eq(0<e.size()?c.index(e)+1:0);e=(0<e.size()?e:b.find("li:visible:first")).addClass("selected");a.scroll(e,!0);break;case 38:a.show();c=b.find("li:visible");e=c.filter("li.selected");b.find("li.selected").removeClass("selected");e=c.eq(0<e.size()?c.index(e)-1:-1);(0<e.size()?e:b.find("li:visible:last")).addClass("selected");a.scroll(e,!1);break;case 13:b.is(":visible")&&(a.setField.call(b.find("li.selected"),a),c.preventDefault());case 9:case 27:a.hide();break;default:a.show()}})},show:function(){b.find("li").show();
b.css({top:d.offset().top+d.outerHeight()-1,left:d.offset().left,width:d.innerWidth()});if((a.filter?b.find("li:nic("+d.val()+")").hide().size():0)==b.find("li").size())b.hide();else switch(a.effects){case "fade":b.fadeIn(a.duration);break;case "slide":b.slideDown(a.duration);break;default:b.show(a.duration)}a.onShow&&a.onShow.call(this,d)},hide:function(){switch(a.effects){case "fade":b.fadeOut(a.duration);break;case "slide":b.slideUp(a.duration);break;default:b.hide(a.duration)}a.onHide&&a.onHide.call(this,
d)},scroll:function(a,d){var e=0,h=b.find("li:visible").index(a);b.find("li:visible").each(function(a,b){a<h&&(e+=c(b).outerHeight())});if(e+a.outerHeight()>=b.scrollTop()+b.outerHeight()||e<=b.scrollTop())d?b.scrollTop(e+a.outerHeight()-b.outerHeight()):b.scrollTop(e)},copyAttributes:function(a,b){var e=c(a)[0].attributes,d;for(d in e)c(b).attr(e[d].nodeName,e[d].nodeValue)},setField:function(b){if(!c(this).is("li:visible"))return!1;d.val(c(this).text());b.hide();a.onSelect&&a.onSelect.call(d,c(this))}}).init();
return d}})(jQuery);
/**
* DES加密/解密
* @Copyright Copyright (c) 2006
* @author Guapo
* @see DESCore
*/

/*
* encrypt the string to string made up of hex
* return the encrypted string
*/
function strEnc(data,firstKey,secondKey,thirdKey){

 var leng = data.length;
 var encData = "";
 var firstKeyBt,secondKeyBt,thirdKeyBt,firstLength,secondLength,thirdLength;
 if(firstKey != null && firstKey != ""){    
   firstKeyBt = getKeyBytes(firstKey);
   firstLength = firstKeyBt.length;
 }
 if(secondKey != null && secondKey != ""){
   secondKeyBt = getKeyBytes(secondKey);
   secondLength = secondKeyBt.length;
 }
 if(thirdKey != null && thirdKey != ""){
   thirdKeyBt = getKeyBytes(thirdKey);
   thirdLength = thirdKeyBt.length;
 }  
 
 if(leng > 0){
   if(leng < 4){
     var bt = strToBt(data);      
     var encByte ;
     if(firstKey != null && firstKey !="" && secondKey != null && secondKey != "" && thirdKey != null && thirdKey != ""){
       var tempBt;
       var x,y,z;
       tempBt = bt;        
       for(x = 0;x < firstLength ;x ++){
         tempBt = enc(tempBt,firstKeyBt[x]);
       }
       for(y = 0;y < secondLength ;y ++){
         tempBt = enc(tempBt,secondKeyBt[y]);
       }
       for(z = 0;z < thirdLength ;z ++){
         tempBt = enc(tempBt,thirdKeyBt[z]);
       }        
       encByte = tempBt;        
     }else{
       if(firstKey != null && firstKey !="" && secondKey != null && secondKey != ""){
         var tempBt;
         var x,y;
         tempBt = bt;
         for(x = 0;x < firstLength ;x ++){
           tempBt = enc(tempBt,firstKeyBt[x]);
         }
         for(y = 0;y < secondLength ;y ++){
           tempBt = enc(tempBt,secondKeyBt[y]);
         }
         encByte = tempBt;
       }else{
         if(firstKey != null && firstKey !=""){            
           var tempBt;
           var x = 0;
           tempBt = bt;            
           for(x = 0;x < firstLength ;x ++){
             tempBt = enc(tempBt,firstKeyBt[x]);
           }
           encByte = tempBt;
         }
       }        
     }
     encData = bt64ToHex(encByte);
   }else{
     var iterator = parseInt(leng/4);
     var remainder = leng%4;
     var i=0;      
     for(i = 0;i < iterator;i++){
       var tempData = data.substring(i*4+0,i*4+4);
       var tempByte = strToBt(tempData);
       var encByte ;
       if(firstKey != null && firstKey !="" && secondKey != null && secondKey != "" && thirdKey != null && thirdKey != ""){
         var tempBt;
         var x,y,z;
         tempBt = tempByte;
         for(x = 0;x < firstLength ;x ++){
           tempBt = enc(tempBt,firstKeyBt[x]);
         }
         for(y = 0;y < secondLength ;y ++){
           tempBt = enc(tempBt,secondKeyBt[y]);
         }
         for(z = 0;z < thirdLength ;z ++){
           tempBt = enc(tempBt,thirdKeyBt[z]);
         }
         encByte = tempBt;
       }else{
         if(firstKey != null && firstKey !="" && secondKey != null && secondKey != ""){
           var tempBt;
           var x,y;
           tempBt = tempByte;
           for(x = 0;x < firstLength ;x ++){
             tempBt = enc(tempBt,firstKeyBt[x]);
           }
           for(y = 0;y < secondLength ;y ++){
             tempBt = enc(tempBt,secondKeyBt[y]);
           }
           encByte = tempBt;
         }else{
           if(firstKey != null && firstKey !=""){                      
             var tempBt;
             var x;
             tempBt = tempByte;
             for(x = 0;x < firstLength ;x ++){                
               tempBt = enc(tempBt,firstKeyBt[x]);
             }
             encByte = tempBt;              
           }
         }
       }
       encData += bt64ToHex(encByte);
     }      
     if(remainder > 0){
       var remainderData = data.substring(iterator*4+0,leng);
       var tempByte = strToBt(remainderData);
       var encByte ;
       if(firstKey != null && firstKey !="" && secondKey != null && secondKey != "" && thirdKey != null && thirdKey != ""){
         var tempBt;
         var x,y,z;
         tempBt = tempByte;
         for(x = 0;x < firstLength ;x ++){
           tempBt = enc(tempBt,firstKeyBt[x]);
         }
         for(y = 0;y < secondLength ;y ++){
           tempBt = enc(tempBt,secondKeyBt[y]);
         }
         for(z = 0;z < thirdLength ;z ++){
           tempBt = enc(tempBt,thirdKeyBt[z]);
         }
         encByte = tempBt;
       }else{
         if(firstKey != null && firstKey !="" && secondKey != null && secondKey != ""){
           var tempBt;
           var x,y;
           tempBt = tempByte;
           for(x = 0;x < firstLength ;x ++){
             tempBt = enc(tempBt,firstKeyBt[x]);
           }
           for(y = 0;y < secondLength ;y ++){
             tempBt = enc(tempBt,secondKeyBt[y]);
           }
           encByte = tempBt;
         }else{
           if(firstKey != null && firstKey !=""){            
             var tempBt;
             var x;
             tempBt = tempByte;
             for(x = 0;x < firstLength ;x ++){
               tempBt = enc(tempBt,firstKeyBt[x]);
             }
             encByte = tempBt;
           }
         }
       }
       encData += bt64ToHex(encByte);
     }                
   }
 }
 return encData;
}

/*
* decrypt the encrypted string to the original string 
*
* return  the original string  
*/
function strDec(data,firstKey,secondKey,thirdKey){
 var leng = data.length;
 var decStr = "";
 var firstKeyBt,secondKeyBt,thirdKeyBt,firstLength,secondLength,thirdLength;
 if(firstKey != null && firstKey != ""){    
   firstKeyBt = getKeyBytes(firstKey);
   firstLength = firstKeyBt.length;
 }
 if(secondKey != null && secondKey != ""){
   secondKeyBt = getKeyBytes(secondKey);
   secondLength = secondKeyBt.length;
 }
 if(thirdKey != null && thirdKey != ""){
   thirdKeyBt = getKeyBytes(thirdKey);
   thirdLength = thirdKeyBt.length;
 }
 
 var iterator = parseInt(leng/16);
 var i=0;  
 for(i = 0;i < iterator;i++){
   var tempData = data.substring(i*16+0,i*16+16);    
   var strByte = hexToBt64(tempData);    
   var intByte = new Array(64);
   var j = 0;
   for(j = 0;j < 64; j++){
     intByte[j] = parseInt(strByte.substring(j,j+1));
   }    
   var decByte;
   if(firstKey != null && firstKey !="" && secondKey != null && secondKey != "" && thirdKey != null && thirdKey != ""){
     var tempBt;
     var x,y,z;
     tempBt = intByte;
     for(x = thirdLength - 1;x >= 0;x --){
       tempBt = dec(tempBt,thirdKeyBt[x]);
     }
     for(y = secondLength - 1;y >= 0;y --){
       tempBt = dec(tempBt,secondKeyBt[y]);
     }
     for(z = firstLength - 1;z >= 0 ;z --){
       tempBt = dec(tempBt,firstKeyBt[z]);
     }
     decByte = tempBt;
   }else{
     if(firstKey != null && firstKey !="" && secondKey != null && secondKey != ""){
       var tempBt;
       var x,y,z;
       tempBt = intByte;
       for(x = secondLength - 1;x >= 0 ;x --){
         tempBt = dec(tempBt,secondKeyBt[x]);
       }
       for(y = firstLength - 1;y >= 0 ;y --){
         tempBt = dec(tempBt,firstKeyBt[y]);
       }
       decByte = tempBt;
     }else{
       if(firstKey != null && firstKey !=""){
         var tempBt;
         var x,y,z;
         tempBt = intByte;
         for(x = firstLength - 1;x >= 0 ;x --){
           tempBt = dec(tempBt,firstKeyBt[x]);
         }
         decByte = tempBt;
       }
     }
   }
   decStr += byteToString(decByte);
 }      
 return decStr;
}
/*
* chang the string into the bit array
* 
* return bit array(it's length % 64 = 0)
*/
function getKeyBytes(key){
 var keyBytes = new Array();
 var leng = key.length;
 var iterator = parseInt(leng/4);
 var remainder = leng%4;
 var i = 0;
 for(i = 0;i < iterator; i ++){
   keyBytes[i] = strToBt(key.substring(i*4+0,i*4+4));
 }
 if(remainder > 0){
   keyBytes[i] = strToBt(key.substring(i*4+0,leng));
 }    
 return keyBytes;
}

/*
* chang the string(it's length <= 4) into the bit array
* 
* return bit array(it's length = 64)
*/
function strToBt(str){  
 var leng = str.length;
 var bt = new Array(64);
 if(leng < 4){
   var i=0,j=0,p=0,q=0;
   for(i = 0;i<leng;i++){
     var k = str.charCodeAt(i);
     for(j=0;j<16;j++){      
       var pow=1,m=0;
       for(m=15;m>j;m--){
         pow *= 2;
       }        
       bt[16*i+j]=parseInt(k/pow)%2;
     }
   }
   for(p = leng;p<4;p++){
     var k = 0;
     for(q=0;q<16;q++){      
       var pow=1,m=0;
       for(m=15;m>q;m--){
         pow *= 2;
       }        
       bt[16*p+q]=parseInt(k/pow)%2;
     }
   }  
 }else{
   for(i = 0;i<4;i++){
     var k = str.charCodeAt(i);
     for(j=0;j<16;j++){      
       var pow=1;
       for(m=15;m>j;m--){
         pow *= 2;
       }        
       bt[16*i+j]=parseInt(k/pow)%2;
     }
   }  
 }
 return bt;
}

/*
* chang the bit(it's length = 4) into the hex
* 
* return hex
*/
function bt4ToHex(binary) {
 var hex;
 switch (binary) {
   case "0000" : hex = "0"; break;
   case "0001" : hex = "1"; break;
   case "0010" : hex = "2"; break;
   case "0011" : hex = "3"; break;
   case "0100" : hex = "4"; break;
   case "0101" : hex = "5"; break;
   case "0110" : hex = "6"; break;
   case "0111" : hex = "7"; break;
   case "1000" : hex = "8"; break;
   case "1001" : hex = "9"; break;
   case "1010" : hex = "A"; break;
   case "1011" : hex = "B"; break;
   case "1100" : hex = "C"; break;
   case "1101" : hex = "D"; break;
   case "1110" : hex = "E"; break;
   case "1111" : hex = "F"; break;
 }
 return hex;
}

/*
* chang the hex into the bit(it's length = 4)
* 
* return the bit(it's length = 4)
*/
function hexToBt4(hex) {
 var binary;
 switch (hex) {
   case "0" : binary = "0000"; break;
   case "1" : binary = "0001"; break;
   case "2" : binary = "0010"; break;
   case "3" : binary = "0011"; break;
   case "4" : binary = "0100"; break;
   case "5" : binary = "0101"; break;
   case "6" : binary = "0110"; break;
   case "7" : binary = "0111"; break;
   case "8" : binary = "1000"; break;
   case "9" : binary = "1001"; break;
   case "A" : binary = "1010"; break;
   case "B" : binary = "1011"; break;
   case "C" : binary = "1100"; break;
   case "D" : binary = "1101"; break;
   case "E" : binary = "1110"; break;
   case "F" : binary = "1111"; break;
 }
 return binary;
}

/*
* chang the bit(it's length = 64) into the string
* 
* return string
*/
function byteToString(byteData){
 var str="";
 for(i = 0;i<4;i++){
   var count=0;
   for(j=0;j<16;j++){        
     var pow=1;
     for(m=15;m>j;m--){
       pow*=2;
     }              
     count+=byteData[16*i+j]*pow;
   }        
   if(count != 0){
     str+=String.fromCharCode(count);
   }
 }
 return str;
}

function bt64ToHex(byteData){
 var hex = "";
 for(i = 0;i<16;i++){
   var bt = "";
   for(j=0;j<4;j++){    
     bt += byteData[i*4+j];
   }    
   hex+=bt4ToHex(bt);
 }
 return hex;
}

function hexToBt64(hex){
 var binary = "";
 for(i = 0;i<16;i++){
   binary+=hexToBt4(hex.substring(i,i+1));
 }
 return binary;
}

/*
* the 64 bit des core arithmetic
*/

function enc(dataByte,keyByte){  
 var keys = generateKeys(keyByte);    
 var ipByte   = initPermute(dataByte);  
 var ipLeft   = new Array(32);
 var ipRight  = new Array(32);
 var tempLeft = new Array(32);
 var i = 0,j = 0,k = 0,m = 0, n = 0;
 for(k = 0;k < 32;k ++){
   ipLeft[k] = ipByte[k];
   ipRight[k] = ipByte[32+k];
 }    
 for(i = 0;i < 16;i ++){
   for(j = 0;j < 32;j ++){
     tempLeft[j] = ipLeft[j];
     ipLeft[j] = ipRight[j];      
   }  
   var key = new Array(48);
   for(m = 0;m < 48;m ++){
     key[m] = keys[i][m];
   }
   var  tempRight = xor(pPermute(sBoxPermute(xor(expandPermute(ipRight),key))), tempLeft);      
   for(n = 0;n < 32;n ++){
     ipRight[n] = tempRight[n];
   }  
   
 }  
 
 
 var finalData =new Array(64);
 for(i = 0;i < 32;i ++){
   finalData[i] = ipRight[i];
   finalData[32+i] = ipLeft[i];
 }
 return finallyPermute(finalData);  
}

function dec(dataByte,keyByte){  
 var keys = generateKeys(keyByte);    
 var ipByte   = initPermute(dataByte);  
 var ipLeft   = new Array(32);
 var ipRight  = new Array(32);
 var tempLeft = new Array(32);
 var i = 0,j = 0,k = 0,m = 0, n = 0;
 for(k = 0;k < 32;k ++){
   ipLeft[k] = ipByte[k];
   ipRight[k] = ipByte[32+k];
 }  
 for(i = 15;i >= 0;i --){
   for(j = 0;j < 32;j ++){
     tempLeft[j] = ipLeft[j];
     ipLeft[j] = ipRight[j];      
   }  
   var key = new Array(48);
   for(m = 0;m < 48;m ++){
     key[m] = keys[i][m];
   }
   
   var  tempRight = xor(pPermute(sBoxPermute(xor(expandPermute(ipRight),key))), tempLeft);      
   for(n = 0;n < 32;n ++){
     ipRight[n] = tempRight[n];
   }  
 }  
 
 
 var finalData =new Array(64);
 for(i = 0;i < 32;i ++){
   finalData[i] = ipRight[i];
   finalData[32+i] = ipLeft[i];
 }
 return finallyPermute(finalData);  
}

function initPermute(originalData){
 var ipByte = new Array(64);
 for (i = 0, m = 1, n = 0; i < 4; i++, m += 2, n += 2) {
   for (j = 7, k = 0; j >= 0; j--, k++) {
     ipByte[i * 8 + k] = originalData[j * 8 + m];
     ipByte[i * 8 + k + 32] = originalData[j * 8 + n];
   }
 }    
 return ipByte;
}

function expandPermute(rightData){  
 var epByte = new Array(48);
 for (i = 0; i < 8; i++) {
   if (i == 0) {
     epByte[i * 6 + 0] = rightData[31];
   } else {
     epByte[i * 6 + 0] = rightData[i * 4 - 1];
   }
   epByte[i * 6 + 1] = rightData[i * 4 + 0];
   epByte[i * 6 + 2] = rightData[i * 4 + 1];
   epByte[i * 6 + 3] = rightData[i * 4 + 2];
   epByte[i * 6 + 4] = rightData[i * 4 + 3];
   if (i == 7) {
     epByte[i * 6 + 5] = rightData[0];
   } else {
     epByte[i * 6 + 5] = rightData[i * 4 + 4];
   }
 }      
 return epByte;
}

function xor(byteOne,byteTwo){  
 var xorByte = new Array(byteOne.length);
 for(i = 0;i < byteOne.length; i ++){      
   xorByte[i] = byteOne[i] ^ byteTwo[i];
 }  
 return xorByte;
}

function sBoxPermute(expandByte){
 
   var sBoxByte = new Array(32);
   var binary = "";
   var s1 = [
       [14, 4, 13, 1, 2, 15, 11, 8, 3, 10, 6, 12, 5, 9, 0, 7],
       [0, 15, 7, 4, 14, 2, 13, 1, 10, 6, 12, 11, 9, 5, 3, 8],
       [4, 1, 14, 8, 13, 6, 2, 11, 15, 12, 9, 7, 3, 10, 5, 0],
       [15, 12, 8, 2, 4, 9, 1, 7, 5, 11, 3, 14, 10, 0, 6, 13 ]];

       /* Table - s2 */
   var s2 = [
       [15, 1, 8, 14, 6, 11, 3, 4, 9, 7, 2, 13, 12, 0, 5, 10],
       [3, 13, 4, 7, 15, 2, 8, 14, 12, 0, 1, 10, 6, 9, 11, 5],
       [0, 14, 7, 11, 10, 4, 13, 1, 5, 8, 12, 6, 9, 3, 2, 15],
       [13, 8, 10, 1, 3, 15, 4, 2, 11, 6, 7, 12, 0, 5, 14, 9 ]];

       /* Table - s3 */
   var s3= [
       [10, 0, 9, 14, 6, 3, 15, 5, 1, 13, 12, 7, 11, 4, 2, 8],
       [13, 7, 0, 9, 3, 4, 6, 10, 2, 8, 5, 14, 12, 11, 15, 1],
       [13, 6, 4, 9, 8, 15, 3, 0, 11, 1, 2, 12, 5, 10, 14, 7],
       [1, 10, 13, 0, 6, 9, 8, 7, 4, 15, 14, 3, 11, 5, 2, 12 ]];
       /* Table - s4 */
   var s4 = [
       [7, 13, 14, 3, 0, 6, 9, 10, 1, 2, 8, 5, 11, 12, 4, 15],
       [13, 8, 11, 5, 6, 15, 0, 3, 4, 7, 2, 12, 1, 10, 14, 9],
       [10, 6, 9, 0, 12, 11, 7, 13, 15, 1, 3, 14, 5, 2, 8, 4],
       [3, 15, 0, 6, 10, 1, 13, 8, 9, 4, 5, 11, 12, 7, 2, 14 ]];

       /* Table - s5 */
   var s5 = [
       [2, 12, 4, 1, 7, 10, 11, 6, 8, 5, 3, 15, 13, 0, 14, 9],
       [14, 11, 2, 12, 4, 7, 13, 1, 5, 0, 15, 10, 3, 9, 8, 6],
       [4, 2, 1, 11, 10, 13, 7, 8, 15, 9, 12, 5, 6, 3, 0, 14],
       [11, 8, 12, 7, 1, 14, 2, 13, 6, 15, 0, 9, 10, 4, 5, 3 ]];

       /* Table - s6 */
   var s6 = [
       [12, 1, 10, 15, 9, 2, 6, 8, 0, 13, 3, 4, 14, 7, 5, 11],
       [10, 15, 4, 2, 7, 12, 9, 5, 6, 1, 13, 14, 0, 11, 3, 8],
       [9, 14, 15, 5, 2, 8, 12, 3, 7, 0, 4, 10, 1, 13, 11, 6],
       [4, 3, 2, 12, 9, 5, 15, 10, 11, 14, 1, 7, 6, 0, 8, 13 ]];

       /* Table - s7 */
   var s7 = [
       [4, 11, 2, 14, 15, 0, 8, 13, 3, 12, 9, 7, 5, 10, 6, 1],
       [13, 0, 11, 7, 4, 9, 1, 10, 14, 3, 5, 12, 2, 15, 8, 6],
       [1, 4, 11, 13, 12, 3, 7, 14, 10, 15, 6, 8, 0, 5, 9, 2],
       [6, 11, 13, 8, 1, 4, 10, 7, 9, 5, 0, 15, 14, 2, 3, 12]];

       /* Table - s8 */
   var s8 = [
       [13, 2, 8, 4, 6, 15, 11, 1, 10, 9, 3, 14, 5, 0, 12, 7],
       [1, 15, 13, 8, 10, 3, 7, 4, 12, 5, 6, 11, 0, 14, 9, 2],
       [7, 11, 4, 1, 9, 12, 14, 2, 0, 6, 10, 13, 15, 3, 5, 8],
       [2, 1, 14, 7, 4, 10, 8, 13, 15, 12, 9, 0, 3, 5, 6, 11]];
   
   for(m=0;m<8;m++){
   var i=0,j=0;
   i = expandByte[m*6+0]*2+expandByte[m*6+5];
   j = expandByte[m * 6 + 1] * 2 * 2 * 2 
     + expandByte[m * 6 + 2] * 2* 2 
     + expandByte[m * 6 + 3] * 2 
     + expandByte[m * 6 + 4];
   switch (m) {
     case 0 :
       binary = getBoxBinary(s1[i][j]);
       break;
     case 1 :
       binary = getBoxBinary(s2[i][j]);
       break;
     case 2 :
       binary = getBoxBinary(s3[i][j]);
       break;
     case 3 :
       binary = getBoxBinary(s4[i][j]);
       break;
     case 4 :
       binary = getBoxBinary(s5[i][j]);
       break;
     case 5 :
       binary = getBoxBinary(s6[i][j]);
       break;
     case 6 :
       binary = getBoxBinary(s7[i][j]);
       break;
     case 7 :
       binary = getBoxBinary(s8[i][j]);
       break;
   }      
   sBoxByte[m*4+0] = parseInt(binary.substring(0,1));
   sBoxByte[m*4+1] = parseInt(binary.substring(1,2));
   sBoxByte[m*4+2] = parseInt(binary.substring(2,3));
   sBoxByte[m*4+3] = parseInt(binary.substring(3,4));
 }
 return sBoxByte;
}

function pPermute(sBoxByte){
 var pBoxPermute = new Array(32);
 pBoxPermute[ 0] = sBoxByte[15]; 
 pBoxPermute[ 1] = sBoxByte[ 6]; 
 pBoxPermute[ 2] = sBoxByte[19]; 
 pBoxPermute[ 3] = sBoxByte[20]; 
 pBoxPermute[ 4] = sBoxByte[28]; 
 pBoxPermute[ 5] = sBoxByte[11]; 
 pBoxPermute[ 6] = sBoxByte[27]; 
 pBoxPermute[ 7] = sBoxByte[16]; 
 pBoxPermute[ 8] = sBoxByte[ 0]; 
 pBoxPermute[ 9] = sBoxByte[14]; 
 pBoxPermute[10] = sBoxByte[22]; 
 pBoxPermute[11] = sBoxByte[25]; 
 pBoxPermute[12] = sBoxByte[ 4]; 
 pBoxPermute[13] = sBoxByte[17]; 
 pBoxPermute[14] = sBoxByte[30]; 
 pBoxPermute[15] = sBoxByte[ 9]; 
 pBoxPermute[16] = sBoxByte[ 1]; 
 pBoxPermute[17] = sBoxByte[ 7]; 
 pBoxPermute[18] = sBoxByte[23]; 
 pBoxPermute[19] = sBoxByte[13]; 
 pBoxPermute[20] = sBoxByte[31]; 
 pBoxPermute[21] = sBoxByte[26]; 
 pBoxPermute[22] = sBoxByte[ 2]; 
 pBoxPermute[23] = sBoxByte[ 8]; 
 pBoxPermute[24] = sBoxByte[18]; 
 pBoxPermute[25] = sBoxByte[12]; 
 pBoxPermute[26] = sBoxByte[29]; 
 pBoxPermute[27] = sBoxByte[ 5]; 
 pBoxPermute[28] = sBoxByte[21]; 
 pBoxPermute[29] = sBoxByte[10]; 
 pBoxPermute[30] = sBoxByte[ 3]; 
 pBoxPermute[31] = sBoxByte[24];    
 return pBoxPermute;
}

function finallyPermute(endByte){    
 var fpByte = new Array(64);  
 fpByte[ 0] = endByte[39]; 
 fpByte[ 1] = endByte[ 7]; 
 fpByte[ 2] = endByte[47]; 
 fpByte[ 3] = endByte[15]; 
 fpByte[ 4] = endByte[55]; 
 fpByte[ 5] = endByte[23]; 
 fpByte[ 6] = endByte[63]; 
 fpByte[ 7] = endByte[31]; 
 fpByte[ 8] = endByte[38]; 
 fpByte[ 9] = endByte[ 6]; 
 fpByte[10] = endByte[46]; 
 fpByte[11] = endByte[14]; 
 fpByte[12] = endByte[54]; 
 fpByte[13] = endByte[22]; 
 fpByte[14] = endByte[62]; 
 fpByte[15] = endByte[30]; 
 fpByte[16] = endByte[37]; 
 fpByte[17] = endByte[ 5]; 
 fpByte[18] = endByte[45]; 
 fpByte[19] = endByte[13]; 
 fpByte[20] = endByte[53]; 
 fpByte[21] = endByte[21]; 
 fpByte[22] = endByte[61]; 
 fpByte[23] = endByte[29]; 
 fpByte[24] = endByte[36]; 
 fpByte[25] = endByte[ 4]; 
 fpByte[26] = endByte[44]; 
 fpByte[27] = endByte[12]; 
 fpByte[28] = endByte[52]; 
 fpByte[29] = endByte[20]; 
 fpByte[30] = endByte[60]; 
 fpByte[31] = endByte[28]; 
 fpByte[32] = endByte[35]; 
 fpByte[33] = endByte[ 3]; 
 fpByte[34] = endByte[43]; 
 fpByte[35] = endByte[11]; 
 fpByte[36] = endByte[51]; 
 fpByte[37] = endByte[19]; 
 fpByte[38] = endByte[59]; 
 fpByte[39] = endByte[27]; 
 fpByte[40] = endByte[34]; 
 fpByte[41] = endByte[ 2]; 
 fpByte[42] = endByte[42]; 
 fpByte[43] = endByte[10]; 
 fpByte[44] = endByte[50]; 
 fpByte[45] = endByte[18]; 
 fpByte[46] = endByte[58]; 
 fpByte[47] = endByte[26]; 
 fpByte[48] = endByte[33]; 
 fpByte[49] = endByte[ 1]; 
 fpByte[50] = endByte[41]; 
 fpByte[51] = endByte[ 9]; 
 fpByte[52] = endByte[49]; 
 fpByte[53] = endByte[17]; 
 fpByte[54] = endByte[57]; 
 fpByte[55] = endByte[25]; 
 fpByte[56] = endByte[32]; 
 fpByte[57] = endByte[ 0]; 
 fpByte[58] = endByte[40]; 
 fpByte[59] = endByte[ 8]; 
 fpByte[60] = endByte[48]; 
 fpByte[61] = endByte[16]; 
 fpByte[62] = endByte[56]; 
 fpByte[63] = endByte[24];
 return fpByte;
}

function getBoxBinary(i) {
 var binary = "";
 switch (i) {
   case 0 :binary = "0000";break;
   case 1 :binary = "0001";break;
   case 2 :binary = "0010";break;
   case 3 :binary = "0011";break;
   case 4 :binary = "0100";break;
   case 5 :binary = "0101";break;
   case 6 :binary = "0110";break;
   case 7 :binary = "0111";break;
   case 8 :binary = "1000";break;
   case 9 :binary = "1001";break;
   case 10 :binary = "1010";break;
   case 11 :binary = "1011";break;
   case 12 :binary = "1100";break;
   case 13 :binary = "1101";break;
   case 14 :binary = "1110";break;
   case 15 :binary = "1111";break;
 }
 return binary;
}
/*
* generate 16 keys for xor
*
*/
function generateKeys(keyByte){    
 var key   = new Array(56);
 var keys = new Array();  
 
 keys[ 0] = new Array();
 keys[ 1] = new Array();
 keys[ 2] = new Array();
 keys[ 3] = new Array();
 keys[ 4] = new Array();
 keys[ 5] = new Array();
 keys[ 6] = new Array();
 keys[ 7] = new Array();
 keys[ 8] = new Array();
 keys[ 9] = new Array();
 keys[10] = new Array();
 keys[11] = new Array();
 keys[12] = new Array();
 keys[13] = new Array();
 keys[14] = new Array();
 keys[15] = new Array();  
 var loop = [1,1,2,2,2,2,2,2,1,2,2,2,2,2,2,1];

 for(i=0;i<7;i++){
   for(j=0,k=7;j<8;j++,k--){
     key[i*8+j]=keyByte[8*k+i];
   }
 }    
 
 var i = 0;
 for(i = 0;i < 16;i ++){
   var tempLeft=0;
   var tempRight=0;
   for(j = 0; j < loop[i];j ++){          
     tempLeft = key[0];
     tempRight = key[28];
     for(k = 0;k < 27 ;k ++){
       key[k] = key[k+1];
       key[28+k] = key[29+k];
     }  
     key[27]=tempLeft;
     key[55]=tempRight;
   }
   var tempKey = new Array(48);
   tempKey[ 0] = key[13];
   tempKey[ 1] = key[16];
   tempKey[ 2] = key[10];
   tempKey[ 3] = key[23];
   tempKey[ 4] = key[ 0];
   tempKey[ 5] = key[ 4];
   tempKey[ 6] = key[ 2];
   tempKey[ 7] = key[27];
   tempKey[ 8] = key[14];
   tempKey[ 9] = key[ 5];
   tempKey[10] = key[20];
   tempKey[11] = key[ 9];
   tempKey[12] = key[22];
   tempKey[13] = key[18];
   tempKey[14] = key[11];
   tempKey[15] = key[ 3];
   tempKey[16] = key[25];
   tempKey[17] = key[ 7];
   tempKey[18] = key[15];
   tempKey[19] = key[ 6];
   tempKey[20] = key[26];
   tempKey[21] = key[19];
   tempKey[22] = key[12];
   tempKey[23] = key[ 1];
   tempKey[24] = key[40];
   tempKey[25] = key[51];
   tempKey[26] = key[30];
   tempKey[27] = key[36];
   tempKey[28] = key[46];
   tempKey[29] = key[54];
   tempKey[30] = key[29];
   tempKey[31] = key[39];
   tempKey[32] = key[50];
   tempKey[33] = key[44];
   tempKey[34] = key[32];
   tempKey[35] = key[47];
   tempKey[36] = key[43];
   tempKey[37] = key[48];
   tempKey[38] = key[38];
   tempKey[39] = key[55];
   tempKey[40] = key[33];
   tempKey[41] = key[52];
   tempKey[42] = key[45];
   tempKey[43] = key[41];
   tempKey[44] = key[49];
   tempKey[45] = key[35];
   tempKey[46] = key[28];
   tempKey[47] = key[31];
   switch(i){
     case 0: for(m=0;m < 48 ;m++){ keys[ 0][m] = tempKey[m]; } break;
     case 1: for(m=0;m < 48 ;m++){ keys[ 1][m] = tempKey[m]; } break;
     case 2: for(m=0;m < 48 ;m++){ keys[ 2][m] = tempKey[m]; } break;
     case 3: for(m=0;m < 48 ;m++){ keys[ 3][m] = tempKey[m]; } break;
     case 4: for(m=0;m < 48 ;m++){ keys[ 4][m] = tempKey[m]; } break;
     case 5: for(m=0;m < 48 ;m++){ keys[ 5][m] = tempKey[m]; } break;
     case 6: for(m=0;m < 48 ;m++){ keys[ 6][m] = tempKey[m]; } break;
     case 7: for(m=0;m < 48 ;m++){ keys[ 7][m] = tempKey[m]; } break;
     case 8: for(m=0;m < 48 ;m++){ keys[ 8][m] = tempKey[m]; } break;
     case 9: for(m=0;m < 48 ;m++){ keys[ 9][m] = tempKey[m]; } break;
     case 10: for(m=0;m < 48 ;m++){ keys[10][m] = tempKey[m]; } break;
     case 11: for(m=0;m < 48 ;m++){ keys[11][m] = tempKey[m]; } break;
     case 12: for(m=0;m < 48 ;m++){ keys[12][m] = tempKey[m]; } break;
     case 13: for(m=0;m < 48 ;m++){ keys[13][m] = tempKey[m]; } break;
     case 14: for(m=0;m < 48 ;m++){ keys[14][m] = tempKey[m]; } break;
     case 15: for(m=0;m < 48 ;m++){ keys[15][m] = tempKey[m]; } break;
   }
 }
 return keys;  
}
//end-------------------------------------------------------------------------------------------------------------
/*
function test() {
 
 var msg = "abcdefgh";
 var bt = strToBt(msg);
 
 var key = "12345678";
 var keyB = strToBt(key);
   
 var encByte = enc(bt,keyB);
     
 var enchex  = bt64ToHex(encByte);  
 endata.value=enchex;
 
 var encStr = hexToBt64(enchex);
 alert("encStr="+encStr);
 var eByte = new Array();
 for(m=0;m<encStr.length;m++){
   eByte[m] = parseInt(encStr.substring(m,m+1));
 }
 var decbyte= dec(eByte,keyB)
 var decmsg= byteToString(decbyte);
 alert("decbyte="+decbyte);
 alert("decmsg="+decmsg);  
}*/
/* jshint devel:true */

if ('function' !== typeof Array.prototype.reduce) {
  Array.prototype.reduce = function(callback, opt_initialValue) {
    'use strict';
    if (null === this || 'undefined' === typeof this) {
      // At the moment all modern browsers, that support strict mode, have
      // native implementation of Array.prototype.reduce. For instance, IE8
      // does not support strict mode, so this check is actually useless.
      throw new TypeError(
        'Array.prototype.reduce called on null or undefined');
    }
    if ('function' !== typeof callback) {
      throw new TypeError(callback + ' is not a function');
    }
    var index, value,
      length = this.length >>> 0,
      isValueSet = false;
    if (1 < arguments.length) {
      value = opt_initialValue;
      isValueSet = true;
    }
    for (index = 0; length > index; ++index) {
      if (this.hasOwnProperty(index)) {
        if (isValueSet) {
          value = callback(value, this[index], index, this);
        } else {
          value = this[index];
          isValueSet = true;
        }
      }
    }
    if (!isValueSet) {
      throw new TypeError('Reduce of empty array with no initial value');
    }
    return value;
  };
}

var Guide = Guide || {};

Guide = {
  guiding:false,
  resetTipBorderPos: function() {
    var me = this;
    //教程重播浮窗
    var fright = 0;

    if ($(".highlight:eq(0)").length > 0) {
      var sum = $(".highlight:visible").get().reduce(function(sum, element) {
        return sum + $(element).outerHeight();
      }, 0);

      $(".guide-box .tip_backborder").css({
        height: sum
      });

      $(".guide-box").css({
        height: sum,
        top: $(".highlight:eq(0)").offset().top - 4
      });

      $(".guide-box").find('.tip_stepin').css({
        top: $(".highlight:eq(0)").offset().top + sum
      });

      //判断是否超出窗口高度
      var checkOutWindow = parseInt((sum * 1.1), 10) + $(".tip_stepin").outerHeight() + $(".highlight:eq(0)").offset().top;
      var checkOutWindowRight = ($(".tip_stepin").outerWidth() < 708 ? 708 : $(".tip_stepin").outerWidth()) + $(".highlight:eq(0)").offset().left;

      var tipTop = 10;

      if (checkOutWindow > $(window).height()) {
        tipTop = -parseInt(($(".tip_stepin").outerHeight() + sum + 30), 10);
      }

      $(".guide-box .tip_stepin").css({
        top: tipTop
      });

      if (checkOutWindowRight > $(window).width()) {
        $(".guide-box").css({
          left: $(".highlight:eq(0)").offset().left - ($(".highlight:eq(0)").offset().left + $('.guide-box').width() - $(window).width())
        });
        $(".guide-box .tip_backborder").css({
          left: $(".highlight:eq(0)").offset().left + $('.guide-box').width() - $(window).width() - 4
        });
        $(".guide-box .tip_stepin").css({
          left: $(".highlight:eq(0)").offset().left - $(".guide-box .tip_stepin").width() - $(window).width() + $('.guide-box').width() - 4,
          top: -$(".guide-box .tip_backborder").height()
        });
      } else {
        if ($('.guide-box').width() < $(".tip_stepin").width()) {
          $(".guide-box").css({
            left: $(".highlight:eq(0)").offset().left - ($(".highlight:eq(0)").offset().left + $('.guide-box').width() - $(window).width())
          });
          $(".guide-box .tip_backborder").css({
            left: $(".highlight:eq(0)").offset().left + $('.guide-box').width() - $(window).width() - 4
          });
          $(".guide-box .tip_stepin").css({
            left: $(".highlight:eq(0)").offset().left - $(".guide-box .tip_stepin").width() - $(window).width() + $('.guide-box').width() - 4,
            top: -$(".guide-box .tip_backborder").height()
          });
        } else {
          $(".guide-box").css({
            left: $(".highlight:eq(0)").offset().left - 4
          });
          $(".guide-box .tip_stepin").css({
            'left': 'auto',
            'top': tipTop
          });
          $(".guide-box .tip_backborder").css({
            'left': 'auto'
          });
        }
      }

    };
  },
  resetBorder: function() {
    Q.debouncer(Guide.resetTipBorderPos, 200);
  },
  scrollToPos: function(pos) {
    $('html, body').animate({
      scrollTop: pos
    }, 1000);
  },
  guideIntro: function(highEles, tips, nextChk) {
    var loopcheckEle;
    var me = this;
    var chkbackfn, successfn, displayfn, endfn;
    var totalTipNumber = highEles.length;
    if (arguments.length > 3) {
      chkbackfn = arguments[3];
    }
    if (arguments.length > 4) {
      successfn = arguments[4];
    }
    if (arguments.length > 5) {
      displayfn = arguments[5];
    }

    if (arguments.length > 6) {
      endfn = arguments[6];
    }

    //监测元素位置变化
    var loopChkPos = function(element, fn) {
      var lastPos = null;
      var lastOff = null;
      loopcheckEle = setInterval(function() {
        if (element == null || element.length < 1) return element; // abort if element is non existend eny more
        if (lastPos == null) lastPos = element.position();
        if (lastOff == null) lastOff = element.offset();
        var newPos = element.position();
        var newOff = element.offset();
        if (lastPos.top != newPos.top || lastPos.left != newPos.left) {
          if (typeof(fn) == "function") fn(lastPos, newPos);
          lastPos = element.position();
        }
        if (lastOff.top != newOff.top || lastOff.left != newOff.left) {
          if (typeof(fn) == "function") fn(lastOff, newOff);
          lastOff = element.offset();
        }
      }, 50);
      return loopcheckEle;
    };

    //新手指引初始化
    var initIntro = function(index) {
      //本次新手指引总步数
      var totalTipNumber = highEles.length;
      var initStep = index,
        initStepEl;
      if (highEles[initStep].indexOf('|') > -1) {
        initStepEl = highEles[initStep].split('|')[0];
      } else {
        initStepEl = highEles[initStep];
      }

      var initStepLine = tips[initStep];

      //验证指引步骤是否一致
      if (tips.length !== totalTipNumber) {
        return false
      };

      $(initStepEl).addClass('highlight');

      loopcheckEle = loopChkPos($(".highlight:eq(0)"), Guide.resetTipBorderPos);

      me.chk = loopcheckEle;
      var allWidth = $(initStepEl).map(function() {
        return $(this).outerWidth();
      }).get();

      var maxWidth = Math.max.apply(null, allWidth);
      var nowsum = $(".highlight:visible").get().reduce(function(nowsum, element) {
        return nowsum + $(element).outerHeight();
      }, 0);

      $(".guide-box").css({
        width: maxWidth,
        height: nowsum,
        left: $(".highlight:eq(0)").offset().left - 4,
        top: $(".highlight:eq(0)").offset().top - 4
      }).show();

      $(".highlight").click(function() {
        Guide.resetTipBorderPos();
      });

      // 用户新手指引
      var introStepTpl = [
        '<div class="tip_backborder"></div>',
        '<div class="tip_stepin">',
        '<div class="tip_icon"></div>',
        '<div class="tip_content">',
        '<span class="dot-ico dot-left"></span><span class="dot-ico dot-top"></span><span class="dot-ico dot-bottom"></span><span class="dot-ico dot-right"></span><em>', initStepLine,
        '</em><div class="tip_opt"><button class="tip_skip" rel="0">跳过</button><button class="tip_prev" rel="prev" disabled="disabled">上一步</button><button class="tip_next" rel="next">下一步</button><button class="tip_other" rel="other" style="display:none;"></button><button class="tip_end" rel="next" style="display:none;">我看明白了</button><button class="tip_review" style="display:none;" rel="next">再看一遍</button></div>',
        '</div>',
        '</div>'
      ].join('');

      $(".overlay").addClass('overlay-guide').show();

      $(".guide-box").html(introStepTpl).find('.tip_backborder').css({
        width: maxWidth,
        height: nowsum
      });

      me.calScrollTop();

      var skipBtn = $(".guide-box").find('.tip_skip');
      var nextBtn = $(".guide-box").find('.tip_next');
      var prevBtn = $(".guide-box").find('.tip_prev');
      var finishBtn = $(".guide-box").find('.tip_end');
      var repeatBtn = $(".guide-box").find('.tip_review');
      var otherBtn = $(".guide-box").find('.tip_other');

      var updateBtn = function(counted, totalTipNumber) {
        (counted == 0) ? prevBtn.attr({
          'disabled': 'disabled'
        }): prevBtn.removeAttr('disabled');
        (counted == totalTipNumber - 1) ? nextBtn.attr({
          'disabled': 'disabled'
        }).hide(): nextBtn.removeAttr('disabled').show();
        (counted == totalTipNumber - 1) ? finishBtn.show(): finishBtn.hide();
        (counted == totalTipNumber - 1) ? repeatBtn.show(): repeatBtn.hide();
        (counted == totalTipNumber - 1) ? skipBtn.hide(): skipBtn.show();
        $(".guide-box em").html(tips[counted]);
      }

      //执行步骤，包括上一步和下一步
      var updateStep = function(counted, totalTipNumber) {
        //下一步指引
        $('.highlight').removeClass('highlight');
        $('.eitherhigh').removeClass('eitherhigh');
        var nowTag;
        if (highEles[counted].indexOf('|') > -1) {
          nowTag = highEles[counted].split('|')[0];
          var otherTag = highEles[counted].split('|')[1];
          $(otherTag).addClass('eitherhigh');
        } else {
          nowTag = highEles[counted];
        }

        var allWidth = [];
        if (nowTag !== '') {
          $(nowTag).addClass('highlight');
          allWidth = $(nowTag).map(function() {
            return $(this).outerWidth();
          }).get();
        } else {
          allWidth = [0]
        }

        var maxWidth = Math.max.apply(null, allWidth);
        var nowsum = $(".highlight:visible").get().reduce(function(nowsum, element) {
          return nowsum + $(element).outerHeight();
        }, 0);
        var firstHighlightOffset = {
          left: 'auto',
          top: 0
        };

        if ($(".highlight").size() > 0) {
          firstHighlightOffset = $(".highlight:eq(0)").offset();
          $(".guide-box .tip_backborder").css({
            width: maxWidth,
            height: nowsum
          });
          $(".guide-box").css({
            width: maxWidth,
            height: nowsum,
            left: firstHighlightOffset.left - 4,
            top: firstHighlightOffset.top - 4
          }).show();
        } else {
          $(".guide-box .tip_backborder").hide();
          $(".guide-box").css({
            top: parseInt($(window).height() / 2, 10) - 100
          });
        }

        //判断是否超出窗口高度
        var checkOutWindow = parseInt((nowsum * 1.1), 10) + $(".tip_stepin").outerHeight() + firstHighlightOffset.top;
        var checkOutWindowRight = ($(".tip_stepin").outerWidth() < 708 ? 708 : $(".tip_stepin").outerWidth()) + firstHighlightOffset.left;

        var tipTop = 10;
        if (checkOutWindow > $(window).height()) {
          tipTop = -parseInt(($(".tip_stepin").outerHeight() + nowsum + 30), 10);
        }
        $(".guide-box .tip_stepin").css({
          top: tipTop
        })

        if ($(".tip_stepin").outerWidth() < 708) {
          $(".tip_stepin").width(700);
          $(".guide-box").width(700);
        } else {
          $(".tip_stepin").css({
            'width': 'auto'
          });
          $(".guide-box").css({
            'width': 'auto'
          });
        }

        //MAX:1260PX

        if (checkOutWindowRight > $(window).width()) {
          $(".guide-box").css({
            left: firstHighlightOffset.left - (firstHighlightOffset.left + $('.guide-box').width() - $(window).width())
          });
          $(".guide-box .tip_backborder").css({
            left: firstHighlightOffset.left + $('.guide-box').width() - $(window).width() - 4
          });
          $(".guide-box .tip_stepin").css({
            left: firstHighlightOffset.left - $(".guide-box .tip_stepin").width() - $(window).width() + $('.guide-box').width() - 4,
            top: -$(".guide-box .tip_backborder").height()
          });
        } else {
          if ($('.guide-box').width() < $(".tip_stepin").width()) {
            $(".guide-box").css({
              left: firstHighlightOffset.left - (firstHighlightOffset.left + $('.guide-box').width() - $(window).width())
            });
            $(".guide-box .tip_backborder").css({
              left: firstHighlightOffset.left + $('.guide-box').width() - $(window).width() - 4
            });
            $(".guide-box .tip_stepin").css({
              left: firstHighlightOffset.left - $(".guide-box .tip_stepin").width() - $(window).width() + $('.guide-box').width() - 4,
              top: -$(".guide-box .tip_backborder").height()
            });
          } else {
            $(".guide-box").css({
              left: firstHighlightOffset.left - 4
            });
            $(".guide-box .tip_stepin").css({
              'left': 'auto',
              'top': tipTop + 'px'
            });
            $(".guide-box .tip_backborder").css({
              'left': 'auto'
            });
          }
        }

        me.calScrollTop();

        if (typeof displayfn != 'undefined') {
          if (typeof displayfn[counted] === 'function') {
            displayfn[counted]();
          }
        }
      };
      prevBtn.hide();
      prevBtn.unbind('click').click(function(event) {
        var nowStep = parseInt(skipBtn.attr('rel'), 10);
        var counted = ((nowStep - 1) < 0 ? totalTipNumber : (nowStep - 1));
        skipBtn.attr('rel', counted);
        nextBtn.removeClass('lock');
        updateBtn(counted, totalTipNumber);
        updateStep(counted, totalTipNumber);
      });

      nextBtn.unbind('click').click(function(event) {
        if (nextBtn.hasClass('lock')) {
          return false;
        }
        var nowStep = parseInt(skipBtn.attr('rel'), 10);
        var counted = ((nowStep + 1) < totalTipNumber ? (nowStep + 1) : 0);
        if (typeof nextChk[counted - 1] === 'number') {
          if (nextChk[counted - 1]) {
            if ($('.highlight .disabled').size() > 0) {
              if (typeof chkbackfn === 'function') {
                chkbackfn(nowStep);
                me.calScrollTop();
              }
              return false;
            }
          }
        } else {
          var chkRes = eval(nextChk[counted - 1]);
          if (chkRes) {
            if (typeof chkbackfn === 'function') {
              chkbackfn(nowStep);
              me.calScrollTop();
            }
            return false;
          } else {
            if (typeof successfn === 'function') {
              nextBtn.addClass('lock');
              successfn();
            }
          }
        }
        skipBtn.attr('rel', counted);
        updateBtn(counted, totalTipNumber);
        updateStep(counted, totalTipNumber);
      });

      skipBtn.unbind('click').click(function(event) {
        clearInterval(loopcheckEle);
        Guide.cleanGuide();
        if (typeof endfn === 'function') {
          endfn();
        }
      });

      finishBtn.unbind('click').click(function(event) {
        clearInterval(loopcheckEle);
        Guide.cleanGuide();
        if (typeof endfn === 'function') {
          endfn();
        }
      });

      repeatBtn.unbind('click').click(function(event) {
        clearInterval(loopcheckEle);
        Guide.cleanGuide();
        initIntro(0);
      });

      if (typeof displayfn != 'undefined') {
        if (typeof displayfn[0] === 'function') {
          displayfn[0]();
        }
      }
    }

    //初始化
    initIntro(0);

  },
  calScrollTop: function() {
    var scrollTopFixed = 0;
    if ($(".guide-box").offset().top > parseInt($(window).height() / 2, 10)) {
      scrollTopFixed = parseInt($(".guide-box").offset().top / 2) - $('.tip_stepin').height();
      if (document.body.scrollTop < ($(".guide-box").position().top - $('.tip_stepin').height())) {
        scrollTopFixed = $(".guide-box").position().top - $('.tip_stepin').height() - 20;
      }
      if (scrollTopFixed < 0 || ($(".guide-box").position().top - document.body.scrollTop) > scrollTopFixed) {
        if (parseInt($('.tip_stepin').css('top').replace('px', ''), 10) > 0) {
          scrollTopFixed = ($(".guide-box").position().top + $(".tip_stepin").height()) / 2 - 20;
        }
      }
    } else {
      scrollTopFixed = ($(".guide-box").position().top + $(".tip_stepin").height()) / 2 - 50;
    }
    if ($(".guide-box").offset().top < document.body.scrollTop) {
      scrollTopFixed = parseInt($(".guide-box").offset().top / 2) - 50;
    }
    if ($('.tip_stepin').offset().top < 0 || $(".highlight").size() == 0) {
      scrollTopFixed = 0;
    }
    Guide.scrollToPos(scrollTopFixed);
  },
  cleanGuide: function() {
    var me = this;
    $(".overlay").hide();
    $(".guide-box").hide();
    $('.highlight').removeClass('highlight');
    $('.eitherhigh').removeClass('eitherhigh');
    me.guiding=false;
    $('#market .orders .sale').css({
      'opacity': 1
    });
    $('#market .orders .buy').css({
      'opacity': 1
    });
    $('.lock').removeClass('lock');
    $('#lottery .number dl dd i.tada').removeClass('tada').removeClass('animated');
    $('#market .number dl dd i.tada').removeClass('tada').removeClass('animated');
    if (me.chk != null) {
      clearInterval(me.chk);
    };
  },

  //普通玩法新手指引
  newbieTour: function() {
    var me=this;
    //$(".lt-tab li:eq(0)").trigger('click');
    me.guiding=true;
    //新手指南每一步的高亮元素最好必须是呈现上是连续的元素
    Guide.guideIntro(["#lottery .tab,#lottery .subtab", "#lottery .number,#lottery .count", "#lottery .orders", ""], ['请选择一种投注玩法，例如：后三码(复式)',
        '选择一组号码并点击“确认选号”按钮就完成选号啦！',
        '点击提交注单，完成投注。',
        '恭喜您，完成新手引导。'
      ], [0, '$(".highlight .disabled").size()>0', 0, 0],
      function() {
        if ($('#lottery .number dl dd.on').size() == 0) {
          var expRandom = [Q.getRandom(), Q.getRandom(), Q.getRandom()];
          for (i = 0; i < $('#lottery .number dl').size(); i++) {
            if (i == ($('#lottery .number dl').size() - 1)) {
              $('#lottery .number dl:eq(' + i + ') dd i:eq(' + expRandom[i] + ')').trigger('click');
            } else {
              $('#lottery .number dl:eq(' + i + ') dd i:eq(' + expRandom[i] + ')').addClass('on');
            }
            $('#lottery .number dl:eq(' + i + ') dd i:eq(' + expRandom[i] + ')').addClass('tada animated').one('webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend', function() {
              $('#lottery .number dl:eq(' + i + ') dd i:eq(' + expRandom[i] + ')').removeClass('tada').removeClass('animated')
            });
          }
        }
      },
      function() {
        $('.trace-box input[name="autoTrace"]').addClass('disabled');
        $('#lottery .trace-box,#lottery .trace-data').hide();
        $('.guide-box:visible .tip_next').addClass('lock');
        if (typeof $('.guide-box:visible .tip_next').data('only') == 'undefined') {
          $("#lottery .count a.confirm").click();
        }
      }, [function() {
        //锁定其他玩法
        $('#lottery .tab').addClass('lock');
        $('#lottery .subtab').addClass('lock');
        $('#lottery .trace-box,#lottery .trace-data').hide();
        $(".lt-tab li[data-type='market']").addClass('lock');
      }, '', function() {
        $('.guide-box:visible .tip_next').removeClass('lock');
      }, ''],
      function() {
        Cookies.set('lottery_passed', 1, {
          expires: 365
        });
        $('.trace-box input[name="autoTrace"]').removeClass('disabled');
        $('#lottery .trace-box').show();
        Lottery.resetOrders();
        me.guiding=false; 
      });
  },

  //右下角漂浮层
  resetTipBtm: function() {
    // var guidefloatPos = {
    //   'position': 'absolute',
    //   'bottom': 117
    // };
    // if ($(window).width() > 1260) {
    //   guidefloatPos['right'] = ($(window).width() - 1260) / 2 - 42 - 5;
    //   $('.guide-float').css('left', 'auto');
    // } else {
    //   delete guidefloatPos['right'];
    //   guidefloatPos['left'] = 1220;
    //   $('.guide-float').css('right', 'auto');
    // }

    // var bottomkleft = $(document).height() - ($(window).scrollTop() + $(window).height());
    // if (bottomkleft > 112) {
    //   guidefloatPos['position'] = 'fixed';
    //   guidefloatPos['bottom'] = 6;
    // }
    // if (guidefloatPos['right'] < 0) {
    //   guidefloatPos['right'] = 0;
    // }
    // $('.guide-float').css(guidefloatPos).show();
  }
};
/* jshint devel:true */

var Lottery = Lottery || {};

Lottery = {
  lt: '',
  old_lt:'',
  issue: '',
  cls: '',
  type: '',
  odds: {},
  lt_odds: 0,
  ie: false,
  method: '',
  m_name: '',
  noanimation: false,
  serverTime: null,
  tipchs:'请输入投注号码，按空格或回车键确认选号',
  isStop: false,
  countDownSec: 2,
  lengthMatchDict:{
    'sm_sm_zxds':3,
    'sm_sm_zuxds':3,
    'em_em_zxds':2,  
    'em_em_zuxds':2,
    'rxds_rxds_1z1':1,
    'rxds_rxds_2z2':2,
    'rxds_rxds_3z3':3,
    'rxds_rxds_4z4':4,
    'rxds_rxds_5z5':5,
    'rxds_rxds_6z5':6,
    'rxds_rxds_7z5':7,
    'rxds_rxds_8z5':8,
    'cq5_cq5_ds':5,
    'cq4_cq4_ds':4,
    'cq3_cq3_ds':3,
    'cq2_cq2_ds':2
  },
  filterReg:/['\r\n','\n','\r','\t','\v','\D','\f','\s+','　','；','，',';',',']/g,//回车，换行，制表符，垂直制表符，换页符，空格，中文，特殊符合(·~!@#$%^&*()_+-=[]{}\|;:'"<>,./?)
  filterRegSelect:/['\r\n','\n','\r','\t','\v','\D','\f','　','；','，',';',',']/g,//11选5
  filterRegLine:/['\r\n','\n','\r','\v',',','，',';','；',':','：','|']/g,//11选5每组号码换行符正则合集[回车 逗号, 分号; 冒号: 竖线|]
  filterRegBreak:/['　',' ',\u4E00-\u9FA5]/g,//11选5每个号码分隔符正则合集[中文空格，英文空格，中文]
  startDate: 0, // 防止倒计时同时发起请求
  init: function() {
    var me = this;
    var _el = $("#lottery");
    var $lt = $('#lotteryClass dd[data-lt=' + me.lt + ']');
    var dft = $lt.attr("data-default");

    me.cls = $lt.attr('data-lt-cls');

    $('#lotteryClass dd').removeClass('on');
    $lt.addClass('on');
    _el.attr('data-lt', "lt-" + me.cls);

    if(me.lt == "WBGMMC"){
    	$('#lottery a.submit').html('马上开奖');
    }else{
    	$('#lottery a.submit').html('立即投注');
    }
    
    me.initTab(_el, LotteryClass[me.lt], dft);

    Lottery.resetOrders();
  },
  initTab: function(_el, obj, n) {
    var me = this;
    var tab = _el.find('.tab')[0];
    var tpl = [];
    var ltTab = obj.ltTab;
    var ltData = JSON.parse(Cookies.get('ltData') || '{}');
    var method = '';

    // 遍历生成彩种菜单dom
    for (var t in ltTab) {
      if (t !== 'rx') {
        tpl.push('<span data-type="' + t + '">' + ltTab[t] + '</span>');
      } else {
        tpl.push('<button data-type="' + t + '">' + ltTab[t] + '</button>');
      }
    }

    $(tab).html(tpl);
    // 初始化渲染隐藏任选玩法
    $(tab).find('span[data-type=rx2], span[data-type=rx3], span[data-type=rx4]').hide();

    // 绑定玩法点击事件 更新对应子菜单、号码盘
    $(tab).unbind('click').on('click', 'span, button', function(evt) {
      evt.preventDefault();

      if ($(tab).hasClass('lock')) {
        return false;
      };
      var $this = $(this);

      if (evt.target.nodeName === 'SPAN') {

        $this.addClass('on').siblings().removeClass('on');
        var type = $this.attr('data-type');

        // 对应渲染玩法子菜单
        me.renderSubTab(_el, obj.ltMethod[type]);
        $(tab).attr({
          "data-type": type,
          "data-desc": ltTab[type]
        });

      } else {
        if ($(this).attr('data-type') === 'rx') {
          $this.attr('data-type', 'normal').html('常规玩法');
          $this.prevAll('span').hide();
          $this.nextAll('span').show();
          method = (/rx2|rx3|rx4/i).test(method) ? method : 'rx2';
          $this.siblings('span[data-type=' + method + ']').trigger('click');
        } else {
          $this.attr('data-type', 'rx').html('任选玩法');
          $this.nextAll('span').hide();
          $this.prevAll('span').show();
          $this.siblings('span[data-type=hsm]').trigger('click');
        }
      }
    });

    // 检查是否记录了玩法，否则使用默认玩法
    if (ltData[me.lt] !== undefined) {
      method = ltData[me.lt] || '';
      method = method.split('_')[0];
      if (method === 'rx2' || method === 'rx3' || method === 'rx4') {
        $(tab).find('button[data-type=rx]').trigger('click');
      } else {
        $(tab).find('span[data-type=' + method + ']').trigger('click');
      }
    } else {
      n = parseInt(n, 10) - 1;
      $(tab).find('span').eq(n).trigger('click');
    }
  },
  renderSubTab: function(_el, obj) {
    var me = this;
    var $tab = _el.find('.tab');
    var tabType = $tab.find('span.on').attr("data-type");
    var $sTab = _el.find('.subtab');
    var tpl = '';
    var ltData = JSON.parse(Cookies.get('ltData') || '{}');
    var method = '';

    // 遍历生成彩种玩法子菜单dom
    for (var z in obj) {
      tpl += '<dl><dt>' + obj[z].title + '</dt>';
      var method = obj[z].method;
      for (var m in method) {
        var subType = z + '_' + m;
        tpl += '<dd data-type="' + subType + '"><i></i>' + method[m].desc + '</dd>';
      }
      tpl += '</dl>';
    }

    $sTab.html(tpl);

    // 玩法Tab切换 更新玩法列表
    $sTab.off("click").on('click', 'dd', function(evt) {
      evt.preventDefault();

      if ($sTab.hasClass('lock')) {
        return false;
      };
      $sTab.find('dd').removeClass('on');
      $(this).addClass('on');

      var t = $(this).data("type").split('_');
      $sTab.attr({
        "data-type": $(this).data('type'),
        "data-desc": obj[t[0]].method[t[1]].desc
      });

      me.method = tabType + '_' + t.join('_');
      me.m_name = $tab.find('span.on').html() + '_' + $(this).html();

      me.renderNum(_el, obj[t[0]].method[t[1]].num, me.method);
      // me.lt_odds = me.odds[me.lt][me.method] ? me.odds[me.lt][me.method].odds : 0;
      // $(_el).find('.count .odds em').html(me.lt_odds);
      me.updateOdds();

      // 重置确认选号区数据
      me.countReset(_el);

      // 记录当前玩法
      ltData[me.lt] = me.method;
      Cookies.set('ltData', JSON.stringify(ltData));

      // 如果是任选玩法 对应渲染万、千、百、十、个选项
      if ((/rx2|rx3|rx4/i).test(tabType) && $(this).data('type') !== 'zx_fs') {
        me.renderPos(_el);
      }
    });

    // 检查是否记录了玩法，否则默认子菜单第一个被点击 并更新号码盘
    method = ltData[me.lt];
    if (method !== undefined && method.split('_')[0] === tabType) {
      method = method.replace(/[a-z]+\d*_/i, '');
      $sTab.find('dl dd[data-type=' + method + ']').eq(0).trigger('click');
    } else {
      $sTab.find('dl dd').eq(0).trigger('click');
    }
  },
  renderPos: function(_el) {
    var me = this;
    var $number = $(_el).find('.number');
    var tpl = ['<div class="pos">',
      '<span>选择位置</span>',
      '<label data-pos="1">万</label>',
      '<label data-pos="2">千</label>',
      '<label data-pos="3">百</label>',
      '<label data-pos="4">十</label>',
      '<label data-pos="5">个</label>',
      '</div>'
    ];
    $number.find('.pos').remove();
    $number.prepend(tpl.join(''));
  },
  renderNum: function(_el, obj, m) {
    var me = this;
    var el = _el.find('.number')[0]; // 获得div.number
    var count = $(_el).find('.count')[0];
    var box = $(_el).find('.box');
    var orders = $(_el).find('.orders')[0];
    var t = obj.split('|');

    if (obj.indexOf('input') === -1) {
      var tits = obj.split('|')[0].split(','); // 获得号码盘标题
      var nums = obj.split('|')[1]; // 获得号码类型
      var btns = obj.split('|')[2]; // 获得全、大、小、奇、偶、清按钮

      var tpl = '';

      for (var t = 0; t < tits.length; t++) {
        tpl += '<dl><dt>' + tits[t] + '</dt>';
        tpl += '<dd>' + me.renderCodes(t, nums, m) + me.renderBtns(btns) + '</dd>';
        tpl += '</dl>'
      }

      $(el).html(tpl);

      // 处理IE下双击选中文本问题
      if ((/msie|trident/i).test(navigator.userAgent)) {
        $(el).find('dl dd i').attr('unselectable', 'on');
      }
    } else {
      var tip = me.tipchs;
      // 判断是否混合
      if (t[1] === 'hh') {
        tip += "，注意：不包含豹子号 111、222 等";
      }

      if (Lottery.cls === '11y' || Lottery.cls === 'pk10') {
        tip += "，注意：小于10则前面加0，如 010203 等";
      }
      $(el).html(me.renderBox(tip));
    }

    // 渲染完号码盘之后禁用确定选号按钮
    $(count).find('.confirm').addClass('disabled');
    
    $(count).on('click', '.mode label', function(evt) {
        evt.preventDefault();
        $(this).addClass('modeSelect').siblings().removeClass('modeSelect');
        $(this).prev().click().change();
    });
    
    $(count).off('change keyup').on('change keyup', 'input, select', function(evt) {
      evt.preventDefault();
      if ($(this).val() === '') {
        $(this).val($(this).attr('min'));
      }
      me.calcMoney(_el);
    });
    
    $(count).find('a.quickSubmit').off('click').click(function(evt) {
        evt.preventDefault();
        
        if ($(this).hasClass('disabled')) {
          return false;
        }
        
        //快速投注
        $(orders).addClass('quickSubmit-orders');
        $(count).find('a.confirm').click();
        $(orders).find('a.submit').click();
    });
    
    $(count).find('a.confirm').off('click').click(function(evt) {
      evt.preventDefault();
      
      if ($(this).hasClass('disabled')) {
        return false;
      }

      var list = $(orders).find('ul:eq(0)');
      var order = me.getOrder();
      
      $(order).prependTo(list);

      if (Trace.chkRateTrace()) {
        Trace.toggleRateTab(true);
      } else {
        Trace.toggleRateTab(false);
      }

      me.countReset($(_el));

      list.find('li input[type="text"].spinner.newInput').inputNumber().removeClass('newInput');
      
      list.find('li').removeClass('blink animated').eq(0).addClass('blink animated').one('webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend', function() {
        $(this).removeClass('blink animated');
      });

      // 计算提交注单总注数、总金额，并准备提交注单需要的数据
      _el.find('.box textarea.editable').height(93).val(me.tipchs).select();
      me.setSubmitData();
    });

    $(orders).find('.list > ul').off('change keyup').on('change keyup', 'input.spinner', function(evt) {
      evt.preventDefault();

      if ($(this).val() === '') {
        $(this).val($(this).attr('min'));
      }

      var li = $(this).closest("li");
      var d = $(li).attr("data-count").split('|');
      var times = $(this).val();
      var moneywin;
      var method = $(li).attr("data-type");
      moneywin = Lottery.getMoneyWin(0, d[3], d[0], times, d[2], $(li).attr("data-code"), method);

      $(li).find('.money').html("￥" + moneywin.money);
      $(li).find('.win').html("￥" + moneywin.win);

      d[1] = times;
      d[5] = moneywin.money;
      d[7] = moneywin.wintime;

      $(li).attr("data-count", d.join('|'));

      // 计算提交注单总注数、总金额，并准备提交注单需要的数据
      me.setSubmitData();
    });

    $(orders).off('click').on('click', '.delete', function(e) {
      e.preventDefault();

      var $li;

      $(this).parent('li').remove();
      $li = $(orders).find('.list li');

      if (Trace.chkRateTrace()) {
        Trace.toggleRateTab(true);
      } else {
        Trace.toggleRateTab(false);
      }

      // 计算提交注单总注数、总金额，并准备提交注单需要的数据
      me.setSubmitData();
    });

    // 传统投注 提交注单
    $(orders).find('a.submit').off('click').click(function(evt) {
      if ($(this).hasClass('locked')) {
        return false;
      }

      evt.preventDefault();

      if ($(this).hasClass('disabled')) {
        return false;
      }

      var list = $(this).closest('.orders').find('.list ul');
      var order = [];
      var tip = dialog({
        id: 'lottery_submit',
        align: 'top',
        skin: 'tip'
      });
      
      var tip_mmc = dialog({
          id: 'lottery_submit_mmc',
          align: 'top',
          skin: 'tip'
      });
      
      var confirmAgain;
      var html = '';
      var mode1 = '';
      var mode2 = '';
      var mode3 = '';
      var mode4 = '';
      
      var quickSubmit = $('.quickSubmit-orders').length;
      var quickBtn = $(count).find('a.quickSubmit');

      var btn = $(evt.target);
	  if( quickSubmit > 0){
		  btn = quickBtn;
    	  $(this).addClass('disabled');
      }
	  var txt = btn.html();
	  
      if (btn.hasClass('loading')) {
        tip.content('请不要频繁点击！');
        tip.show(btn[0]);
        setTimeout(function() {
          tip.close().remove();
        }, 600);
        return false;
      }

      if (me.isStop) {
        tip.content('当前彩种暂停销售，请关注官方动态！');
        tip.show(btn[0]);
        if($('.quickSubmit-orders').length > 0){
        	me.resetOrders();
        }
        setTimeout(function() {
          tip.close().remove();
        }, 2000);
        return false;
      }

      for (var i = 0, len = list.children('li').length; i < len; i++) {
        var li = $(list).children('li').eq(i);
        var type = li.attr("data-type");
        var code = li.attr("data-code");
        var desc = li.attr("data-desc");
        var d = li.attr("data-count").split('|');
        var tmp_order = null;

        // 计算结果 将投注模式归为正常格式 200 20 2 变为 2 0.2 0.02
        switch (d[2]) {
          case '2':
            mode1 += '<dd>☆[' + Q.nameCode(desc).name + '] <em>' + Q.nameCode(desc).code + '</em></dd>';
            break;
          case '0.2':
            mode2 += '<dd>☆[' + Q.nameCode(desc).name + '] <em>' + Q.nameCode(desc).code + '</em></dd>';
            break;
          case '0.02':
            mode3 += '<dd>☆[' + Q.nameCode(desc).name + '] <em>' + Q.nameCode(desc).code + '</em></dd>';
            break;
          case '0.002':
            mode4 += '<dd>☆[' + Q.nameCode(desc).name + '] <em>' + Q.nameCode(desc).code + '</em></dd>';
            break;
          default:
            break;
        }

        // d[2] = d[2] / 100;
        tmp_order = {
          "method": type,
          "code": code,
          "nums": d[0],
          "piece": d[1],
          "price": d[2],
          "odds": d[3],
          "point": d[4],
          "amount": d[5]
        };
        if (d[6] !== undefined && d[6] !== '') {
          tmp_order['position'] = d[6];
        }
        order.push(tmp_order);
      }

      if (mode1 !== '') {
        mode1 = '<dl><dt>模式：元</dt>' + mode1 + '</dl>';
      }
      if (mode2 !== '') {
        mode2 = '<dl><dt>模式：角</dt>' + mode2 + '</dl>';
      }
      if (mode3 !== '') {
        mode3 = '<dl><dt>模式：分</dt>' + mode3 + '</dl>';
      }
      if (mode4 !== '') {
        mode4 = '<dl><dt>模式：厘</dt>' + mode4 + '</dl>';
      }
      var htmlwelcome = '<h3>您确定加入' + (me.issue || '/') + '期？</h3>';
      var htmlmoney = '<h4>总金额：<em>' + $(orders).find('.amount').html();

      var obj = {
        "lottery": me.lt,
        "issue": me.issue,
        "order": JSON.stringify(order)
      };

      var traceBtn = $(orders).find('.trace-data > a:eq(0)');
      if ($(orders).find('input[name="autoTrace"]:checked').size() > 0 && traceBtn.data('traceCount') > 0) {
        var winStop = $(orders).find('input[name="autoStop"]:checked').size() > 0 ? true : false;
        var traceMode = $(orders).find('.trace-tab li.on').data('no');
        obj["istrace"] = $(orders).find('input[name="autoTrace"]:checked').size() > 0 ? true : false;
        obj["trace"] = JSON.stringify({
          'start': me.issue,
          'totalMoney': traceBtn.data('money'),
          'totalCount': traceBtn.data('traceCount'),
          'mode': traceMode,
          'winStop': winStop,
          'counts': traceBtn.data('trace')
        });

        if (traceBtn.data('trace') === undefined) {
          obj["istrace"] = false;
        } else {
          if (traceBtn.data('trace').length == 0) {
            obj["istrace"] = false;
          }
        }

        htmlwelcome = '<h3>您确定要追号<em class="issue-num">' + traceBtn.data('traceCount') + '</em>期吗？</h3>';
        htmlmoney = '<h4>总金额：￥<em>' + parseFloat(traceBtn.data('money')).toFixed(3);
      } else {
        if ($(orders).find('input[name="autoTrace"]:checked').size() > 0 && traceBtn.data('traceCount') == 0) {
          obj["istrace"] = false;
          htmlwelcome = '<h3 class="highmsg">您未选择追号期数，确定加入' + me.issue + '期？</h3>';
        }
      }

      html = htmlwelcome;
      html += '<div class="list">' + mode1 + mode2 + mode3 + mode4 + '</div>';
      html += htmlmoney;

      if (me.lt === 'WBGMMC') {
        btn.html('操作中...').addClass('loading');
        obj["issue"] = me.issue;
        
        // 判断连投是不是大于1
        var mmcLoopTimes = parseInt($("#mmcLoop input[type=text]").val(), 10);
        if(mmcLoopTimes > 1) {
           me.addOrderMMCLoopApi(obj, btn, txt, tip, mmcLoopTimes);
        } else {
           me.addOrderApi(obj, btn, txt, tip_mmc);
        }
      } else {
        var confirmOpt = {
          title: '温馨提示',
          width: 396,
          content: html,
          skin: 'confirm-again',
          fixed: true,
          cancel:false,
          button: [{
            id: 'lt_ok',
            value: '确&nbsp;&nbsp;定',
            callback: function(evt) {
              btn.html('操作中...').addClass('loading');
              obj["issue"] = me.issue;
              me.addOrderApi(obj, btn, txt, tip);
            }
          },{
            id: 'lt_cancel',
            skin: 'cancel',
            value: '取&nbsp;&nbsp;消',
            callback: function(evt) {
                if($('.quickSubmit-orders').length > 0){
                	me.resetOrders();
                }
              }
          }]
        };
        
        if (mode1.length>200000) {
          confirmOpt['height']=350;  
        }

        confirmAgain = dialog(confirmOpt).showModal();
      }
      
    });

    // 绑定选号区号码、按钮、单式相关操作等点击事件
    $(el).off("click").on('click', 'i, label, button, .box, .close, .clear, .upload', function(evt) {
      me.numHandler(_el, evt, t);
    });

    // 限定只能输入数字
    $(el).off("keydown").on('keydown', '.box input', function(e) {
      // 允许: backspace, delete, tab, escape, enter and space
      if ($.inArray(e.keyCode, [46, 8, 9, 27, 13]) !== -1 ||
        // 允许: Ctrl+A
        (e.keyCode == 65 && e.ctrlKey === true) ||
        // 允许: Ctrl+V
        (e.keyCode == 86 && e.ctrlKey === true) ||
        // 允许: home, end, left, right, down, up
        (e.keyCode >= 35 && e.keyCode <= 40)) {
        // 什么都不做，返回
        return;
      }
      // 确保是数字 其它则阻止操作
      if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
        e.preventDefault();
      }
    });

    // 单式输入注数计算
    var chkRulesByType = function(val,isRight,li,t,ul,box,boxinput,count,isPos,pos,eltyp) {
      //按玩法规则初步过滤
      if (Lottery.cls === '11y' || Lottery.cls === 'pk10' ) {
        // val 010203 to ["01","02","03"]
        val = val.replace(/['\r\n','\n','\r','\s+','；','，',';',';\r',',']/g, '').split(/(?=(?:\d{2})+?$)/);
      }

      switch (t[1]) {
        case 'zx':
          isRight = parseInt(t[2], 10) === val.length;
          if (eltyp=='TEXTAREA') {
            //isRight = parseInt(t[2], 10) === val.replace(/\r\n/g,'').replace(/\s+/g,'').replace(/；/g,'').replace(/，/g,'').replace(/;/g,'').replace(/,/g,'').length;
            isRight = parseInt(t[2], 10) === val.replace(/['\r\n','\n','\r','\s+','；','，',';',',']/g, '').length
          }
          break;
        case 'zux':
        case 'hh':
          // 重新排序[选号有效与顺序无关]
          val = val.split('').sort().join('');
          // 是否混合的判断条件
          var reg = new RegExp("(\\d)\\1{" + (t[2] - 1) + "}");
          isRight = val.replace(/['\r\n','\n','\r','\s+','；','，',';',',']/g, '').length === parseInt(t[2], 10) && val.match(reg) === null;
          break;
        case 'zx11':
          var _val = val.concat([]);
          // 符合长度 都大于等于1 小于等于11
          isRight = parseInt(t[2], 10) === Q.unique(val).length && Q.unique(val).length === _val.length;
          for (var i = 0; i < val.length; i++) {
            isRight = isRight && val[i].length === 2 && parseInt(val[i], 10) >= 1 && parseInt(val[i], 10) <= 11;
          }
          break;
        case 'zux11':
        case 'rx':
          // 是否混合的判断条件
          // 两两都不相同 去重如果长度相等则两两各不相同
          var _val = val.concat([]);
          isRight = parseInt(t[2], 10) === Q.unique(val).length && Q.unique(val).length === _val.length;
          // 符合长度 都大于等于1 小于等于11 
          for (var i = 0; i < val.length; i++) {
            isRight = isRight && val[i].length === 2 && parseInt(val[i], 10) >= 1 && parseInt(val[i], 10) <= 11;
          }
          // 重新排序[选号有效与顺序无关]
          val = val.sort();
          break;
        case 'pkzux':
        	var valStr = val.join('||');
        	// 符合长度 
        	isRight = parseInt(t[2], 10) === val.length;
        	
        	if(isRight){
          		//单个数字都大于等于1 小于等于10
          		for(var pkzux_i=0;pkzux_i<val.length;pkzux_i++){
              		if(valStr.indexOf(val[pkzux_i]) == valStr.lastIndexOf(val[pkzux_i])){
              			isRight = true;
              			if(parseInt(val[pkzux_i]) >= 1 && parseInt(val[pkzux_i]) <= 10){
              				isRight = true;
              			}else{
              				isRight = false;
                  			break;
              			}
              		}else{
              			isRight = false;
              			break;
              		}
              	}
          	}
        	
            break;
        default:
          break;
      }

      // 11选5 号码中间加空格
      val = Lottery.cls === '11y' || Lottery.cls === 'pk10' ? val.join(',') : val.replace(/['\r\n','\n','\r','\s+']/g, '').split('').join(',');
      
      // 判断当前选号是否存在
      var item = $('#ds_' + val.replace(/[',',';','；','，','　']/g, '_'));
      // 判断是否混合、三码、非豹子号 + 单式 + 不重复
      if (isRight && item.length === 0) {
    	  
    	  val = val.replace(/[^\d]/g, ','); //将所有非数字以及非逗号统一转换为逗号
	      val = val.replace(/^,+|,+$/g, ''); //将字符串首位逗号去掉
	      val = val.replace(/,+/g, ','); // 将连续的逗号转换为一个逗号
          
        li.find('span').html(val);
        li.attr('id', 'ds_' + val.replace(/[',',';','；','，','　']/g, '_'));
        li.attr('data-code', val);
        
        ul.append(li);
        boxinput.val('').select();
        box.scrollTop(9999);

        // 计算合法注数
        n = ul.children('li').length;
        if (isPos.length > 0) {
          n = n * Math.combination(pos, parseInt(t[2], 10));
        }
        if (n>0) {
          ul.show();  
        }else {
          ul.hide();  
        }
        $(count).find('.total em').html(n);
        boxinput.height((93-ul.height()<25 ? 25 : 93-ul.height()));
        if (me.type === "lottery") {
          me.calcMoney(_el);
        }
      } else {
        if (item.length > 0) {
          item.addClass('wobble');
          setTimeout(function() {
            item.removeClass('wobble');
          }, 1200);
        }
        boxinput.val('').select();
        return false;
      }  
    }
    
    var editabletextarea = function(evt) {
      var thisinput = $(el).find('.box .editable');
      var nowevtyp = evt.type;
      if (evt.type =='keyup' && String(thisinput.val()).indexOf('请输入投注号码')>-1) {
        return false;  
      }
      thisinput.data('before',thisinput.val());
      var elem,ieevt = evt ? evt:event;
      if (ieevt.srcElement) {
        elem = ieevt.srcElement; 
      }else if(ieevt.target){
        elem = ieevt.target;
      }
      var eltyp = elem.tagName;
      var boxinput = thisinput;//$(this);
      var ul = thisinput.prev("ul");
      var box = thisinput.parent(".box");
      var isPos = box.prev('.pos');
      var isRight = false;
      var pos = 0;
      
      //任选玩法-组选单式  万、千、百、十、个
      pos = $(el).find('.pos label.on').length;

      if ((Lottery.cls === '11y' || Lottery.cls === 'pk10') && (evt.type==='keyup' || evt.type==='change') && thisinput.hasClass('waiting')) {
        return false;     
      }else {
        thisinput.removeClass('waiting')
      }

      var golooppaste = function() {
        var thisinval = thisinput.val();
        if(me.cls == '11y' || me.cls == 'pk10'){
        	thisinval = thisinval.replace(/ /g,'');
        }
        var allpaste = thisinval.split(' ');
        
        if (eltyp=='TEXTAREA') {
          if (Lottery.cls === '11y'){
            thisinval = thisinval.replace(/\D/g,' ').replace(/\s+/g,' ');
            var maxsplitlen = thisinval.replace(me.filterRegLine,' ').replace(me.filterRegBreak,' ').replace(/ $/gi,'').split(' ');
            var chkminlen = thisinval.replace(me.filterRegLine,'').replace(me.filterRegBreak,'');
            if (chkminlen.length/maxsplitlen.length==2 && maxsplitlen.length%3>0 && nowevtyp=='paste') {
              var tip = dialog({
                id:'errornumbers',
                align: 'top',
                skin: 'tip',
                content: '粘贴内容中有个别组号码不完整，请再次检查输入号码！',
                quickClose: true,
                onshow: function() {

                }
              }).show(boxinput[0]);  
            }else {
              if (chkminlen.length/maxsplitlen.length==2 && chkminlen.length%maxsplitlen.length==0) {
                allpaste = thisinval.replace(me.filterRegLine,'b').replace(me.filterRegBreak,'').split('b');
              }else {
                allpaste = thisinval.replace(me.filterReg,' ').split(' ');   
              }
            }
          }else {
            allpaste = thisinval.replace(me.filterReg,' ').split(' ');   
          }
        }

        var chkline = function(list,nowval) {
          if (typeof nowval == 'undefined') {
            
            if (eltyp=='TEXTAREA') {
              if (ul.find('li').size()==0) {
                thisinput.val(me.tipchs).select();  
              }
            }else {
              thisinput.val('');  
            }
            if (ul.find('li').size()>0 && thisinput.val()!=me.tipchs) {
              $(count).find('.confirm').removeAttr('pass').removeClass('disabled');   
            }
            return false;  
          }
          var li = $('<li><span/><em class="close"></em></li>');
          thisinput.val(nowval).trigger('keyup');
          chkRulesByType(nowval,isRight,li,t,ul,box,boxinput,count,isPos,pos,eltyp);
          
          if (list.length==0) {
            $(count).find('.confirm').removeAttr('pass').removeClass('disabled');
            return false;  
          }else {
            list.shift();
            setTimeout(function() {
              chkline(list,list[0]);  
            },2);
          }
        }
        if (allpaste.length > 100) {
          if (ul.find('li').size()>0) {
            chkline(allpaste,allpaste[0]);  
          }else {
            //超过100条时另处理
            longCacl(allpaste.join('; '),thisinput,ul,pos,t,$(count).find('.total em'),_el,isPos);
            $(count).find('.confirm').removeAttr('pass').removeClass('disabled');
            return false;
          }
          /*var tip = dialog({
            align: 'top',
            skin: 'tip',
            content: '粘贴内容超过100条，请使用“导入文件”下注功能！',
            quickClose: true,
            onshow: function() {
              setTimeout(function() {
                thisinput.val('');
              },2000);
            }
          }).show($(el).find('input.upload')[0]);*/
          return false;
        }

        if (allpaste.length>0) {
          chkline(allpaste,allpaste[0]);  
        }  
      }
      $(count).find('.confirm').attr('pass',1).addClass('disabled');
      setTimeout(golooppaste,300);  
    };

    $(el).off("keyup").on('keyup', '.box .editable', function(evt) {
      evt.preventDefault();
      var elem,ieevt = evt ? evt:event;
      if (ieevt.srcElement) {
        elem = ieevt.srcElement; 
      }else if(ieevt.target){
        elem = ieevt.target;
      }
      var eltyp = elem.tagName;
      var boxinput = $(this);
      var ul = $(this).prev("ul");
      var box = $(this).parent(".box");
      var li = $('<li><span/><em class="close"></em></li>');
      var isPos = box.prev('.pos');
      var isRight = false;
      var pos = 0;
      // 万、千、百、十、个
      pos = $(el).find('.pos label.on').length;
      var val = $(this).val();
      val = val.replace(/[^\d]/g, ',');
      var n = 0;
      var len = 0;
      // 玩法输入号码一组号码长度校验
      var methodGroupNumberLenChk = me.lengthMatchDict;

      // 回车 空格 确认当前选号
      // 13-回车    32-空格  
      if (evt.keyCode === 13 || evt.keyCode === 32 || evt.keyCode === 186 || evt.keyCode === 188) {
        if ((Lottery.cls=='11y' || Lottery.cls === 'pk10') && evt.keyCode ===32) {
          var chkmname = String(Lottery.method);
          if (typeof methodGroupNumberLenChk[Lottery.method]!=='undefined') {
            var limitnumber = parseInt(methodGroupNumberLenChk[Lottery.method]*2,10);
            var maxlimit = parseInt(methodGroupNumberLenChk[Lottery.method]*2,10)+(parseInt(methodGroupNumberLenChk[Lottery.method],10)-1);
            if (val.replace(/,$/gi,'').split(',').length < methodGroupNumberLenChk[Lottery.method] && val.length < maxlimit) {
              //符合01 02 03单个号码有间隔
              if (val.length >= (limitnumber > 6 ? 6 : limitnumber) && val.replace(/,$/gi,'').indexOf(',')!=-1) {
                boxinput.addClass('waiting');
                return false;  
              }
              //符合010203单个号码无间隔
              if (val.length < limitnumber && val.replace(/,$/gi,'').indexOf(',')==-1) {
                boxinput.addClass('waiting');
                return false;    
              }
            }
          }
        }
		    if (parseInt($(count).find('.total em').html(),10)<100) {
          if (ul.find('li').size()>0) {
            chkRulesByType(val,isRight,li,t,ul,box,boxinput,count,isPos,pos,eltyp);  
          }else {
            if (parseInt($(count).find('.total em').html(),10)==0) {
              chkRulesByType(val,isRight,li,t,ul,box,boxinput,count,isPos,pos,eltyp);  
            }
          }
        }else {
          if (ul.find('li').size()>1) {
            chkRulesByType(val,isRight,li,t,ul,box,boxinput,count,isPos,pos,eltyp);  
          }else{
            if (this.timeout && evt.keyCode !== 186 && evt.keyCode !== 13 && evt.keyCode !== 32 && evt.keyCode !== 188) {
              clearTimeout(this.timeout);
              this.timeout = setTimeout(function() {
                editabletextarea(evt);
              },1000)
            }else {
              clearTimeout(this.timeout);
              this.timeout = setTimeout(function() {
                editabletextarea(evt);
              },1500)
            }
          }
        }
      }else {
        if (evt.keyCode === 8) {
          if (this.timeout && val!='') {
            clearTimeout(this.timeout);
            this.timeout = setTimeout(function() {
              editabletextarea(evt);
            },1000)
          }
        }
      }
      if (typeof this.timeout == 'undefined') {
        if (val!='') {
          this.timeout = setTimeout(function() {
            editabletextarea(evt);
          },1200)   
        }
      }
    });

    // 单式粘贴事件
    $(el).find('.box textarea.editable').off("click").on('click',function(evt) {
      if ($(this).val() && $(this).val().indexOf(me.tipchs) >= 0) {
    	  $(this).focus();
    	  $(this).select();     
      }else {
        if ($(this).data('before')==me.tipchs || !($(this).data('before')==$(this).val())) {
          setTimeout(function() {
            editabletextarea(evt);  
          },200);  
        }
      }
    });

    var longCacl = function(code,textarea,ul,pos,t,count_total,_el,isPos) {
      var tmp = [];
      var n = 0;
      var len = 0;
      var vals;
      code = code.replace(/[^\d][^\S]/g, ','); //将所有非数字以及非逗号统一转换为逗号
      code = code.replace(/;/g,",");
      code = code.replace(/；/g,",");
      code = code.replace(/，/g,",");
      code = code.replace(/^,+|,+$/g, ''); //将字符串首位逗号去掉
      code = code.replace(/,+/g, ','); // 将连续的逗号转换为一个逗号
     /* code = code.replace(/[^\d]/g, ','); //将所有非数字以及非逗号统一转换为逗号
      code = code.replace(/^,+|,+$/g, ''); //将字符串首位逗号去掉
      code = code.replace(/,+/g, ','); // 将连续的逗号转换为一个逗号
      code = code.replace(/　/g,',').replace(/；/g,',').replace(/，/g,',').replace(/;/g,',');*/

      if (code.indexOf(',')!=-1) {
      	vals = code.split(',');
       }else if (code.indexOf(' ')!=-1) {
  		vals=code.split(/\s+/);
       }

      vals = Q.unique(vals);
      vals.sort();

      for (var i = 0; i < vals.length; i++) {
        var isRight = false;
        var val = vals[i];

        if (Lottery.cls === '11y' || Lottery.cls === 'pk10') {
          // val 010203 to ["01","02","03"]
          val = val.split(/(?=(?:\d{2})+?$)/);
        }
        switch (t[1]) {
          case 'zx':
            isRight = parseInt(t[2], 10) === val.length;
            break;
          case 'zux':
          case 'hh':
            // 重新排序[选号有效与顺序无关]
            val = val.split('').sort().join('');
            // 是否混合的判断条件
            var reg = new RegExp("(\\d)\\1{" + (t[2] - 1) + "}");
            isRight = val.length === parseInt(t[2], 10) && val.match(reg) === null;
            break;
          case 'zx11':
            var _val = val.concat([]);
            // 符合长度 都大于等于1 小于等于11
            isRight = parseInt(t[2], 10) === Q.unique(val).length && Q.unique(val).length === _val.length;
            for (var k = 0; k < val.length; k++) {
              isRight = isRight && val[k].length === 2 && parseInt(val[k], 10) >= 1 && parseInt(val[k], 10) <= 11;
            }
            break;
          case 'zux11':
          case 'rx':
            // 是否混合的判断条件
            // 两两都不相同 去重如果长度相等则两两各不相同
            var _val = val.concat([]);
            isRight = parseInt(t[2], 10) === Q.unique(val).length && Q.unique(val).length === _val.length;

            // 符合长度 都大于等于1 小于等于11 
            for (var k = 0; k < val.length; k++) {
              isRight = isRight && val[k].length === 2 && parseInt(val[k], 10) >= 1 && parseInt(val[k], 10) <= 11;
            }
            // 重新排序[选号与效与顺序无关]
            val = val.sort();
            break;
          case 'pkzux':
        	var valStr = val.join('||');
        	// 符合长度 
        	isRight = parseInt(t[2], 10) === val.length;
        	
        	if(isRight){
          		//单个数字都大于等于1 小于等于10
          		for(var pkzux_i=0;pkzux_i<val.length;pkzux_i++){
              		if(valStr.indexOf(val[pkzux_i]) == valStr.lastIndexOf(val[pkzux_i])){
              			isRight = true;
              			if(parseInt(val[pkzux_i]) >= 1 && parseInt(val[pkzux_i]) <= 10){
              				isRight = true;
              			}else{
              				isRight = false;
                  			break;
              			}
              		}else{
              			isRight = false;
              			break;
              		}
              	}
          	}
        	
            break;
          default:
            break;
        }
        
        // 11选5 号码中间加空格
        val = (Lottery.cls === '11y' || Lottery.cls === 'pk10') ? val.join(',') : val.split('').join(',');
        
        if (isRight) {
          tmp.push(val);
        }else {
          textarea.val('');
        }
      }
      // 再次去重，防止01020305 03020105 任选单式与顺序无关
      tmp = Q.unique(tmp);
      if (tmp.length > 0) {
        textarea.val(tmp.join('; ').replace(/,/g, '')).trigger('click');
        ul.hide();
        // 计算合法注数
        n = tmp.length;
        if (isPos.length > 0) {
          n = n * Math.combination(pos, t[2]);
        }
        count_total.html(n);
        me.calcMoney(_el);
      } else {
        ul.show();
        count_total.html(0);
        me.calcMoney(_el);
      }
    };

    $(el).off("paste").on('paste', '.box .editable',editabletextarea);
    $(el).off("change").on('change', '.box .editable',editabletextarea);
  },
  //下单
  addOrderApi: function(obj, btn, txt, tip) {
    var me = this;
    Api.addOrder(obj, function(d) {
      // 重置提交注单状态
      btn.html(txt).removeClass('loading');
      if (d === -1) {
        if($('.quickSubmit-orders').length > 0){
            me.resetOrders();
        }
        // 判断用户中心登录
        User.chkLogin(function() {
          me.addOrderApi(obj, btn, txt, tip);
        });
      } else {
        d.code = parseInt(d.code, 10);

        if (d.code === 1) {
          if (me.lt !== 'WBGMMC') {
            me.resetOrders();
          } else {
        	if($('.quickSubmit-orders').length == 0){
                btn.addClass('disabled');
        	}
            $('#lottery, #lotteryClass').addClass('mask');
            $('.gotop').trigger('click');
          }

          tip.content('订单提交成功！');
          tip.show();

          // 秒秒彩动画开始
          if (me.lt === 'WBGMMC' && me.flipball !== undefined) {
            var prize = parseFloat(parseFloat(d.result.bonus, 10).toFixed(4));
            var code = d.result.code.split(',');
            var tipPrize = dialog({
              skin: 'tip',
              align: 'top',
              fixed: true,
              content: '未中奖，再来一次！'
            });
            me.flipball.flip(code, true, function() {
              if (prize > 0) {
                tipPrize.content('恭喜您中奖了！奖金：￥' + prize);
              }
              me.updateRecency();
              me.updateIssueInfo();
              tipPrize.show(btn[0]);
              
              setTimeout(function() {
                tipPrize.close().remove();
                $('#lottery, #lotteryClass').removeClass('mask');
                if($('.quickSubmit-orders').length > 0){
                	me.resetOrders();
                }else{
                    btn.removeClass('disabled');
                }
              }, 2500);
            });
          } else {
            me.updateRecency();
          }
        } else if (d.code === 4001) {
          var tip1 = dialog({
            title: '余额不足',
            fixed: true,
            content: '<p>对不起，您的余额不足，为保证您可以顺利购彩</p><p>建议您充值后再进行购彩。</p><a href="' + User.app + '/pay/rechargeIndexView" target="_blank" class="btn-recharge">立刻充值</a>',
            onshow: function() {
              $(this.node).find('.btn-recharge').unbind('click').click(function(evt) {
                tip1.close().remove();
              });
              if($('.quickSubmit-orders').length > 0){
            	  me.resetOrders();
              }
            }
          }).showModal();
        } else if(d.msg){
          //tip.content(d.msg || '主人，我迷路了！ 可不可以再提交一次！');
          tip.content(d.msg);
          
          if($('.quickSubmit-orders').length > 0){
        	  me.resetOrders();
          }
          tip.show(btn[0]);
        }

        setTimeout(function() {
          tip.close().remove();
        }, 2000);

        // if (d.result !== undefined && d.result.money !== undefined && d.result.money !== null) {
        //   $('.customer .cash').html(Number(d.result.money.avail).toFixed(4));
        // }
        User.updateMoney();
        
        Navigation.getUserMoney();
      }
    });
  },
  addOrderMMCLoopApi: function(obj, btn, txt, tip, t) {
  	var me = this;
  	var isPrizeStop = $("#mmcLoop input[type=checkbox]").is(':checked');
    var mmcLoopTip;
    var isContinue = true;
    var mmcBtn;
    
    if(dialog.get('mmc_loop_box')) {
    	mmcBtn = $(dialog.get('mmc_loop_box').node).find('.btn-mmc-loop');
    	if(mmcBtn.attr('data-type') == 2){
    		return;
    	}
    }
    
    Api.addOrder(obj, function(d) {
      // 重置提交注单状态
      btn.html(txt).removeClass('loading');
      if (d === -1) {
        if($('.quickSubmit-orders').length > 0){
            me.resetOrders();
        }
        // 判断用户中心登录
        User.chkLogin(function() {
        	me.addOrderMMCLoopApi(obj, btn, txt, tip, t);
        });
      } else {
        d.code = parseInt(d.code, 10);
        if (d.code === 1) {
        	if($('.quickSubmit-orders').length == 0){
                btn.addClass('disabled');
        	}
          $('#lottery, #lotteryClass').addClass('mask');
          $('.gotop').trigger('click');

          if(!dialog.get('mmc_loop_box')) {
            mmcLoopTip = dialog({
              title: '连续开奖',
              id: 'mmc_loop_box',
              skin: 'mmc-loop',
              fixed: true,
              content: '<p><span>第<em id="mmcLoopNow">0</em>次</span><span>已中奖<em id="mmcLoopDone">0</em>次</span><span>总共<em>' + t + '</em>次</span></p>' +
                   '<p class="mmc-last-prize"><span>[第<b id="mmcLoopPrize">0</b>次中奖：<b id="mmcLoopMoney">0</b>元]</span></p>' +
                   '<p class="mmc-amount"><span>共中奖：<em id="mmcLoopAmount">0</em>元</span></p><a href="javascript:;" class="btn-mmc-loop" data-type="1">停止</a>',
              onshow: function() {
                mmcBtn = $(this.node).find('.btn-mmc-loop');
                var closeBtn = $(this.node).find('.ui-dialog-close');

                // 初始化隐藏关闭按钮
                closeBtn.css('visibility', 'hidden');

                mmcBtn.unbind('click').click(function(evt) {
                  var type = parseInt(mmcBtn.attr("data-type"), 10);
                  switch(type) {
                    case 1:
                      mmcBtn.html('继续').attr('data-type', 2);
                      closeBtn.css('visibility', 'visible');
                      isContinue =  false;
                      break;
                    case 2:
                      mmcBtn.html('停止').attr('data-type', 1);
                      closeBtn.css('visibility', 'hidden');
                      me.addOrderMMCLoopApi(obj, btn, txt, tip, t);
                      break;
                    case 3:
                      setTimeout(function() {
                        closeBtn.trigger('click');
                      }, 500);
                      break;
                    default: break;
                  }
                });
              },
              onclose: function() {
            	  if($('.quickSubmit-orders').length > 0){
            		  me.resetOrders();
            	  }else{
            		  btn.removeClass('disabled');
            	  }
                $('#lottery, #lotteryClass').removeClass('mask');
              }
            }).showModal();
          }

          var isStopMMC = parseInt($(".btn-mmc-loop").attr('data-type'), 10);

          // 秒秒彩动画开始
          var prize = parseFloat(parseFloat(d.result.bonus, 10).toFixed(4));
          var code = d.result.code.split(',');
          me.flipball.flip(code, true, function() {
            $("#mmcLoopNow").html(parseInt($("#mmcLoopNow").html(), 10) + 1);

            // 连投次数等于总次数 不继续
            if(parseInt($("#mmcLoopNow").html(), 10) === t) {
              $(".btn-mmc-loop").html('确定').attr('data-type', 3);
              $("#mmcLoopNow").parent('span').hide();
              $("#mmcLoopPrize").parent('span').hide();
              isContinue = false;
            }

            // 用户停止 不继续
            if(isStopMMC !== 1) {
              isContinue = false;
            }

            // 中奖即停
            if (prize > 0 && isPrizeStop) {
              $(".btn-mmc-loop").html('确定').attr('data-type', 3);
              $("#mmcLoopDone").html(parseInt($("#mmcLoopDone").html(), 10) + 1);
              $("#mmcLoopPrize").html($("#mmcLoopNow").html());
              $("#mmcLoopMoney").html(prize);
               
              var prizeAmount = parseFloat((parseFloat($("#mmcLoopAmount").html(), 10) + prize).toFixed(4));
              $("#mmcLoopAmount").html(prizeAmount);
              isContinue = false;
            } else if(prize > 0) {
              // 投中更新已中奖次数
              $("#mmcLoopDone").html(parseInt($("#mmcLoopDone").html(), 10) + 1);
              $("#mmcLoopPrize").html($("#mmcLoopNow").html());
              $("#mmcLoopMoney").html(prize);
              
              var prizeAmount = parseFloat((parseFloat($("#mmcLoopAmount").html(), 10) + prize).toFixed(4));
              $("#mmcLoopAmount").html(prizeAmount);
            }

            me.updateRecency();
            me.updateIssueInfo();

            if(isContinue) {
              me.addOrderMMCLoopApi(obj, btn, txt, tip, t);
            }
          });
        } else if (d.code === 4001) {
          var tip1 = dialog({
            title: '余额不足',
            fixed: true,
            content: '<p>对不起，您的余额不足，为保证您可以顺利购彩</p><p>建议您充值后再进行购彩。</p><a href="' + User.app + '/pay/rechargeIndexView" target="_blank" class="btn-recharge">立刻充值</a>',
            onshow: function() {
              $(".btn-mmc-loop").html('继续').attr('data-type', 2);
              $(".mmc-loop .ui-dialog-close").css('visibility', 'visible');
              $(this.node).find('.btn-recharge').unbind('click').click(function(evt) {
                tip1.close().remove();
              });
            }
          }).showModal();
        }

        User.updateMoney();
        
        Navigation.getUserMoney();
      }
    });
  },
  renderCodes: function(t, n, m) {
    var me = this;
    var tpl = '';
    var txt = ["大", "小", "单", "双", "奇<br>奇>偶", "和<br>奇=偶", "偶<br>奇<偶", "上<br>上>下", "中<br>上=下", "下<br>上<下", "大.单", "大.双", "小.单", "小.双","龙","虎"];
    var vals = ["大", "小", "单", "双", "奇", "和", "偶", "上", "中", "下", "大.单", "大.双", "小.单", "小.双","龙","虎"];
    var m0 = ['dxds','qw','dx','ds','lh'];
    
    n = n.split('-');
    m = m.split('_');

    if (me.cls === "kl8" && t === 1) {
      n[0] = 41;
      n[1] = 80;
    }

    for (var i = parseInt(n[0]); i <= parseInt(n[1]); i++) {
      if (m0.indexOf(m[0]) != -1) {
        if (i > 3 && i < 10) {
          tpl += '<i class="ft ft2" data-val="' + vals[i] + '">' + txt[i] + '</i>';
        } else if (i > 9 && i < 14) {
          tpl += '<i class="ft ft1" data-val="' + vals[i] + '">' + txt[i] + '</i>';
        } else {
          tpl += '<i>' + txt[i] + '</i>';
        }
      } else {
        if ((me.cls === "11y" || me.cls === "kl8" || (me.cls === "pk10" && m[0] != "hz")) && (i < 10)) {
          tpl += '<i>0' + i + '</i>';
        } else {
          tpl += '<i>' + i + '</i>';
        }
      }
    }
    return tpl;
  },
  renderBtns: function(b) {
    var me = this;
    var tpl = '';
    var arr = [];
    var filter = [];
    if (b === "all") {
      arr = ["全", "大", "小", "奇", "偶", "清"];
      filter = ["i", ":gt", ":lt", ":odd", ":even", ""];
      // 如果是11选5 号码01起始 奇偶调换
      if (me.cls === "11y" || me.cls === "pk10") {
        filter[3] = ":even";
        filter[4] = ":odd";
      }
    } else if (b === "two") {
      arr = ["全", "清"];
      filter = ["i", ""];
    } else {
      return "";
    }
    for (var i = 0; i < arr.length; i++) {
      tpl += '<button data-filter="' + filter[i] + '">' + arr[i] + '</button>';
    }
    tpl = '<div class="fr numBtns">' + tpl + "</div>"
    return tpl;
  },
  renderBox: function(tip) {
    var me = this;
    var ie = (function(){
      var undef,
          v = 3,
          div = document.createElement('div'),
          all = div.getElementsByTagName('i');
      while (
          div.innerHTML = '<!--[if gt IE ' + (++v) + ']><i></i><![endif]-->',
          all[0]
      );
      return v > 4 ? v : undef;
    }());
    me.ie = ie;
    //if (ie) {
    return '<div class="box"><ul class="clearfix"></ul><textarea class="editable">'+tip+'</textarea></div>' +
      '<div class="fr box-input"><input type="button" class="upload" value="导入文件">' +
      '<input type="button" class="clear" value="清空"></div>'; 
    //}
    //var box = '<div class="box"><ul></ul><input class="editable" type="text" placeholder="' + tip + '"></div>' +
      '<div class="fr"><input type="button" class="upload" value="导入文件">' +
      '<input type="button" class="clear" value="清空"></div>';
    //return box;
  },

  numHandler: function(_el, evt, t) {
    evt.preventDefault();
    evt.stopPropagation();

    var me = this;
    var _this = evt.target;

    if (_this.nodeName === 'I') {
      // 处理北京快乐8任选二以上只能选择8个号
      var m = me.method.split('_');
      if (m[1] === 'rxx' && m[2] !== 'rx1' && $(_el).find('.number i.on').length > 7 && !$(_this).hasClass('on')) {
        return false;
      }
      $(_this).toggleClass('on');
      $(_this).addClass('ball').one('webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend', function() {
        $(this).removeClass('ball');
      });

      //如果是 北京PK10，选择的和值号码不同，赔率不同
      if(me.cls == 'pk10'){
    	  me.updateOdds();
      }
      // 计算注数、金额  _el为#lottery
      me.calcNum(_el, evt);
    } else if (_this.nodeName === "BUTTON") {
      var codes = $(_this).parents("dd").find('i');
      var f = $(_this).data("filter");

      if (f === ":gt") {
        f += "(" + Math.floor(codes.length / 2 - 1) + ")";
      } else if (f === ":lt") {
        f += "(" + Math.floor(codes.length / 2) + ")";
      } else {
        f = f;
      }

      codes.removeClass('on').filter(f).addClass('on');
      
      // 计算注数、金额  _el为#lottery
      me.calcNum(_el, evt);
    } else if (_this.nodeName === 'LABEL') {
      var $pos = $(_this).parents('.pos');
      $(_this).toggleClass('on');

      // 单式 且非导入模式
      if ($pos.next('.box').length > 0) {
        me.calcSingleNum(_el, evt, t);
      } else {
        // 计算注数、金额  _el为#lottery
        me.calcNum(_el, evt);
      }
    } else {
      var cls = _this.className;
      if (cls === "box") {
        $(_this).find('input').focus();
      } else if (cls === "close") {
        $(_this).parent("li").fadeOut('slow', function() {
          $(_this).parent("li").remove();
          me.calcSingleNum(_el, evt, t);
        });
      } else if (cls === 'clear') {
        var $box = $(_el).find('.number .box');
        if ($box.find('ul li').length > 0 || $box.find('textarea').length > 0) {
          var d = dialog({
            title: '温馨提示',
            skin: 'confirm-again',
            content: '您确定要清空当前选号码？',
            button: [{
              id: 'clear_ok',
              value: '确定',
              callback: function() {
                $box.find('ul').empty();
                
                $box.find('textarea').not('.editable').remove();
                if ($box.find('textarea').size()==0) {
                  $box.append('<textarea class="editable"></textarea>');    
                }
                $box.find('textarea.editable').removeAttr('readonly').height(93).val(me.tipchs).select();
                $box.find('ul, input').show();

                $(_el).find('.pos label').removeClass('on');

                me.calcSingleNum(_el, evt, t);

                d.close().remove();
              }
            }, {
              id: 'clear_cancel',
              skin: 'cancel',
              value: '取消'
            }]
          }).showModal();
        }
      } else if (cls === 'upload') {
        var html = '<div id="uploader"><div class="progress"><div class="progress-bar"></div></div>' +
          '<p class="tip">每注号码之间请用一个 空格[ ]、逗号[,] 或者 分号[;] 隔开</p>' +
          '<input type="text" readonly="readonly" class="fileName" placeholder="请选择您要上传的txt文件" />' +
          '<div id="filePicker">选择文件</div><div class="webuploader-upload disabled">开始上传</div>';
        var tip = dialog({
          skin: 'tip',
          align: 'top'
        });
        var d = dialog({
          title: '温馨提示',
          id: 'uploader-pop',
          fixed: true,
          skin: 'sobet upload',
          padding: 0,
          content: html,
          onshow: function() {
            var $uploader = $('#uploader');
            var $btnUpload = $uploader.find('.webuploader-upload');
            var $progress = $uploader.find('.progress');
            var uploader = new WebUploader.Uploader({
              //swf: 'scripts/Uploader.swf',
              swf: '/static/lottery/scripts/Uploader.swf',
              server: Api.geturl('uploadCode'),
              pick: '#filePicker',
              accept: {
                title: 'Text',
                extensions: 'txt',
                mimeTypes: 'text/*'
              }
            });
            

            var setHeader = function(object, data, headers) {
            	headers['Access-Control-Allow-Origin'] = '*';
            	headers['Access-Control-Request-Headers'] = 'content-type';
            	headers['Access-Control-Request-Method'] = 'POST';
            }
            uploader.on('uploadBeforeSend ', setHeader);
            
            uploader.on('fileQueued', function(file) {
              $uploader.find('.fileName').val(file.name);
              $btnUpload.removeClass('disabled');
            });
            uploader.on('uploadProgress', function(file, percentage) {
              $progress.find('.progress-bar').css('width', percentage * 100 + '%');
            });
            uploader.on('uploadSuccess', function(file, response) {
              if (response === -1) {
                $(".loginlnk").trigger('click');
                $btnUpload.addClass('disabled');
                $progress.slideUp('fast');
                $uploader.find('.fileName').val('');
                uploader.reset();
              } else {
                $btnUpload.addClass('disabled');
                $progress.slideUp('fast');
                $uploader.find('.fileName').val('');
                d.close().remove();
                me.handleSingleNums(_el, t, response);
              }
            });

            uploader.on('uploadError', function(file) {
              $btnUpload.addClass('disabled');
              $progress.slideUp('fast');
              $uploader.find('.fileName').val('');
              tip.content('上传出错');
              tip.show($btnUpload[0]);
              setTimeout(function() {
                tip.close().remove();
              }, 1500);
            });

            $btnUpload.on('click', function() {
              if ($(this).hasClass('disabled')) {
                return false;
              }
              uploader.upload();
              $btnUpload.addClass('disabled');
              $progress.slideDown('fast');
            });
          }
        }).showModal();
      } else {
        return false;
      }
    }
  },
  handleSingleNums: function(_el, t, d) {
    var me = this;
    var code = '';
    d = d.result.code;
    //[^\S]
    d = d.replace(/[^\d][^\S]/g, ','); //将所有非数字以及非逗号统一转换为逗号
    d = d.replace(/;/g,",");
    d = d.replace(/；/g,",");
    d = d.replace(/，/g,",");
    d = d.replace(/^,+|,+$/g, ''); //将字符串首位逗号去掉
    d = d.replace(/,+/g, ','); // 将连续的逗号转换为一个逗号
    
    var $count = $(_el).find('.count');
    var $box = $(_el).find(".number .box");

    var codeBox;
    var loadTip = dialog({
      fixed: true,
      skin: 'tip',
      padding: '10px 15px',
      content: '<p>正在校验选号，请稍等  . . .</p><br><p style="margin-top:10px;"><span class="ui-dialog-loading">Loading..</span></p>'
    });
    var longCacl = function() {
      var tmp = [];
      var n = 0;
      var len = 0;
      var vals;
      code = code.replace(/[^\d][^\S]/g, ','); //将所有非数字以及非逗号统一转换为逗号
      code = code.replace(/;/g,",");
      code = code.replace(/；/g,",");
      code = code.replace(/，/g,",");
      code = code.replace(/^,+|,+$/g, ''); //将字符串首位逗号去掉
      code = code.replace(/,+/g, ','); // 将连续的逗号转换为一个逗号

      //code = code.replace(/　/g,',').replace(/；/g,',').replace(/，/g,',').replace(/;/g,',');
      
      
      if (code.indexOf(',')!=-1) {
    	vals = code.split(',');
      }else if (code.indexOf(' ')!=-1) {
		vals=code.split(/\s+/);
      }

      vals = Q.unique(vals);
      vals.sort();

      for (var i = 0; i < vals.length; i++) {
        var isRight = false;
        var val = vals[i];
        //var tmp = vals[i];
        if (Lottery.cls === '11y' || Lottery.cls === 'pk10') {
          // val 010203 to ["01","02","03"]
        	//var tmp = val.split(/\s+/);
          if (val.indexOf(" ")>-1 || val.indexOf(" ")>-1) {
        	  val = val.split(/\s+/);
          }else {
        	 val = val.split(/(?=(?:\d{2})+?$)/);
          }	
        }
        switch (t[1]) {
          case 'zx':
            isRight = parseInt(t[2], 10) === val.length;
            break;
          case 'zux':
          case 'hh':
            // 重新排序[选号有效与顺序无关]
            val = val.split('').sort().join('');
            // 是否混合的判断条件
            var reg = new RegExp("(\\d)\\1{" + (t[2] - 1) + "}");
            isRight = val.length === parseInt(t[2], 10) && val.match(reg) === null;
            break;
          case 'zx11':
            var _val = val.concat([]);
            // 符合长度 都大于等于1 小于等于11
            isRight = parseInt(t[2], 10) === Q.unique(val).length && Q.unique(val).length === _val.length;
            for (var k = 0; k < val.length; k++) {
              isRight = isRight && val[k].length === 2 && parseInt(val[k], 10) >= 1 && parseInt(val[k], 10) <= 11;
            }
            break;
          case 'zux11':
          case 'rx':
            // 是否混合的判断条件
            // 两两都不相同 去重如果长度相等则两两各不相同
            var _val = val.concat([]);
            isRight = parseInt(t[2], 10) === Q.unique(val).length && Q.unique(val).length === _val.length;

            // 符合长度 都大于等于1 小于等于11 
            for (var k = 0; k < val.length; k++) {
              isRight = isRight && val[k].length === 2 && parseInt(val[k], 10) >= 1 && parseInt(val[k], 10) <= 11;
            }
            // 重新排序[选号与效与顺序无关]
            val = val.sort();
            break;
          case 'pkzux':
          	var valStr = val.join('||');
          	// 符合长度 
          	isRight = parseInt(t[2], 10) === val.length;
          	
          	if(isRight){
          		//单个数字都大于等于1 小于等于10
          		for(var pkzux_i=0;pkzux_i<val.length;pkzux_i++){
              		if(valStr.indexOf(val[pkzux_i]) == valStr.lastIndexOf(val[pkzux_i])){
              			isRight = true;
              			if(parseInt(val[pkzux_i]) >= 1 && parseInt(val[pkzux_i]) <= 10){
              				isRight = true;
              			}else{
              				isRight = false;
                  			break;
              			}
              		}else{
              			isRight = false;
              			break;
              		}
              	}
          	}
          	break;
          default:
            break;
        }

        // 11选5 号码中间加空格
        val = Lottery.cls === '11y' || Lottery.cls === 'pk10' ? val.join(',') : val.split('').join(',');
        
        if (isRight) {
          tmp.push(val);
        }
      }
      // 再次去重，防止01020305 03020105 任选单式与顺序无关
      tmp = Q.unique(tmp);
      if (tmp.length > 0) {
        loadTip.close().remove();

        //$box.append('<textarea readonly="readonly">' + tmp.join('; ').replace(/,/g, '') + '</textarea>');
        $box.find('textarea.editable').attr('readonly','readonly').val(tmp.join('; ').replace(/,/g, ''));

        $box.find('textarea.editable').trigger('change');
        
        $box.find('ul').hide();
        $box.find('input').hide();
        // 计算合法注数
        n = tmp.length;
        if ($box.prev('.pos').length > 0) {
          n = n * Math.combination($box.prev('.pos').find('label.on').length, t[2]);
        }
        $count.find('.total em').html(n);
        me.calcMoney(_el);
      } else {
        loadTip.close().remove();
        $box.find('ul').show();
        $box.find('input').show();
        $count.find('.total em').html(0);
        me.calcMoney(_el);
      }
    };

    codeBox = dialog({
      title: '单式上传选号',
      id: 'code-box',
      fixed: true,
      skin: 'sobet code-box',
      width: 480,
      height: 325,
      padding: '15px',
      content: '<textarea>' + d + '</textarea><p>注：确认导入之后，选号将不可编辑</p>',
      button: [{
        id: 'cancle_ok',
        skin: 'code-box-ok',
        value: '确认导入',
        callback: function() {
          
          $box.find('textarea').not('.editable').remove();
          code = $(this.node).find('textarea').val();
          dialog.get('code-box').close().remove();
          loadTip.showModal();
        }
      }, {
        id: 'cancle_cancel',
        skin: 'cancel',
        value: '取消'
      }]
    }).showModal();

    loadTip.addEventListener('show', function() {
      setTimeout(function() {
        longCacl();
      }, 500);
    });
  },
  calcNum: function(_el, evt) {
    var me = this;
    var number = evt.delegateTarget;
    var count = $(_el).find('.count')[0];
    var t = $(_el).find('.subtab dd.on').data("type").split('_');
    t.unshift($(number).siblings('.tab').attr('data-type'));

    $(count).find('.total em').html(me.getStack(number, t));
    me.calcMoney(_el);
  },
  calcSingleNum: function(_el, evt, t) {
    var me = this;
    var count = $(_el).find('.count')[0];
    var total = 0;
    var odds = $(count).find('.odds em').html();
    var times = $(count).find('.times input').val();
    var mode = $(count).find('.mode select').val();
    var moneywin;

    var $pos = $(_el).find('.number .pos');
    var $textarea = $(_el).find('.number .box textarea');

    // 计算合法注数
    if ($textarea.length > 0 && !$textarea.hasClass('editable')) {
      total = $textarea.val().split('; ').length;
    } else {
      total = $(count).siblings('.number').find("ul li").length;
    }
    if ($pos.length > 0) {
      total = total * Math.combination($pos.find('label.on').length, t[2]);
    }
    moneywin = me.getMoneyWin(0, odds, total, times, mode, '', me.method);
    $(count).find('.total em').html(total);
    $(count).find('.money em').html(moneywin.money);
    $(count).find('.odds select').data('times',moneywin.wintime);
    ///////////$(count).find('.money em').html(moneywin.money);
    me.calcMoney(_el);
  },
  //计算注数
  getStack: function(elem, t) {
    var n = 1;
    var len = 0;
    var arr = [];
    var pos = 0; // 万、千、百、十、个 
    var rxNum = 0; // 任选二、三、四
    $(elem).children('dl').each(function(i, el) {
      if ($(el).find("i.on").length > 0) {
        var a1 = [];
        $(el).find("i.on").each(function(j, el) {
          a1.push($(el).html());
        });
        arr.push(a1);
      } else {
        arr.push([]);
      }
    });

    // 万、千、百、十、个
    pos = $(elem).find('.pos label.on').length;
    rxNum = parseInt(t[0].charAt(t[0].length - 1));

    if (t[1] === "zx") {
      switch (t[2]) {
        case "fs": // 复式
        case "zh": // 组合
        case "hfs": // 后复式
        case "qfs": // 前复式
          var w = 0; //万位
          var q = 0; //千位
          var b = 0; //百位
          var s = 0; //十位
          var g = 0; //个位
          for (var i = 0; i < arr.length; i++) {
            var _len = arr[i].length;
            n = n * parseInt(_len, 10);
          }
          if (t[2] === 'zh') {
            n = n * arr.length;
          }
          // 任选二复式 任选三复式
          if (t[0] === 'rx2' || t[0] === 'rx3' || t[0] === 'rx4') {
            w = arr[0].length;
            q = arr[1].length;
            b = arr[2].length;
            s = arr[3].length;
            g = arr[4].length;

            if (t[0] === 'rx2') {
              n = w * (q + b + s + g) + q * b + (q + b) * (s + g) + s * g;
            }
            if (t[0] === 'rx3') {
              n = (w * q + w * b + q * b) * (s + g) + w * q * b + (w + q + b) * s * g;
            }
            if (t[0] === 'rx4') {
              n = w * q * b * s + w * q * b * g + w * q * s * g + w * b * s * g + q * b * s * g;
            }
          }
          break;
        case "hz": // 和值
        case "hhz": // 后和值
        case "qhz": // 前和值
          // data下标对应所选号码的值
          var data = [1, 3, 6, 10, 15, 21, 28, 36, 45, 55, 63, 69, 73, 75, 75, 73, 69, 63, 55, 45, 36, 28, 21, 15, 10, 6, 3, 1];
          var data2 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1];

          n = 0;
          for (var i = 0; i < arr[0].length; i++) {
            var a = arr[0][i];
            if (t[2] === "hz" && t[0] !== 'rx2') {
              n += data[a];
            } else {
              n += data2[a];
            }
          }
          // 任选和值得计算万千百十个是否选择
          if (t[0] === 'rx2' || t[0] === 'rx3') {
            n = n * Math.combination(pos, rxNum);
          }
          break;
        default:
          break;
      }
    } else if (t[1] === "zux") {
      var a = arr[0] || [];
      var b = arr[1] || [];
      switch (t[2]) {
        case "z120": // 组120
          n = Math.combination(a.length, 5);
          break;
        case "z60": // 组选60
          var n1 = Math.combination(b.length, 3);
          var n2 = Math.difference(a, b).length;
          var n3 = Math.intersection(a, b).length;
          var n4 = Math.combination(b.length - 1, 3) * n3;

          n = n1 * n2 + n4;
          break;
        case "z30": // 组选30
          var n1 = Math.combination(a.length, 2);
          var n2 = Math.combination(b.length, 1);
          var n3 = Math.intersection(a, b).length;

          n = n1 * n2 - (a.length - 1) * n3;
          break;
        case "z20": // 组选20
          var n1 = Math.combination(b.length, 2);
          var n2 = Math.difference(a, b).length;
          var n3 = Math.intersection(a, b).length;
          var n4 = Math.combination(b.length - 1, 2) * n3;

          n = n1 * n2 + n4;
          break;
        case "z10": // 组选10
          var n1 = Math.combination(b.length, 1);
          var n2 = Math.difference(a, b).length;
          var n3 = Math.intersection(a, b).length;
          var n4 = Math.combination(b.length - 1, 1) * n3;

          n = n1 * n2 + n4;
          break;
        case "z5": // 组选5
          var n1 = Math.combination(b.length, 1);
          var n2 = Math.difference(a, b).length;
          var n3 = Math.intersection(a, b).length;
          var n4 = Math.combination(b.length - 1, 1) * n3;

          n = n1 * n2 + n4;
          break;
        case "z24": // 组选24
          n = Math.combination(a.length, 4);

          if (t[0] === 'rx4') {
            n = n * Math.combination(pos, rxNum);
          }
          break;
        case "z12": // 组选12
          var n1 = Math.combination(b.length, 2);
          var n2 = Math.difference(a, b).length;
          var n3 = Math.intersection(a, b).length;
          var n4 = Math.combination(b.length - 1, 2) * n3;

          n = n1 * n2 + n4;

          if (t[0] === 'rx4') {
            n = n * Math.combination(pos, rxNum);
          }
          break;
        case "z6": // 组选6 组六
          if (t[0] === 'sx' || t[0] === 'rx4') {
            n = Math.combination(a.length, 2);
          } else {
            // var k = a.length;
            // n = k * (k - 1) * (k - 2) / 6;
            n = Math.combination(a.length, 3);
          }
          // 任选三、任选四组6得计算万千百十个是否选择
          if (t[0] === 'rx3' || t[0] === 'rx4') {
            n = n * Math.combination(pos, rxNum);
          }
          break;
        case "z4": // 组选4
          var n1 = Math.combination(b.length, 1);
          var n2 = Math.difference(a, b).length;
          var n3 = Math.intersection(a, b).length;
          var n4 = Math.combination(b.length - 1, 1) * n3;

          n = n1 * n2 + n4;
          if (t[0] === 'rx4') {
            n = n * Math.combination(pos, rxNum);
          }
          break;
        case "z3": // 组三
          n = a.length * (a.length - 1);
          // 任选三组3得计算万千百十个是否选择
          if (t[0] === 'rx3') {
            n = n * Math.combination(pos, rxNum);
          }
          break;
        case "hz":
        case "hhz":
        case "qhz":
          // data下标对应所选号码的值
          var data = [1, 2, 2, 4, 5, 6, 8, 10, 11, 13, 14, 14, 15, 15, 14, 14, 13, 11, 10, 8, 6, 5, 4, 2, 2, 1];
          var data2 = [1, 1, 2, 2, 3, 3, 4, 4, 5, 4, 4, 3, 3, 2, 2, 1, 1];

          n = 0;
          for (var i = 0; i < arr[0].length; i++) {
            var a = arr[0][i];
            if (t[2] === "hz" && t[0] !== 'rx2') {
              n += data[a - 1];
            } else {
              n += data2[a - 1];
            }
          }
          // 任选和值得计算万千百十个是否选择
          if (t[0] === 'rx2' || t[0] === 'rx3') {
            n = n * Math.combination(pos, rxNum);
          }
          break;
        case "hfs":
        case "qfs":
        case "fs":
          n = Math.combination(a.length, 2);
          // 任选复式得计算万千百十个是否选择
          if (t[0] === 'rx2' || t[0] === 'rx3') {
            n = n * Math.combination(pos, rxNum);
          }
          break;
        default:
          break;
      }
    } else if( t[1].indexOf('cq') == 0 ){
    	var pkstatus = true;
    	$(arr).each(function(){
    		var e = arguments[1];
    		if(e.length == 0){
    			pkstatus = false;
    			return false;
    		}
    	});
    	if(pkstatus){
    		var newArr = [];
    		var calcpkzux = function(arr){
        		if(arr.length == 1){
        			return;
        		}
        		for(var i=0;i<arr[0].length;i++){
        			for(var j=0;j<arr[1].length;j++){
        				if(String(arr[0][i]).indexOf(arr[1][j]) == -1){
        					var item = arr[0][i] + '-' + arr[1][j];
        					newArr.push(item);
        				}
        			}
        		}
        		arr.splice(0,2,newArr);
        		newArr = [];
        		calcpkzux(arr);
        	}
        	calcpkzux(arr);
            n = arr[0].length;
    	}else{
    		n = 0;
    	}
    } else if (t[1] === "dwd") { // 定位胆
      n = 0;
      for (var i = 0; i < arr.length; i++) {
        n += arr[i].length;
      }
    } else if (t[1] === "bdd") { // 不定胆
      switch (t[2]) {
        case "hs1": // 后三一码
        case "qs1": // 前三一码
        case "bdd1": // 一码不定胆
          n = arr[0].length;
          break;
        case "hs2": // 后三二码
        case "qs2": // 前三二码
        case "bdd2": // 二码不定胆
          var k = arr[0].length;
          n = k * (k - 1) / 2;
          n = Math.combination(arr[0].length, 2)
          break;
        case "bdd11y": // 11选5的不定胆
          n = arr[0].length;
          break;
        default:
          break;
      }
    } else if (t[1] === "dxds") { // 大小单双
      n = arr[0].length * arr[1].length;
    } else if (t[1] === "dx" || t[1] === "ds" || t[1] === "hz" || t[1] === "lh") { // pk10大小 单双 龙虎  pk10和值
      n = arr[0].length;
    } else if (t[1] === "sm") { // 11选5的三码(计算不影响时时彩三码)
      switch (t[2]) {
        case "zxfs":
          n = 0;
          // 暂时笨办法3层循环两两不等则n+1 后来人勿喷！
          for (var i = 0; i < arr[0].length; i++) {
            for (var j = 0; j < arr[1].length; j++) {
              if (arr[1][j] === arr[0][i]) continue;
              for (var k = 0; k < arr[2].length; k++) {
                if (arr[2][k] === arr[0][i] || arr[2][k] === arr[1][j]) continue;
                n += 1;
              }
            }
          }
          break;
        case "zuxfs":
          // 与3中3公式一样
          n = Math.nzn(arr[0].length, 3);
          break;
        default:
          break;
      }
    } else if (t[1] === "em") { // 11选5的二码码(计算不影响时时彩二码)
      switch (t[2]) {
        case "zxfs":
          var n1 = arr[0].length * arr[1].length;
          var n2 = Math.intersection(arr[0], arr[1]).length;
          n = n1 - n2;
          break;
        case "zuxfs":
          n = Math.nzn(arr[0].length, 2);
          break;
        default:
          break;
      }
    } else if (t[1] === "rxfs") { // 11选5的任选复式
      n = Math.round(Math.nzn(arr[0].length, parseInt(t[2], 10)));
    } else if (t[1] === "qw") { // 北京快乐8趣味
      n = arr[0].length;
    } else if (t[1] === "rxx") { // 北京快乐8任选x
      // 取rx1 rx2 rx3 ... rx7的 1 2 3...7
      var a = arr[0].length + arr[1].length;
      var b = parseInt(t[2].charAt(t[2].length - 1), 10);
      n = t[2] === 'rx1' ? a : Math.combination(a, b);
    } else {
    }

    return n;
  },
  calcMoney: function(_el) {
    var me = this;
    var count = $(_el).find('.count')[0];
    var total = parseInt($(count).find('.total em').html(), 10);
    var times = parseInt($(count).find('.times input').val(), 10);
    var mode = parseFloat($(count).find('.mode input:checked').val(), 10);
    var odds = parseFloat($(count).find('.odds select').val(), 10);
    var point = parseFloat($(count).find('.odds select option:checked').data('point'), 10);
    var money = $(count).find(".money em");
    var btnConfirm = $(count).find(".confirm");
    var quickSubmit = $(count).find(".quickSubmit");
    var result = total * times * mode;
    var pos = $(_el).find('.number .pos label');
    var pos_val = [];

    result = result.toFixed(Math.precision(mode));
    
    if (total > 0) {      
      btnConfirm.removeClass('disabled');
      quickSubmit.removeClass('disabled');
      /*if (typeof btnConfirm.attr('pass') == 'undefined') {
        btnConfirm.removeClass('disabled');  
      }else {
        btnConfirm.addClass('disabled');
      }*/
      money.html('￥' + result);
    } else {
      btnConfirm.addClass('disabled');
      quickSubmit.addClass('disabled');
      $(count).removeAttr('data-count');
      money.html(result);
      return false;
    }

    // 任选玩法存在 且有万、千、百、十、个
    if (pos.length > 0) {
      for (var i = 0; i < pos.length; i++) {
        var cur = $(pos[i]);
        if (cur.hasClass('on')) {
          pos_val.push(cur.attr('data-pos'));
        }
      }
    }
    var oddtimes = 1;
    if (typeof $(count).find('.odds select').data('times') !='undefined') {
      oddtimes = parseInt($(count).find('.odds select').data('times'),10);
    }
    $(count).attr('data-count', [total, times, mode, odds, point, result, pos_val.join(','),oddtimes].join("|"));
  },
  countReset: function(_el) {
	var me = this;
    var count = $(_el).find('.count');
    var order = $(_el).find('.orders');
    
    //切换彩种，投注倍数初始化
    if(me.old_lt !== me.lt){
    	$(count).find('.times input').val('1');
    	$(count).find('.mode label').eq(0).click();
    }else{
    	var modeSelect = $(count).find('.mode .modeSelect');
    	if(modeSelect.length > 0){
    		modeSelect.click();
    	}else{
    		$(count).find('.mode label').eq(0).click();
    	}
    }
    
    if($('.quickSubmit-orders').length == 0){
    	$(_el).find(".count .confirm").addClass('disabled');
    	$(count).find('.total em').html('0');
        $(count).find('.money em').html('0');
        $('.quickSubmit').addClass('disabled');
        
        if(me.cls == 'pk10' && me.method.indexOf('hz_hz') != -1){
	    	$(count).find('.odds em').show().html(0);
	    	$(count).find('select').hide();
	    }
	}else{
		var ds_input = $(_el).find('.number .box textarea.editable');
		if(ds_input.length > 0){
			$(_el).find(".count .confirm").addClass('disabled');
			$('.quickSubmit').addClass('disabled');
		}
	}
    
    $(order).find('.submit').removeClass('loading');
    
    me.old_lt = me.lt;
  },
  getOrder: function() {
    var me = this;
    var _el = $("#" + this.type);
    var tab = _el.find('.tab');
    var sTab = _el.find('.subtab');
    var count = _el.find('.count').attr("data-count").split('|');
    
    var code = me.getCode(_el.find('.number')); // 获取选号盘中格式化后的代码
    var name = Q.getMethodName(me.method, me.lt); // 如：后三码直选复式
    
    var html = '';
    
    //pk10 和值订单拆分
    if(me.cls == 'pk10' && me.method.indexOf('hz') != -1){
    	code = code.split(',');
    	//data-count  注数|倍数|元角分厘|奖金模式|返点|总金额|奖金倍数
    	count[0] = 1;
    	count[5] = count[2];
    	$(code).each(function(){
    		var hz_num = arguments[1];
    		var hz_method;
    		var desc = me.descFormat(hz_num, me.method);
    		var arr = Q.PkHzNum[me.method.split('_')[2]];
    		$(arr).each(function(){
    			if(arguments[1].split('_').indexOf(hz_num) != -1){
    				hz_method = me.method + '_' + arguments[1];
    				return false;
    			}
    		});
    		
    		var obj = me.odds[me.lt][hz_method];
    		if (obj.point !== undefined) {
    			var p = $('#lottery .count .odds select option:selected').attr('data-point');
    			if(p == 0){
    				var val = (obj.odds	 + obj.x * obj.point).toFixed(3);
    				count[3] = val.substr(0, val.length - 1);
    			}else{
    				count[3] = obj.odds;
    			}
    		}else{
    			count[3] = obj.odds; 
    		}
    		
            var win = me.getMoneyWin(0, count[3], count[0], count[1], count[2], hz_num, hz_method).win;

            if($('.quickSubmit-orders').length > 0){
            	html += '<li class="quickSubmit-li" ';
            }else{
            	html += '<li ';
            }
            html += 'data-type="' + hz_method + '" data-code="' + hz_num + '" data-desc="' + name + ' ' + desc + '" data-count="' + count.join("|") + '">' +
              '<div class="codes" title="' + name + ' ' + Q.getPositionName(count[6]) + desc + '">' + name + Q.getPositionName(count[6]) + '<em>' + desc + '</em></div>' +
              '<div class="odds">' + count[3] + '</div>' +
              '<div class="share"> <input type="text" class="spinner newInput biggerw" min="1" max="99999" step="1" value="' + count[1] + '" /> </div>' +
              '<div class="money">￥' + count[5] + '</div>' +
              '<div class="win">￥' + win + '</div>' +
              '<a href="javascript:;" class="delete" title="删除"></a> </li>';
    	});
    	
        return html;
    }else{	
        // count = [total, times, mode, odds, result]
        var win = me.getMoneyWin(0, count[3], count[0], count[1], count[2], code, me.method).win;
        var desc = me.descFormat(code, me.method);
        
        if($('.quickSubmit-orders').length > 0){
        	html += '<li class="quickSubmit-li" ';
        }else{
        	html += '<li ';
        }
        
        html += 'data-type="' + me.method + '" data-code="' + code + '" data-desc="' + name + ' ' + desc + '" data-count="' + count.join("|") + '">' +
          '<div class="codes" title="' + name + ' ' + Q.getPositionName(count[6]) + desc + '">' + name + Q.getPositionName(count[6]) + '<em>' + desc + '</em></div>' +
          '<div class="odds">' + count[3] + '</div>' +
          '<div class="share"> <input type="text" class="spinner newInput biggerw" min="1" max="99999" step="1" value="' + count[1] + '" /> </div>' +
          '<div class="money">￥' + count[5] + '</div>' +
          '<div class="win">￥' + win + '</div>' +
          '<a href="javascript:;" class="delete" title="删除"></a> </li>';
    }
    
    if($('.quickSubmit-orders').length == 0){
    	$(_el).find(".count .confirm").addClass('disabled');
	}
    
    return html;
  },
  getCode: function(el) {
    var me = this;
    // 非单式
    var dl = el.children('dl'); 
    
    // 单式
    var li = el.find('.box ul li'); 
    var textarea = el.find('.box textarea');
    
    var data = [];
    var m = me.method.split('_');

    if (dl && dl.length > 0) {// 非单式
      for (var i = 0, len = dl.length; i < len; i++) {
        var i_on = $(dl[i]).find('i.on');
        var tmp1 = [];
        for (var j = 0; j < i_on.length; j++) {
          if (m[0] === 'qw') {
            tmp1.push($(i_on[j]).attr('data-val'));
          } else {
            tmp1.push($(i_on[j]).html());
          }
        }
        data.push(tmp1.join(","));
      }

      if (me.type !== "market") {
    	  if($('.quickSubmit-orders').length == 0){
    	      $(el).find('i').removeClass('on');
    	  }
      }
    } else if (li && li.length > 0) {// 单式
      for (var i = 0; i < li.length; i++) {
        data.push($(li[i]).attr("data-code"));
      }
      if (me.type === "lottery") {
        $(el).find('.box ul').empty();
      }
    } else if (textarea && textarea.length > 0) {// 单式
      data = textarea.val();
      
      if (typeof textarea.attr('readonly') !== 'undefined') {
        textarea.removeAttr('readonly');  
      }
      data = data.replace(/\s+/g, '').split(';');

      if (me.cls === '11y' || me.cls === 'pk10') {
        data = data.map(function(n) {
          return n.match(/\d{1,2}/g).join(',');
        });
      } else {
        data = data.map(function(n) {
          return n.split('').join(',');
        });
      }
      if (!textarea.hasClass('editable')) {
        textarea.remove();  
      }
      
      if (el.find('.box textarea').size()==0) {
        el.find('.box').append('<textarea class="editable"></textarea>');
        el.find('.box textarea').val(me.tipchs);
      }
      el.find('.box ul, .box input').show();

    }
    
    return data.join("|");
  },
  descFormat: function(code, method) {
    var me = this;
    var m = method.split('_');
    var desc = code.split('|');

   
    return code.split(',').join('').split('|').join(',');
    
    /**
    // 苦逼的产品需求 投注详情号码样式展示
    if ((m[1] === 'zx' || m[1] === 'dwd') && (m[2] === 'fs' || m[2] === 'zh' || m[2] === 'hfs' || m[2] === 'qfs' || m[2] === 'dwd')) {
      for (var i = 0; i < desc.length; i++) {
        if (desc[i] === '') {
          desc[i] = '-';
        } else {
          desc[i] = desc[i].replace(/[,]/g, '');
        }
      }
      // 四星 三码对应位置加中划线
      switch (m[0]) {
        case 'sx':
          desc.unshift('-');
          break;
        case 'hsm':
          desc.unshift('-');
          desc.unshift('-');
          break;
        case 'qsm':
          desc.push('-');
          desc.push('-');
          break;
        case 'zsm':
          desc.unshift('-');
          desc.push('-');
          break;
        default:
          break;
      }

      // 单独处理后二复式 前二码复式
      if (m[2] === 'hfs') {
        if (me.cls === '3d') {
          desc.unshift('-');
        } else {
          desc.unshift('-');
          desc.unshift('-');
          desc.unshift('-');
        }
      }
      if (m[2] === 'qfs') {
        if (me.cls === '3d') {
          desc.push('-');
        } else {
          desc.push('-');
          desc.push('-');
          desc.push('-');
        }
      }
      desc = desc.join(',');
    } else if (m[2] === 'hz' || m[2] === 'qhz' || m[2] === 'hhz') {
      desc = desc.join('').replace(/,/g, ';');
    } else if (m[1] === 'zux' || m[2] === 'ds' || m[2] === 'qds' || m[2] === 'hds' || m[2] === 'zxds' || m[2] === 'zuxds' || m[0] === 'rxds' || m[1] === 'dxds') {
      desc = desc.join(';');
    }

    // 11选5的一些东东
    if ((m[0] === 'sm' && m[2] === 'zxfs') || m[2] === 'dwd11y') {
      desc.push('-');
      desc.push('-');
      desc.join('');
    } else if (m[0] === 'em' && m[2] === 'zxfs') {
      desc.push('-');
      desc.push('-');
      desc.push('-');
      desc.join('');
    }
    // 苦逼结束 他奶奶的

    return desc;
    */
  },
  getMoneyWin: function(buytype, odds, total, times, mode, code, method) {
    var me = this;
    var money = 0;
    var win = 0;
    var wintime = 1;
    var precision = Math.precision(odds) + Math.precision(mode);
    var m = method.split('_');
    var isBuy = buytype === 0 || buytype === '0';
    var code = code.split('|');

    // 买卖:buytype 赔率:odds 注数:total 倍数:times 投注模式:mode 投注号码：1,2|3|4
    if (m[2] === 'zh') {
      // 特殊处理五星、四星组合玩法
      if (isBuy) {
        money = total * times * mode;
        for (var i = 0; i < code.length; i++) {
          win += (odds / Math.pow(10, i)) * times * mode / 2;
        }
        win = win - money;
      } else {
        for (var i = 0; i < code.length; i++) {
          money += (odds / Math.pow(10, i)) * times;
        }
        win = total * times * mode;
      }
      precision = 1;
    } else if (m[0] === 'dwd') {
      // 特殊处理定位胆玩法
      if (isBuy) {
        money = total * times * mode;
        for (var i = 0; i < code.length; i++) {
          if (code[i] !== '') {
            win += odds * times * mode / 2;
          }
        }
        win = win - money;
      } else {
        for (var i = 0; i < code.length; i++) {
          if (code[i] !== '') {
            money += odds * times;
          }
        }
        win = total * times * mode;
      }
    } else if (m[0] === 'bdd') {
      // 特殊处理不定胆玩法
      if (isBuy) {
        money = total * times * mode;
        win = odds * times * mode / 2 * (total < 3 ? total : 3) - money;
      } else {
        money = odds * times * (total < 3 ? total : 3);
        win = total * times * mode;
      }
    } else if (m[0] === 'dxds') {
      // 特殊处理大小单双
      var t0 = 1;
      var t1 = 1;
      if (/['大'|'小']/.test(code[0]) && /['单'|'双']/.test(code[0])) {
        t0 = 2;
      }
      if (/['大'|'小']/.test(code[1]) && /['单'|'双']/.test(code[1])) {
        t1 = 2;
      }
      if (isBuy) {
        money = total * times * mode;
        win = odds * times * mode / 2 * t0 * t1 - money;
      } else {
        money = odds * times * t0 * t1;
        win = total * times * mode;
      }
    } else if (m[0] === 'rxfs' || m[0] === 'rxds') {
      code = code[0].split(',');
      var rxNum = 1;

      if (parseInt(method.substr(-3, 1), 10) <= 5) {
        rxNum = code.length < 5 ? total : Math.combination(5, parseInt(method.substr(-3, 1), 10));
      } else {
        rxNum = Math.combination(code.length - 5, parseInt(method.substr(-3, 1), 10) - 5);
      }
      // 特殊处理定位胆玩法
      if (isBuy) {
        money = total * times * mode;
        win = odds * times * mode / 2 * rxNum - money;
      } else {
        money = odds * times * rxNum;
        win = total * times * mode;
      }
    } else if (m[0] === 'rx2' || m[0] === 'rx3' || m[0] === 'rx4') {
      money = total * times * mode;
      win = times * odds * mode / 2;
      if (m[1] === 'zx' && m[2] === 'fs') {
        code = code.filter(function(n) {
          if (n !== '') return n;
        });
        wintime = Math.combination(code.length, m[0].charAt(m[0].length - 1))
        win = win * wintime;
      } else {
        wintime = Math.combination($("#lottery .number .pos label.on").length, m[0].charAt(m[0].length - 1)) 
        win = win * wintime;
      }
      win = win - total * times * mode;
    } else {
      if (isBuy) {
        money = total * times * mode;
        win = times * odds * mode / 2 - total * times * mode;
      } else {
        money = odds * times;
        win = total * times * mode;
      }
    }

    // 以下处理浮点数运算不精确的问题 如
    money = money.toFixed(precision);
    money = parseFloat(money, 10);
    win = win.toFixed(precision);
    win = parseFloat(win, 10);

    return {
      money: money,
      win: win,
      wintime: wintime
    };
  },
  setSubmitData: function() {
    var me = this;
    var _el = $("#" + me.type);
    var orders = _el.find('> div.orders')[0];
    var list = $(orders).find('.list > ul > li');
    var total = 0;
    var amount = 0;
    var profit = 0;
    var profitTimes = [];
    var traceper = 0;
    var profitper = 0;
    var saleper = 0;
    var saleprofitper = 0;
    var buyper = 0;
    var buyprofitper = 0;

    if (list.length > 0) {
      if (me.type === "lottery") {
        profitTimes=[]
        for (var i = 0, len = list.length; i < len; i++) {
          var d = $(list[i]).attr("data-count").split('|');
          total += parseInt(d[0], 10);
          amount += Q.floatMul(parseFloat(d[5], 10), 10000);
          profit += (parseFloat(d[3], 10) * parseFloat(d[1], 10)) - parseFloat(d[5], 10);
          traceper += (parseFloat(d[5], 10) / parseFloat(d[1], 10));
          profitper += parseFloat(d[3], 10) * (parseFloat(d[2]/2)) * parseInt(d[7],10);
          profitTimes.push(parseInt(d[7],10));
        }
        $(orders).find('.total').html(total);
      }
      amount = amount / 10000;
      
      var traceAllData = {
        type: me.type,
        traceM: traceper,
        times: 1,
        amount: amount,
        profixP: profitper,
        money: amount,
        traceMSale: saleper,
        profixPSale: saleprofitper,
        traceMBuy: buyper,
        profixPBuy: buyprofitper,
        profixPer: (profitper - traceper),
        //profixRate: parseInt(((profitper - traceper) / traceper) * 100, 10)
        profixRate: parseFloat((profitper - traceper) / traceper)*100
      };

      $(orders).data('trace', traceAllData).find('.amount').html('￥' + amount);

      Trace.updateTimes($(orders).find('>div.trace-data'), $(orders).find('>div.trace-data>a:eq(0)'), traceAllData);

      $(orders).find('.submit').removeClass('disabled');

//      if ($('.guide-box:visible').size() > 0) {
//        var nowbonus = $('.buy-wrap div.odds input').map(function() {
//          return $(this).val();
//        }).get();
//
//        $('.guide-box .nowbonus').html(nowbonus.join('、'));
//        //$('.guide-box .nowpay').html($('#market .orders .list .bottom em.amount').html().replace('￥', ''));
//        if ($('#market .orders .list ul:eq(0) li:eq(0) div.win').size() > 0) {
//          $('.guide-box .nowwin').html($('#market .orders .list ul:eq(0) li:eq(0) div.win').html().replace('￥', ''));
//        }
//      }
    } else {
//      if ($('.guide-box:visible').size() > 0) {
//        return false;
//      }
      me.resetOrders();
    }
  },
  resetOrders: function() {
    var me = this;
    var _el = $("#lottery");
    var orders = _el.find('.orders');

    if($(orders).hasClass('quickSubmit-orders')){
    	$(orders).find('.list > ul li.quickSubmit-li').remove();
    }else{
    	$(orders).find('.list > ul').empty();
    }
    
    $(orders).find('.total, .amount').html(0);
    $(orders).find('.submit').addClass('disabled');
    
    $(orders).removeClass('quickSubmit-orders');
    // 重置追号选择
    Trace.resetTraceBox($(orders));
  },
  updateOdds: function() {
    var me = this;
    var $odds = $('#lottery .count .odds');
    var obj;
    var hz_odds = [];
    
    if (me.odds[me.lt]) {
    	//北京pk10 和值 号码不同赔率不同，坑！！！
        if(me.cls == 'pk10' && me.method.indexOf('hz') != -1){
        	var items = $('#lottery .number i.on');
        	if(items.length == 0){
        		obj = {odds:0}
        	}else{
        		var arr = Q.PkHzNum[me.method.split('_')[2]];
        		items.each(function(){
        			var num = $(this).html();
        			$(arr).each(function(){
        				 if(arguments[1].split('_').indexOf(num) != -1){
        					 obj = me.odds[me.lt][me.method+'_' + arguments[1]];
        					 if(hz_odds.length == 0){
            					 hz_odds.push(obj)
            					 hz_odds.push(obj);
        					 }else{
        						 if(obj.odds > hz_odds[1].odds){
        							 hz_odds[1] = obj;
        						 }
        						 
        						 if(obj.odds < hz_odds[0].odds){
        							 hz_odds[0] = obj;
        						 }
        					 }
        					 return false;
        				 }
        			});
        		});
        		
        	}
        }else{
        	if(!me.odds[me.lt][me.method]){
        		return;
        	}
        	obj = me.odds[me.lt][me.method];
        }
        
      
      me.lt_odds = obj.odds || hz_odds;

      if (obj.point !== undefined) {
        // 登录之后的赔率 有返点
        var option = [];
        var val = 0;

        if(hz_odds.length > 0){
        	var obj1 = hz_odds[0];
        	var obj2 = hz_odds[1];
        	
        	var v1 = (obj1.odds + obj1.x * obj1.point).toFixed(3);
        	var v2 = (obj2.odds + obj2.x * obj2.point).toFixed(3);
        	
            v1 = v1.substr(0, v1.length - 1);
            v2 = v2.substr(0, v2.length - 1);
            
            var v,odd;
            if(obj1.odds == obj2.odds){
        		v = v1; 
        		odd =  obj1.odds;
        	}else{
        		v = v1 + ' - ' + v2; 
        		odd = obj1.odds + ' - ' + obj2.odds;
        	}
            
            if (parseFloat(obj1.point, 10) === 0) {
              option.push('<option value="pk10_hz" data-point="0">' + v + ' ~ 0%</option>');
              $odds.find('em').html(val).show();
              $odds.find('select').html(option.join('')).hide();
            } else {
              option.push('<option value="pk10_hz" data-point="0">' + v + ' ~ 0%</option>');
              option.push('<option value="pk10_hz" data-point="' + obj1.point + '">' + odd + ' ~ ' + Q.percentFormat(obj1.point) + '%</option>');
              $odds.find('em').hide();
              $odds.find('select').html(option.join('')).show();
            }
        }else{
        	 val = (obj.odds + obj.x * obj.point).toFixed(3);
             val = val.substr(0, val.length - 1);
             if (parseInt(val, 10) === parseFloat(val, 10)) {
               val = parseInt(val, 10);
             } else {
               val = parseFloat(val, 10);
             }

             if (parseFloat(obj.point, 10) === 0) {
               option.push('<option value="' + val + '" data-point="0">' + val + ' ~ 0%</option>');
               $odds.find('em').html(val).show();
               $odds.find('select').html(option.join('')).hide();
             } else {
               option.push('<option value="' + val + '" data-point="0">' + val + ' ~ 0%</option>');
               option.push('<option value="' + obj.odds + '" data-point="' + obj.point + '">' + obj.odds + ' ~ ' + Q.percentFormat(obj.point) + '%</option>');
               $odds.find('em').hide();
               $odds.find('select').html(option.join('')).show();
             }
        }
      } else {
    	  // 未登录赔率 无返点
    	  var odd;
    	  if(hz_odds.length > 0){
    		  if(hz_odds[0].odds == hz_odds[1].odds){
    			  odd = hz_odds[0].odds;
    		  }else{
    			  odd = hz_odds[0].odds + '~' + hz_odds[1].odds;
    		  }
    	  }else{
        	  odd = obj.odds;
    	  }
    	  
	      $odds.find('select').html('<option value="' + odd + '" data-point="-1"></option>').hide();
	      $odds.find('em').html(odd).show();
      }
    }
  },
  updateIssueInfo: function() {
    var me = this;
    var skiptime = false;
    if (arguments.length > 0) {
      skiptime = arguments[0]
    }
    Api.getIssueInfo({
      'lottery': me.lt
    }, function(d) {
      var info = $('.main .info');
      var countTime = $('.main .countTime');//投注按钮下方倒计时
      var html = [];
      var lastHtml = [];
      var t = 0;
      var tip;
      var lastCode = '';
      var lastIssue = '-';
      
      var lt_name = $('#lotteryClass dd.on em').eq(0).html();
      if (d.result) {
        d = d.result;
        
        //追号
        me.next = d.next;
        me.loop = d.loop;
        me.issue = d.issue;
        if (!skiptime) {
          me.updateRecency();  
        }

        if (d.lottery === 'WBGMMC') {
          countTime.hide();

    	  var mmc_html = '';
    	  
    	  if(d.lastFive && d.lastFive.length > 0){
    		  for (var i = 0; i < d.lastFive.length; i++) {
            	  if(i < 12){
            		  mmc_html = mmc_html + '<li><span>';
              	  }else{
              		  mmc_html = mmc_html + '<li class="history-hidden"><span>';
              	  }
            	  var code = d.lastFive[i].code.replace(/,/g, '');
            	  
            	  mmc_html += code.replace(new RegExp(/\d/g), function($0, $1) {
                	  return "<em>" + $0 + '</em>';
                  });
            	  
            	  mmc_html += '</span></li>';
              }
    	  }
          
          info.attr('class', 'info lt-' + me.lt.toLowerCase());
          info.find('.name em').html(lt_name);
          info.find('.name p').html(Q.ltDesc(d.lottery));
          info.find('.issue, .last-issue').hide();
          info.find('.flipball-wrap').show();
          
          $('.aside .history').addClass('mmc-history').find('ul').html(mmc_html);
          $('.aside .history .chart').attr('href', '/lottery/chart.html?lt=' + d.lottery);

          info.find('.clock').remove();
          info.find('.issue').append($('<div class="clock"></div>'));

          // 屏蔽厘模式
          $('#lottery .mode label').last().attr('style', 'display: none');

          // 初始化滚动数字
          me.flipball = $("#flipball").flipball({
            ballsize: 5, // 彩球个数
            initball: '0,0,0,0,0', // 初始化彩球数据
            loop: 3, // 彩球滚动循环次数（必须为整数）
            timeout: 1500, // 彩球滚动动画执行时间基数
            delay: 80, // 每个彩球动画执行延迟时间基数
            offset: [82, 86] // 球的宽高
          });

          me.isStop = false;
          if (!skiptime) {
            me.updateTime();
          }

          // 秒秒彩隐藏追号 显示连投
          $('.trace-box').hide();
          if ($('#mmcLoop').length === 0) {
          	var mmcEl = '<div id="mmcLoop">连续投注<select>'+
          				'<option value="1" selected>1</option>' +
          				'<option value="5">5</option>' +
          				'<option value="10">10</option>' +
          				'<option value="50">50</option>' +
          				'<option value="100">100</option>' +
          				'<option value="200">200</option>' +
          				'<option value="500">500</option>' +
          				'<option value="1000">1000</option>' +
          				'</select><input type="checkbox" id="succStop">中奖即停</div>';
          	$(mmcEl).insertAfter('.trace-box');
          	$('#mmcLoop select').editableSelect({
                                filter: false,
                                effects: 'fade',
                                onCreate: function() {
                                  var $this = $('#mmcLoop input[type=text]');
                                  $this.on('keyup', function() {
                                    $this.val($this.val().replace(/[^\d]/g, ''));
                                    $this.val(parseInt($this.val(), 10) > 1000 ? 1000 : $this.val());
                                  });
                                }
                              });
          }
        } else {
        	$('.trace-box').show();
        	$('#mmcLoop').hide();
        	
          // 非秒秒彩展示厘模式
          $('#lottery .mode label').last().removeAttr('style');

          info.find('.flipball-wrap, .mmc-last5').hide();
          info.find('.issue, .last-issue').show();

          // 过滤后台坑货们传过来code为null 草！
          if(d.lastFive && d.lastFive.length > 0) {
            var tmpFive = [];
            for (var i = 0; i < d.lastFive.length; i++) {
              if(d.lastFive[i].code !== null && d.lastFive[i].code !== '') {
                tmpFive.push(d.lastFive[i]);
              }
            }
            d.lastFive = tmpFive;
          }

          // 坑货最近5期处理完成
          if (d.lastFive && d.lastFive.length > 0) {
            if (typeof me.chknewopen == 'undefined') {
              me.chknewopen = d.lastFive[0].code.replace(/,/g, '');  
            }else {
              var firstcode = d.lastFive[0].code.replace(/,/g, '');
              if (me.chknewopen!=firstcode) {
                me.noanimation = false;
                me.chknewopen = d.lastFive[0].code.replace(/,/g, '');  
              }else {
                me.noanimation = true;
              }
            }
            // 遍历最近5期 生成dom
            for (var i = 0; i < d.lastFive.length; i++) {
            	var tmp_html = '';
            	if(me.cls == 'pk10' && i>11){
            		break;
            	}
            	
            	if((me.cls == 'pk10' && i<6) || (me.cls != 'pk10' && i<12)){
            		tmp_html = '<li>';
            	}else{
            		tmp_html = '<li class="history-hidden">';
            	}
              
              var code = d.lastFive[i].code.replace(/,/g, '');
              d.lastFive[i].code = code;

              var issue_temp = me.cls === 'pk10' ? d.lastFive[i].issue : d.lastFive[i].issue.substring(4);
              tmp_html += '<label>' + issue_temp + '</label>';
    
              if(me.cls === 'pk10'){
            	  code = code.substring(0,10) + "<br>" + code.substring(10);
            	  tmp_html += '<span class="pk10-history">';
              }else{
            	  tmp_html += '<span>';
              }
              
              tmp_html += code.replace(me.cls === '11y' || me.cls === 'kl8' ||　me.cls === 'pk10' ? new RegExp(/\d{2}/g) : new RegExp(/\d/g), function($0, $1) {
            	  return "<em>" + $0 + '</em>';
              });
              
              tmp_html += '</span></li>';
              html.push(tmp_html);
            }
            
            lastHtml.push(d.lastFive[0].code.replace(me.cls === '11y' || me.cls === 'kl8' ||　me.cls === 'pk10' ? new RegExp(/\d{2}/g) : new RegExp(/\d/g), function($0, $1) {
              return '<li>' + $0 + '</li>';
            }));
            
            lastIssue = d.lastFive[0].issue.split('-')[1] || d.lastFive[0].issue;
          } else {
            html.push(me.cls === '3d' ? '<li>-</li><li>-</li><li>-</li>' : '<li>-</li><li>-</li><li>-</li><li>-</li><li>-</li>');
          }

          if (d.lottery === 'WBG') {
            lt_name += '<b class="tv-living" title="点击观看开奖直播"></b>'
          }

          info.attr('class', 'info lt-' + me.lt.toLowerCase());
          info.find('.name em').html(lt_name);

          info.find('.name p').html(Q.ltDesc(d.lottery));
          info.find('.issue em').html(d.issue === undefined ? '-' : d.issue);
          
          //最近一期开奖奖期及号码
          info.find('.last-issue p span em').html(lastIssue);
          if(me.cls === '11y' || me.cls === 'kl8' ||　me.cls === 'pk10'){
        	  info.find('.last-issue ul').addClass('twoNum');
          }
          
          info.find('.last-issue ul').html(lastHtml.join(''));
          
          //右侧最近5期开奖号码
          $('.aside .history').removeClass('mmc-history').find('ul').html(html.join(''));
          
          $('.aside .history .chart').attr('href', '/lottery/chart.html?lt=' + d.lottery);
          
          if (!me.noanimation) {
            info.find('.last-issue ul li:not(.last5)').removeClass('bounceInDown').addClass('bounceInDown').one('webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend', function() {
              $(this).removeClass('bounceInDown');
              me.noanimation = false;
            });  
          }

          // 重置追号数据
          if ($('#' + me.type + ' .orders input[name=autoTrace]').is(':checked')) {
            Trace.resetTraceDate();
          }
          //关闭追号终止
          /*if (dialog.get('recency-details') !== undefined && !skiptime) {
            dialog.get('recency-details').close().remove();
          }*/

          info.find('.clock').attr('class', 'clock');
          $('#lotteryClass dd').removeClass('warning');

          me.isStop = d.second < 0;

          if (d.second === 0) {
            me.updateIssueInfo();
            return false;
          } else if (d.second === -1) {
            info.find('.clock').remove();
            info.find('.issue').append($('<div class="clock stop">等待开售</div>'));
            info.find('.name p').html('等待开售');
            countTime.hide();
            if (!skiptime) {me.updateTime();}
            return false;
          } else if (d.second === -2) {
            info.find('.clock').remove();
            info.find('.issue').append($('<div class="clock stop">暂停销售</div>'));
            info.find('.name p').html('暂停销售');
            countTime.hide();
            if (!skiptime) {me.updateTime();}
            return false;
          }

          if (!skiptime) {me.updateTime();}

          var _date = new Date().valueOf() + d.second * 1000;

          info.find('.clock').countdown(_date.toString(), function(event) {
            t = event.offset.hours * 60 * 60 + event.offset.minutes * 60 + event.offset.seconds;
            if (t >= 3600 && me.lt !== '3DFC') {
              $(this).addClass('h');
            } else if ($(this).hasClass("h") && me.lt !== '3DFC') {
              $(this).removeClass('h');
            }
            $(this).html(event.strftime(t >= 3600 ? '%#H:%#M:%#S' : '%#M:%#S'));
            //投注按钮下方本期倒计时
            countTime.show().find('em').html(event.strftime(t >= 3600 ? '%#H:%#M:%#S' : '%#M:%#S'));
            
            if (t > 0 && t <= 30 && !(info.find('.main-clock').hasClass('warning'))) {
              info.find('.clock').addClass('warning');
            }
            info.find('.clock b').each(function(){
      		  var c = 'clock_b' + arguments[0];
      		  $(this).addClass(c);
      	  	});
            info.find('.clock label').each(function(){
    		  var c = 'clock_label' + arguments[0];
    		  $(this).addClass(c);
        	});

          }).on('finish.countdown', function() {
            if (dialog.get('go-next-issue') === undefined) {
              tip = dialog({
                id: 'go-next-issue',
                skin: 'go-next-issue',
                title: '温馨提示',
                content: '<h3>' + $('#lotteryClass dd.on em').html() + '</h3><p class="t">第<em>' + info.find('.issue p em').html() + '</em>期售彩已结束</p><p>点击进入下一期购彩</p>',
                cancel: false,
                fixed: true,
                zIndex:1023,
                onshow:function() {
                  //自动倒计时
                  var startSec = me.countDownSec;
                  var nowCountDown = $(this.node).find('.cdown');
                  var startCT = setInterval(function() {
                    if (startSec==0) {
                      tip.close().remove();
                      clearInterval(startCT);
                      //排除新手指引时的看盘刷新
                      if (!Guide.guiding) {
                        me.updateIssueInfo(1);
                      }
                      return false;
                    }
                    nowCountDown.html(['(',startSec--,')'].join(''));
                  },1000);
                },
                button: [{
                  id: 'clock_ok',
                  value: '确&nbsp;&nbsp;&nbsp;&nbsp;定<em class="cdown">('+me.countDownSec+')</em>',
                  callback: function() {
					          //排除新手指引时的看盘刷新
                    if (!Guide.guiding) {
                      me.updateIssueInfo(1);
                    }

                    //清除之前的二次确认提交框
                    if ($('.confirm-again').size() > 0) {
                      $('.confirm-again button.cancel').trigger('click');
                    }
                  }
                }]
              });
              tip.showModal();
            }
          });
          
          me.updateTime();

          // 显示追号
          $('.trace-box').show();
          // 移除秒秒彩连投
          $('#mmcLoop').remove();
        }

        $('.aside .history .moreHistory').off('click').click(function() {
      	  $('.aside li.history-hidden').toggle();
        });
        
        me.openindex = 0;
      }
    });
  },
  updateTime: function() {
    var me = this;
    var nowDate = new Date().getTime();
    if (nowDate - me.startDate < 300) {
      return false;
    }
    me.startDate = nowDate;
    me.openindex = 0;
    
    //clearInterval(Lottery.serverTime);手动暂停轮训查询开奖号码;
    Api.getLotteryTimes({}, function(d) {
    	if(d == -1){
    		$(".loginlnk").trigger('click');
    	}
      var time = d.result.time;
      var now = d.result.now * 1000;
      $('#servertime').data('time', now);
      $('#servertime').html('服务器时间：' + Q.convertStamp(now, 'yyyy年MM月dd日 hh:mm:ss'));
      if(me.serverTime !== null) {
        clearInterval(me.serverTime);
      }
      me.serverTime = setInterval(function() {
        now = parseInt($('#servertime').data('time'), 10) + 1000;
        $('#servertime').data('time', now);
        $('#servertime').html('服务器时间：' + Q.convertStamp(now, 'yyyy年MM月dd日 hh:mm:ss'));

        if (me.openindex>180) {
          me.updateOpenOnly();
          me.openindex = 0;
        }
      }, 1000);
      $('#lotteryClass dd').removeClass('warning');
      for (var lt in time) {
        var $el = $('#lotteryClass dd[data-lt=' + lt + '] span');
        var second = 0;
        if (lt === 'WBGMMC') {
          $el.parent('dd').addClass('mmc').end().html('即开');
          continue;
        }
        if (time[lt] === -1) {
          $el.parent('dd').addClass('wait').end().html('等待');
          continue;
        }
        if (time[lt] === -2) {
          $el.parent('dd').addClass('stop').end().html('停售');
          continue;
        }
        second = new Date().valueOf() + time[lt] * 1000;
        if (parseInt($el.attr('countdown'), 10) === 0) {
          $el.countdown(second.toString(), function(event) {
            var now = event.offset.hours * 60 * 60 + event.offset.minutes * 60 + event.offset.seconds;
            if (now >= 3600) {
              $(this).addClass('h');
            } else if ($(this).hasClass("h")) {
              $(this).removeClass('h');
            }
            $(this).html(event.strftime(now >= 3600 ? '%#H:%#M:%#S' : '%#M:%#S'));
            if (now <= 30 && !$(this).parent('dd').hasClass('warning')) {
              $(this).parent('dd').addClass('warning');
            }
            if (now <= 100){
              me.openindex++;
            }
            
          }).on('finish.countdown', function() {
            $(this).countdown('stop');
            setTimeout(function() {
              me.updateTime();
            }, 500);
          });
        } else {
          $el.countdown(second.toString());
        }
        $el.attr('countdown', 1);
      }
    });
  },
  updateOpenOnly:function() {
    //单独刷新开奖号码
    var me = this;
    me.updateIssueInfo(1);
  },
  updateRecency: function() {
    var me = this;
    var list = $("#lottery .recency ul:eq(0)");
    var p = {
      "lottery": me.lt
    };

    Api.getRecency(p, function(d) {
      /* Bind Data */
      if (d.result && d.result.length > 0) {
        //传统模板
        var tdTag = '</span>';
        var recencyTpl = [
          '<% for ( var i = 0; i < result.length; i++ ) { %>',
          '<li data-id="<%=result[i].orderId%>" data-istrace="<%=result[i].istrace%>">',
          '<span class="wd1"><%=result[i].orderTime|Q.convertStamp,Q.formatOne%>', tdTag,
          '<span class="wd2"><%=result[i].method|Q.getMethodName,result[i].lottery%>', tdTag,
          '<span class="wd1"><%=result[i].issue%>', tdTag,
          '<span class="wd3"><%=result[i].mode|Q.modeName%>', tdTag,
          '<span class="wd2" title="<%=result[i].code|Lottery.descFormat,result[i].method%>"><%=result[i].code|Lottery.descFormat,result[i].method%>', tdTag,
          '<span class="wd3"><%=result[i].piece%>', tdTag,
          '<span class="wd5"><%=result[i].amount%>', tdTag,
          '<span class="wd4<%=result[i].status|Q.statusCls%>"><%=result[i].status%>', tdTag,
          '<span class="wd3"><%=result[i].istrace|Q.istraceCh%>', tdTag,
          '</li><% } %>'
        ].join('');

        $(list).html(tmpl.apply(this, ['list_recency', recencyTpl, d]));

        if ($("#lottery .recency").is(':hidden')) {
          $("#lottery .recency").slideDown();
        }
      } else {
        $(list).empty();
      }

      // 点击弹出历史记录详情
      $(list).off('click').on('click', 'li', function(evt) {
        evt.preventDefault();

        Lottery.popDetail($(this).attr('data-istrace'), {
          'orderId': $(this).attr('data-id')
        });
      });
    });
  },
  popDetail: function(istrace, p) {
    var me = this;

    var html = '<table><tbody>';
    var detail = dialog({
      id: 'recency-details',
      skin: 'sobet recency-pop recency-pop-h',
      title: '投注详细',
      fixed: true,
      onshow: function() {
        var that = this;
        if (parseInt(istrace, 10) === 1) {
          me.chkTraceDetail(p, that, detail);
        }
      }
    });

    me.queryRecencyDetail(detail, detail, html, p);
  },
  chkTraceDetail: function(p, that, pop) {
    var me = this;

    Api.getTrace(p, function(d) {
      d = d.result;

      //切换追号详情
      var traceTableHorizontal = [
        '<table class="traceTable traceHTable"><tbody>',
        '<tr>',
        '<th>追号编号：</th>',
        '<td>', d.traceId, '</td>',
        '<td rowspan="18" class="fixtrace">',
        '<ul class="traceInner"></ul>',
        '<div class="tracePager popdetails-page"></div>',
        '<div class="cancelTrace"><a class="hand disabled" name="', d.traceId, '">追号终止</a></div>',
        '</td></tr>',
        '<tr><th>游戏用户：</th><td>', User.nick, '</td></tr>',
        '<tr><th>追号时间：</th><td>', d.createTime, '</td></tr>',
        '<tr><th>彩种：</th><td>', Q.nameLottery(d.lottery), '</td></tr>',
        '<tr><th>追号内容：</th><td><em class="desc">', me.descFormat(d.code, d.method), '</em></td></tr>',
        '<tr><th>玩法：</th><td>', Q.getMethodName(d.method, d.lottery), '</td></tr>',
        '<tr><th>追号模式：</th><td>', Q.traceType(d.traceType), '</td></tr>',
        '<tr><th>开始期号：</th><td>', d.start, '</td></tr>',
        '<tr><th>奖金模式：</th><td>', d.odds, '</td></tr>',
        '<tr><th>模式：</th><td>', Q.modeName(d.perAmount), '</td></tr>',
        '<tr><th>追号期数：</th><td>', d.issues.length, '</td></tr>',
        '<tr><th>追号总金额：</th><td>¥', d.totalMoney, '</td></tr>',
        '<tr><th>完成期数：</th><td>', d.finishCount, '</td></tr>',
        '<tr><th>完成金额：</th><td>¥', d.finishMoney, '</td></tr>',
        '<tr><th>取消期数：</th><td>', d.cancelCount, '</td></tr>',
        '<tr><th>取消金额：</th><td>¥', d.cancelMoney, '</td></tr>',
        '<tr><th>追号状态：</th><td>', d.status, '</td></tr>',
        '<th>&nbsp;&nbsp;中奖后终止：</th><td>', Q.traceChs(d.winStop), '</td></tr>',
        '</tbody></table><div class="traceInnerDetails"></div>'
      ].join('');

      var trace_tpl = ['<li class="traceHead"><span><input type="checkbox" class="chkall hand">奖期</span><em>追号倍数</em><em>追号状态</em><em>注单详情</em></li>',
        '<% for ( var i = 0; i < issues.length; i++ ) { %>', '<li id="<%=issues[i].orderId%>">',
        '<span><input type="checkbox" rel="<%=issues[i].orderId%>" class="hand<%=issues[i].status|Q.traceClsDisable%>" <%=issues[i].orderId|Q.traceDisable%> name="<%=issues[i].issue%>" <%=issues[i].status|Q.tracestatusDisable%>><%=issues[i].issue%></span>',
        '<em><%=issues[i].count%></em>',
        '<em><label><%=issues[i].status|Q.statusCh%></label></em>',
        '<em><%=issues[i].orderId|Q.checkDetailByStatus,issues[i].status%></em>',
        '</li><% } %>'
      ].join('');

      if ($(that.node).find('.ui-dialog-content table.traceTable').size() == 0) {
        if ($(that.node).find('.ui-dialog-content table:eq(0)').length > 0) {
          $(that.node).find('.ui-dialog-content table:eq(0)').after(traceTableHorizontal);
        } else {
          $(that.node).find('.ui-dialog-content').html(traceTableHorizontal);
          $(that.node).find('.ui-dialog-content > table.traceTable').show();
          pop.width(960).height('auto');
        }
        $(that.node).find('.ui-dialog-title').html('<em>追号详情</em> <a class="hand backInfo" rel="0">(返回)</a>');
      }

      $(that.node).find('a.traceview').unbind('click').click(function() {
        if ($(that.node).find('.ui-dialog-content table.traceTable').size() == 0) {
          $(that.node).find('.ui-dialog-content table:eq(0)').after(traceTable);
        } else {
          $(that.node).find('.ui-dialog-content table.traceTable').show();
          $(that.node).find('.ui-dialog-title a').show();
          pop.width(960).height('auto');
        }
        $(that.node).find('.ui-dialog-content table:eq(0)').hide();
      });
      $(that.node).find('.traceInner').html(tmpl.apply(this, ['traceInner', trace_tpl, d]));

      $(that.node).find('.ui-dialog-title a').unbind('click').click(function() {
        if ($(this).attr('rel') == '0') {
          $(that.node).find('.ui-dialog-title em').html('投注详细');
          if ($(that.node).find('.traceInnerDetails').size() > 0) {
            if ($(that.node).find('.traceInnerDetails').html() != '') {
              $(that.node).find('.traceInnerDetails').show();
              $(that.node).find('.traceHTable').hide();
            } else {
              $(that.node).find('.ui-dialog-content table.traceTable').hide();
              $(that.node).find('.ui-dialog-content table:eq(0)').show();
            }
          } else {
            $(that.node).find('.ui-dialog-content table.traceTable').hide();
            $(that.node).find('.ui-dialog-content table:eq(0)').show();
          }
          $(that.node).find('.ui-dialog-title a').hide();
          pop.width(640).height('auto');
        } else {
          $(that.node).find('.ui-dialog-title em').html('追号详情');
          $(that.node).find('.ui-dialog-content table.traceTable').show();
          $(that.node).find('.ui-dialog-content table:eq(0),.ui-dialog-content div.traceInnerDetails').hide();
          $(that.node).find('.ui-dialog-title a').attr('rel', '0');
          pop.width(960).height('auto');
        }
      });

      //追号明细列表前端分页
      var tracePageSize = 10;
      var totalTrace = d.issues.length;
      if (totalTrace > tracePageSize && $(that.node).find('.tracePager').html() == '') {
        $(that.node).find('.traceInner li:gt(' + tracePageSize + ')').hide();
        me.queryTracePage(1, that, tracePageSize, totalTrace);
      } else {
        var startIndex = (parseInt($(that.node).find('.tracePager a.on').attr('page'), 10) - 1) * tracePageSize;
        var endIndex = startIndex + tracePageSize - 1;
        if (isNaN(startIndex)) {
          startIndex = 0;
        }
        $(that.node).find('.traceInner li:visible:not(.traceHead)').hide();
        $(that.node).find('.traceInner li:gt(' + startIndex + '):lt(' + tracePageSize + ')').show();
      }

      //追号明细详情
      $(that.node).find('a.traceDetails').attr('rel', $(pop.node).find('div.ui-dialog-content').height());
      $(that.node).find('a.traceDetails').unbind('click').click(function() {
        var _p = {
          'orderId': $(this).attr('data-id')
        };
        var relheight = $(this).attr('rel');
        var innerhtml = '<table><tbody>';
        $(that.node).find('.ui-dialog-content > table').hide();
        $(that.node).find('.ui-dialog-title em').html('投注详细');
        $(that.node).find('.ui-dialog-title a').attr('rel', '1').hide();
        pop.width(640).height(relheight);
        _p['relheight'] = relheight;
        me.queryRecencyDetail($(that.node).find('.ui-dialog-content div.traceInnerDetails'), pop, innerhtml, _p);
      });


      $(that.node).find('li:not(.traceHead) span > input:not(.disabled)').off('click').on('click', function(e) {
        if ($(that.node).find('.traceInner li:visible:not(.traceHead) span input:not(.disabled):checked').length > 0) {
          $(that.node).find('div.cancelTrace a').removeClass('disabled');
        } else {
          $(that.node).find('div.cancelTrace a').addClass('disabled');
        }

        //联动全选
        if ($(that.node).find('.traceInner li:visible:not(.traceHead) span input:not(.disabled):checked').length == $(that.node).find('.traceInner li:visible:not(.traceHead) span input:not(.disabled)').length) {
          $(that.node).find('li.traceHead input.chkall').prop('checked', true);
        } else {
          $(that.node).find('li.traceHead input.chkall').attr('checked', false);
        }
      });

      // 追号终止全选
      $(that.node).find('li.traceHead input.chkall').off('click').on('click', function(e) {
        if ($(that.node).find('.traceInner li:visible:not(.traceHead) span input:not(.disabled)').length == 0) {
          return false;
        }
        if ($(this).prop('checked')) {
          $(that.node).find('.traceInner li:visible:not(.traceHead) span input:not(:checked):not(.disabled)').prop('checked', true);
        } else {
          $(that.node).find('.traceInner li:visible:not(.traceHead) span input:not(.disabled):checked').prop('checked', false);
        }

        if ($(that.node).find('.traceInner li:visible:not(.traceHead) span input:not(.disabled):checked').length > 0) {
          $(that.node).find('div.cancelTrace a').removeClass('disabled');
        } else {
          $(that.node).find('div.cancelTrace a').addClass('disabled');
        }
      });

      // 追号终止事件
      $(that.node).find('div.cancelTrace a').off('click').on('click', function(e) {
        var btn = $(this);
        var cancel_p = {
          traceId: btn.attr('name')
        };
        cancel_p['issues'] = $(that.node).find('.traceInner li:visible:not(.traceHead) span input:checked').map(function() {
          return $(this).attr('name');
        }).get();


        if (btn.hasClass('disabled') || cancel_p['issues'].length == 0) {
          return false;
        }
        Api.cancelTrace(cancel_p, function(d) {
          if (d === -1) {
            $(".loginlnk").trigger("click");
            return false;
          }
          if (d && d.code && d.msg) {
            var tip = dialog({
              align: 'top',
              skin: 'tip',
              content: '追号终止成功'
            }).show(btn[0]);
            if (parseInt(d.code, 10) === 1) {
              $(that.node).find('div.cancelTrace a').addClass('disabled');
              me.chkTraceDetail(p, that, pop);
            }
            setTimeout(function() {
              tip.close().remove();
            }, 1000);
          }
        });
      });

      // 追号终止控制显示
      if ($(that.node).find('.traceInner li:not(.traceHead)').length == $(that.node).find('.traceInner li:not(.traceHead) input.disabled').length) {
        $(that.node).find('div.cancelTrace a').addClass('disabled');
      }

    });
  },
  queryTracePage: function(now, that, tracePageSize, totalTrace) {
    var me = this;
    $(that.node).find('.tracePager').html(Q.showPagination(now, tracePageSize, totalTrace, null)).show();

    $(that.node).find('.tracePager a').unbind('click').click(function() {
      $(that.node).find('.traceInner li.traceHead input.chkall').prop('checked', false);
      $(that.node).find('.traceInner li:gt(0) input').prop('checked', false);

      var startIndex = (parseInt($(this).attr('page'), 10) - 1) * tracePageSize;
      var endIndex = startIndex + tracePageSize - 1;
      $(that.node).find('.traceInner li:visible:not(.traceHead)').hide();
      $(that.node).find('.traceInner li:gt(' + startIndex + '):lt(' + tracePageSize + ')').show();
      me.queryTracePage(parseInt($(this).attr('page'), 10), that, tracePageSize, totalTrace);
    });
  },
  queryRecencyDetail: function(detail, pop, html, p) {
    var me = this;
    var tmp = [];
    var th = ['<th>注单编号：</th>',
      '<th>游戏用户：</th>',
      '<th>投单时间：</th>',
      '<th>彩种：</th>',
      '<th>玩法：</th>',
      '<th>期号：</th>',
      '<th>投注内容：</th>',
      '<th>奖金模式：</th>',
      '<th>倍数：</th>',
      '<th>模式：</th>',
      '<th>投注总金额：</th>',
      '<th>奖金：</th>',
      '<th>开奖号码：</th>',
      '<th>状态：</th>',
      '<tbody>'
    ];
    Api.getRecencyDetail(p, function(d) {
      if (d.result !== undefined) {
        d = d.result;

        tmp.push(d.orderId);
        tmp.push(d.username);
        tmp.push(d.orderTime);
        tmp.push(Q.nameLottery(d.lottery));
        tmp.push(Q.getMethodName(d.method, d.lottery) + Q.getPositionName(d.position || ''));
        if (parseInt(d.istrace, 10) === 1) {
          tmp.push('<em>' + d.issue + '</em><a class="traceview hand">(查看追号信息)</a>');
        } else {
          tmp.push('<em>' + d.issue + '</em>');
        }
        tmp.push('<em class="desc">' + me.descFormat(d.code, d.method) + '</em>');
        tmp.push(d.odds);
        tmp.push(d.count);
        tmp.push(Q.modeName(d.perAmount));
        tmp.push(d.amount);
        tmp.push(d.awardMoney);
        tmp.push(d.lotteryNumber);
        tmp.push(d.status);
        for (var i = 0; i < tmp.length; i++) {
          if (i === 0 && d.cancel !== undefined) {
            var cl = parseInt(d.cancel, 10);
            html += '<tr>' + th[i] + '<td><em>' + tmp[i] + '</em>';
            if (cl === 0 && d.isCurrentIssue === 1) {
              html += '<a href="javascript:;" data-id="' + tmp[i] + '" id="cancel_order" class="btnCancel">撤 单</a>';
            } else if (cl === 1) {
              html += '<a href="javascript:;" class="btnCancel disabled">个人撤单</a>';
            }
            html += '</td></tr>';
          } else {
            html += '<tr>' + th[i] + '<td>' + tmp[i] + '</td></tr>';
          }
        }
        html += '</tbody></table>';

        if (typeof detail.selector != 'undefined') {
          detail.html(html).show();
          if (detail.height() != parseInt(p['relheight'], 10)) {
            pop.height(detail.height());
          }

          detail.find('a.traceview').off('click').on('click', function(e) {
            pop.width(960).height('auto');
            $(pop.node).find('.ui-dialog-title a').attr('rel', '0').show();
            detail.hide();
            detail.prev().show();
          }).show();
        } else {
          detail.content(html);
          detail.width((p.width ? p.width : 640)).showModal();
          $(detail.node).find('a.traceview').off('click').on('click', function(e) {
            pop.width(960).height('auto');
            detail.hide();
            detail.prev().show();
          }).show();
        }

        var chkcancelbtn = $(detail.node).find('a#cancel_order');

        if (chkcancelbtn.length == 0) {
          chkcancelbtn = $(detail).find('a#cancel_order');
        }

        chkcancelbtn.off('click').on('click', function(e) {

          var btn = $(this);
          var _p = {
            orderId: btn.attr('data-id')
          };
          if (btn.hasClass('disabled')) {
            return false;
          }
          var pop_tip = dialog({
            title: '温馨提示',
            skin: 'confirm-again',
            content: '您确定要撤销' + me.issue + '期的这一注单吗？',
            button: [{
              id: 'cancle_ok',
              value: '确定',
              callback: function() {
                pop_tip.close().remove();
                btn.addClass('disabled');
                Api.cancelOrder(_p, function(res) {
                  if (res && res.code && res.msg) {
                    var tip = dialog({
                      align: 'right',
                      skin: 'tip',
                      content: res.msg
                    }).show(btn[0]);
                    if (parseInt(res.code, 10) === 0) {
                      btn.addClass('disabled').html('个人撤单');
                      me.updateRecency();

                      if($("#" + _p.orderId).length > 0) {
                        $("#" + _p.orderId).find('label').html('已取消');
                      }
                    }
                    setTimeout(function() {
                      tip.close().remove();
                    }, 2000);
                  }
                });
              }
            }, {
              id: 'cancle_cancel',
              skin: 'cancel',
              value: '取消'
            }]
          }).showModal();
        });
      }
    });
  },
  queryHistory: function() {
    var me = this;

    var pop = dialog({
      id: 'history_list',
      title: ' ',
      skin: 'sobet history-pop',
      width: 1070,
      height: 560,
      fixed: true
    });
    var tit = {
      'lottery': '<span class="wd1">投注时间</span><span class="wd5">彩种</span><span>玩法</span><span class="wd2">投注期号</span><span class="wd3">模式</span><span>投注内容</span><span class="wd4">倍数</span><span>投注金额</span><span>奖金</span><span class="wd4">状态</span><span>开奖号码</span><span class="wd3">追号</span>',
      'trace': '<span class="wd5">用户名</span><span class="wd1">追号时间</span><span class="wd5">彩种</span><span>玩法</span><span class="wd2">开始期数</span><span>投注内容</span><span>总金额</span><span>完成金额</span><span>取消金额</span><span class="wd3">中奖即停</span><span class="wd3">状态</span>'
    };
    var html = '<ul class="tab"><li data-type="lottery" class="on"><span>投注查询</span></li><li data-type="trace"><span>追号查询</span></li></ul>' +
      '<div class="filter"><label>时间:</label><input type="text" id="date_from" value="" readonly="readonly">' +
      '<label>至:</label><input type="text" id="date_end" value="" readonly="readonly">' +
      '<label>彩种:</label><select class="lotteryList" name=""><option value="">所有彩种</option></select>' +
      '<label>玩法:</label><select class="methodList" name=""><option value="">所有玩法</option></select>' +
      '<label>状态:</label><select class="status" name="">' +
      '<option value="">全部</option><option value="0">未开奖</option><option value="1">未中奖</option>' +
      '<option value="2">已派奖</option><option value="3">等待派奖</option><option value="4">个人撤单</option><option value="5">系统撤单</option></select>' +
      '<a href="javascript:;" class="query">查询</a></div>' +
      '<div class="list"><div class="tit"></div>' +
      '<div class="box"><ul></ul>' +
      '<div class="grid-total"><label>合计</label><span class="grid-amount">¥0</span><span class="grid-award">¥0</span></div>' +
      '<div class="pagging"></div></div>' +
      '<div class="box-trace hide"><ul></ul>' +
      '<div class="grid-total"><label>合计</label><span class="grid-amount">¥0</span><span class="grid-finish">¥0</span><span class="grid-cancel">¥0</span></div>' +
      '<div class="pagging"></div></div></div>';

    var option_tpl = [
      '<option value="" selected="selected">所有彩种</option>',
      '<% for ( var i = 0; i < list.length; i++ ) { %>',
      '<option value="<%=list[i].lottery%>"><%=list[i].lottery|Q.lotteryChs%></option>',
      '<% } %>'
    ].join('');

    var moption_tpl = [
      '<option value="" selected="selected">所有玩法</option>',
      '<% for ( var i = 0; i < items.length; i++ ) { %>',
      '<option value="<%=items[i].method%>"><%=items[i].method|Q.getMethodName,items[i].lottery%></option>',
      '<% } %>'
    ].join('');

    Api.getCommon('getHistoryParams', {}, function(p) {
      if (p.result === undefined && parseInt(p, 10) === -1) {
        // 判断用户中心登录[此查询类接口需要登录]
        User.chkLogin(function() {
          me.queryHistory();
        });
        return false;
      }
      p = p.result;

      pop.content(html);
      pop.addEventListener('show', function() {
        var $node = $(this.node);
        var $tab = $node.find('.tab');
        var $from = $node.find("#date_from");
        var $end = $node.find("#date_end");
        var $lts = $node.find('.filter select.lotteryList');
        var $mds = $node.find('.filter select.methodList');
        var $query = $node.find('.filter a.query');
        var $tit = $node.find('.list .tit');

        $from.datetimepicker({
          id: 'dp_from',
          lang: 'zh',
          value: '-1970/01/01',
          minDate: '-1970/03/31',
          maxDate: '+1970/01/01',
          step: 1,
          type: ':first'
        });
        $end.datetimepicker({
          id: 'dp_end',
          lang: 'zh',
          value: '+1970/01/01',
          minDate: '-1970/03/31',
          maxDate: '+1970/01/01',
          step: 1,
          type: ':last'
        });

        $tit.html(tit['lottery']);

        // 筛选初始化
        var allMethod = {};
        var getList = function(type) {
          var list = p[type];
          for (i = 0; i < list.length; i++) {
            allMethod[list[i].lottery] = {
              'items': list[i].methods.map(function(n) {
                return {
                  method: n,
                  lottery: list[i].lottery
                }
              })
            };
          }
          return {
            'list': list
          };
        };
        $lts.html(tmpl.apply(this, ['gnav_option', option_tpl, getList('lotteryList')]));

        $node.find('.tab').off('click').on('click', 'li', function(evt) {
          evt.preventDefault();

          $(this).addClass('on').siblings('li').removeClass('on');
          if ($(this).attr('data-type') === 'trace') {
            $tit.html(tit['trace']);
            $node.find('.box').hide().siblings('.box-trace').show();
            $node.find('.filter .status').hide().prev('label').hide();
            $node.find('.list').attr('class', 'list trace');
            $lts.html(tmpl.apply(this, ['gnav_option', option_tpl, getList('lotteryTraceList')]));
          } else {
            $tit.html(tit['lottery']);
            $node.find('.box-trace').hide().siblings('.box').show();
            $node.find('.filter .status').show().prev('label').show();
            $node.find('.list').removeClass('trace');
            $lts.html(tmpl.apply(this, ['gnav_option', option_tpl, getList('lotteryList')]));
          }
          $lts.trigger('change');
        });

        $lts.on('change', function() {
          if ($(this).val() != '' && allMethod[$(this).val()].items != null) {
            $mds.removeAttr('disabled').html(tmpl.apply(this, ['gnav_moption', moption_tpl, allMethod[$(this).val()]]));
          } else {
            if ($(this).val() === '') {
              $mds.attr('disabled', 'disabled').html('<option value="" selected="selected">所有玩法</option>');
            } else {
              $mds.html('<option value="" selected="selected">所有玩法</option>');
            }
          }
        });

        $mds.attr('disabled', 'disabled').html('<option value="" selected="selected">所有玩法</option>');
        $query.unbind('click').click(function() {
          var data = {
            pageSize: 10,
            lottery: $lts.val(),
            method: $mds.val()
          };
          if ($from.val() !== '') {
            data.orderStartTime = $from.val();
          }
          if ($end.val() !== '') {
            data.orderEndTime = $end.val();
          }
          $('#game a.go-history').data('rel', 'lottery');
          Cookies.set('rptyp', 'lottery');

          if ($tab.find('li.on').attr('data-type') === 'trace') {
            Lottery.dataHistoryTrace($node, data, 'lottery');
          } else {
            data.status = $node.find('.filter .status').val();
            Lottery.dataHistory($node, data, tit, 'lottery');
          }
        });


        if (typeof Cookies.get('rptyp') !== 'undefined') {
          $query.trigger('click');
        }
        if (typeof $('#game a.go-history').data('rel') !== 'undefined') {
          $query.trigger('click');
        }

        // 点击弹出历史记录详情
        $node.find('.list .box ul:eq(0)').off('click').on('click', 'li', function(evt) {
          evt.preventDefault();

          var p = {
            'orderId': $(this).attr('data-id')
          };
          if ($(this).parent('ul').attr('type') === 'lottery') {
            Lottery.popDetail($(this).attr('data-istrace'), p);
          }
        });

        // 追号查询点击弹出历史记录详情
        $node.find('.list .box-trace ul:eq(0)').off('click').on('click', 'li', function(evt) {
          evt.preventDefault();

          var p = {
            'traceId': $(this).attr('data-id')
          };
          if ($(this).parent('ul').attr('type') === 'lottery') {
            var pop_lt = dialog({
              skin: 'sobet recency-pop recency-pop-h',
              title: '追号详情',
              fixed: true,
              onshow: function() {
                var that = this;
                me.chkTraceDetail(p, that, that);
              }
            });
            pop_lt.showModal();
          }
        });
      });
      pop.showModal();
    });
  },
  dataHistory: function($el, params, tit, type) {
    var lottery_tpl = ['<% for ( var i = 0; i < his_orders.length; i++ ) { %>',
      '<li data-id="<%=his_orders[i].orderItemId%>" data-istrace="<%=his_orders[i].istrace%>" class="<%=i|Q.oddEven%>">',
      '<span class="wd1"><%=his_orders[i].orderTime%></span>',
      '<span class="wd5"><%=his_orders[i].lottery|Q.nameLottery%></span>',
      '<span title="<%=his_orders[i].method|Q.getMethodName,his_orders[i].lottery%>"><%=his_orders[i].method|Q.getMethodName,his_orders[i].lottery%></span>',
      '<span class="wd2"><%=his_orders[i].issue%></span>',
      '<span class="wd3"><%=his_orders[i].perAmount|Q.modeName%></span>',
      '<span class="grid-toggle" alt="号码详情："><div class="wrapbox"><em alt="<%=his_orders[i].code|Lottery.descFormat,his_orders[i].method%>"><%=his_orders[i].code|Lottery.descFormat,his_orders[i].method%></em></div></span>',
      '<span class="wd4"><%=his_orders[i].count%></span>',
      '<span>¥<%=his_orders[i].amount%></span>',
      '<span>¥<%=his_orders[i].awardMoney%></span>',
      '<span class="wd4"><%=his_orders[i].status|Q.statusChs%></span>',
      '<span alt="开奖号码："><%=his_orders[i].winningNumber%></span>',
      '<span class="wd3"><%=his_orders[i].istrace|Q.istraceCh%></span>',
      '</li><% } %>'
    ].join('');

    $el.find('.box .pagging').html('');

    Api.getCommon('getHistory', params, function(d) {
      if (d === -1) {
        $(".loginlnk").trigger("click");
        return false;
      }
      if (d.result !== undefined) {
        d = d.result;

        if (d.his_orders.length == 0) {
          $el.find('.list .box ul').html('<div class="blank">暂无数据</div>');
          $el.find('.list .box ul div.blank').height(200);
          $el.find('.list .box .grid-total .grid-amount').html('');
          $el.find('.list .box .grid-total .grid-award').html('');
          return false;
        }
        //模板参数
        var paramPair = {
          'lottery': ['gnav_lottery', lottery_tpl, d]
        };

        $el.find('.list .tit').html(tit[type]);
        //数据绑定
        $el.find('.list .box ul').html(tmpl.apply(this, paramPair[type])).attr('type', type);

        $el.find('.list .box ul li span.grid-toggle').each(function(i, el) {
          if ($(el).find('em').attr('alt').length > 10) {
            $(el).addClass('grid-hover').find('em').html('<a href="javascript:;" class="hand viewfull">查看全部</a>');
          }
        });

        //合计
        $el.find('.list .box .grid-total .grid-amount').html('¥' + Q.doubleFormat(d.dealMoneyCount));
        $el.find('.list .box .grid-total .grid-award').html('¥' + Q.doubleFormat(d.awardMoneyCount));

        //投注内容点击弹出提示
        $('.box .grid-hover').unbind('click').click(function() {
          var tip = dialog({
            skin: 'tip',
            align: 'top',
            content: $(this).attr('alt') + '<div class="all-code">' + $(this).find('em').attr('alt') + '</div>',
            quickClose: true // 点击空白处快速关闭
          });
          tip.show($(this)[0]);
          return false;
        });

        //翻页
        $el.find('.box .pagging').html(Q.showPagination(d.currPage, d.pageSize, d.totalItem, d.totalPage));
        $el.find('.box .pagging a').unbind('click').click(function() {
          params.currPage = $(this).attr('page');
          Lottery.dataHistory($el, params, tit, type);
        });
      }
    });
  },
  dataHistoryTrace: function($el, p, type) {
    var trace_tpl = [
      '<% for ( var i = 0; i < list.length; i++ ) { %>',
      '<li data-id="<%=list[i].traceId%>" class="<%=list[i].buyType|Q.itemTyp%> <%=i|Q.oddEven%>">',
      '<span class="wd5"><%=list[i].buyType|Q.getIcon%><%=list[i].userName%></span>',
      '<span class="wd1"><%=list[i].createTime%></span>',
      '<span class="wd5"><%=list[i].lottery|Q.nameLottery%></span>',
      '<span><%=list[i].method|Q.getMethodName,list[i].lottery%></span>',
      '<span class="wd2"><%=list[i].start%></span>',
      '<span class="grid-toggle" alt="号码详情："><div class="wrapbox"><em alt="<%=list[i].code|Lottery.descFormat,list[i].method%>"><%=list[i].code|Lottery.descFormat,list[i].method%></em></div></span>',
      '<span>¥<%=list[i].totalMoney%></span>',
      '<span>¥<%=list[i].finishMoney%></span>',
      '<span>¥<%=list[i].cancelMoney%></span>',
      '<span class="wd3"><%=list[i].winStop|Q.istraceCh%></span>',
      '<span class="wd3"><%=list[i].status%></span>',
      '</li><% } %>'
    ].join('');

    $el.find('.box-trace .pagging').html('');

    Api.getCommon('getTraces', p, function(d) {
      if (d === -1) {
        $(".loginlnk").trigger("click");
        return false;
      }
      if (d.result !== undefined) {
        d = d.result;

        if (d.list.length === 0) {
          $el.find('.list .box-trace ul').empty();
          $el.find('.list .box-trace .grid-total .grid-amount').html('￥0');
          $el.find('.list .box-trace .grid-total .grid-finish').html('￥0');
          $el.find('.list .box-trace .grid-total .grid-cancel').html('￥0');
          return false;
        }

        //数据绑定
        $el.find('.list .box-trace ul').html(tmpl.apply(this, ['gnav_trace', trace_tpl, d])).attr('type', type);

        $el.find('.list').addClass('trace');

        $el.find('.list .box-trace ul li span.grid-toggle').each(function(i, el) {
          if ($(el).find('em').attr('alt').length > 10) {
            $(el).addClass('grid-hover').find('em').html('<a href="javascript:;" class="hand viewfull">查看全部</a>');
          }
        });

        //合计
        $el.find('.list .box-trace .grid-total .grid-amount').html('¥' + Q.doubleFormat(d.totalMoney));
        $el.find('.list .box-trace .grid-total .grid-finish').html('¥' + Q.doubleFormat(d.finishMoney));
        $el.find('.list .box-trace .grid-total .grid-cancel').html('¥' + Q.doubleFormat(d.cancelMoney));

        //投注内容点击弹出提示
        $('.grid-hover').unbind('click').click(function() {
          var tip = dialog({
            skin: 'tip',
            align: 'top',
            content: $(this).attr('alt') + '<div class="all-code">' + $(this).find('em').attr('alt') + '</div>',
            quickClose: true // 点击空白处快速关闭
          });
          tip.show($(this)[0]);
          return false;
        });

        // 接口缺少字段  暂时这样处理
        d.totalItem = d.pageSize * d.totalPage;

        //翻页
        if (d.list.length > 0) {
          $el.find('.box-trace .pagging').html(Q.showPagination(d.currPage, d.pageSize, d.totalItem, d.totalPage));
        } else {
          $el.find('.list .box-trace ul').html('<div class="blank">暂无数据</div>');
          $el.find('.list .box-trace ul div.blank').height(200);
          $el.find('.list .box-trace .grid-total .grid-amount,.list .box-trace .grid-total .grid-finish,.list .box-trace .grid-total .grid-cancel').html('');
        }

        $el.find('.box-trace .pagging a').unbind('click').click(function() {
          p.currPage = $(this).attr('page');
          Lottery.dataHistoryTrace($el, p, type);
        });
      }
    });
  }
};

// 数学公式
// 阶乘 n!=n*(n-1)!
Math.factorial = function(n) {
  return n <= 0 ? 1 : n * Math.factorial(n - 1);
};
// 组合combination: m个数中取出n个不同的数
Math.combination = function(m, n) {
  var f = Math.factorial;
  return m < n ? 0 : f(m) / (f(n) * f(m - n));
};
// 求两个数组的交集([1, 2, 3], [3, 4, 5]) →  [3]
Math.intersection = function(a, b) {
  return a.filter(function(n) {
    return b.indexOf(n) != -1;
  });
};
// 求两个数组的无重复并集([1, 2], [2, 3]) → [1,2,3]
Math.union = function(a, b) {
  return (a.concat(b)).filter(function(item, pos, self) {
    return self.indexOf(item) === pos;
  });
};
// 求a数组相对于b数组的补集([1, 2, 3], [3, 4, 5]) →  [1, 2]
Math.difference = function(a, b) {
  return a.filter(function(n) {
    return b.indexOf(n) === -1;
  });
};

// 11选5的n中n的算注数公式
Math.nzn = function(s, n) {
  var tmp = 1;
  for (var i = 0; i < n; i++) {
    tmp *= (s - i) / (i + 1);
  }
  return tmp;
}

// 获取精确度 0.1 返回 1  0.01 返回 2
Math.precision = function(n) {
  var n = (n + '').split('.')[1];
  return n ? n.length : 0;
};
/* jshint devel:true */
var Trace = Trace || {};

Trace = {
  lottery: null,
  market: null,
  queueDict: {
    'lottery': 0
  },
  tracetab: [],
  tracechange: [],
  tracebtn: [],
  tracelist: {},
  orders: [],
  submitbtn: [],
  dish: 0,
  maxtimes: 99999,
  cashier: 0,
  minratelimite:1,
  counter: {
    'lottery': 0
  },
  traceitems: {
    items: []
  },
  submitBtn: {
    'lottery': '#lottery > div.orders:eq(0) > div.trace-data:eq(0)'
  },
  genButton: {
    'lottery': '#lgenTrace'
  },
  traceTpl: function() {
    var me = this;
    //细节模板
    var traceTpl = [
      '<div class="trace-fixed">',
      '<span class="chk"><label for="traceall" class="chkall"><input type="checkbox" id="traceall" class="nochk chkall"/>全选</label></span>',
      '<span class="wide">期数</span>',
      '<span class="medium">倍数</span>', '<span>追号金额</span>',
      '<span class="wide">日期</span>',
      '</div><ul class="trace-items">',
      '<% for ( var i = 0; i < items.length; i++ ) { %>',
      '<li class="<%=i|Q.oddEven%><%=items[i].cls%><%=items[i].issue|Q.itemNextDay%>">',
      '<span class="chk"><%=(i+1)%>.<input type="checkbox" class="nochk" index="<%=i%>"/></span>',
      '<span class="wide issue"><%=items[i].issue%></span>',
      '<span class="medium"><input type="text" index="<%=i%>" disabled="disabled" onmouseover="Trace.bindNumber(this);" class="spinner times medium" min="1" max="' + me.maxtimes + '" step="1" value="0" data-issue="<%=items[i].issue%>" data-index="<%=i%>" data-v="<%=i|Q.initTraceList%>" data-same="<%=i|Q.initSameTraceList%>" data-rate="0"></span>',
      '<span>¥<em class="traceM" data-index="<%=(i+1)%>">0.00<%=items[i].amount%></em></span>',
      '<span class="wide"><%=items[i].time%></span>',
      '</li><% } %>', '</ul>'
    ].join('');
    return traceTpl;
  },
  //生成追号启用区域
  outTraceBox: function(type) {
    var traceHtml = ['<div id="trace-box-', type, '" class="trace-box">',
      '<label class="hand"><input type="checkbox" name="autoTrace" data-type="', type, '" value="0" /><span>追号</span></label>',
      '<label class="hand disabled"><input type="checkbox" name="autoStop" disabled="disabled" value="0" checked="checked"/><span alt="中奖后停追">追中即停</span></label>',
      '</div>'
    ].join('');
    return traceHtml;
  },
  //生成追号数据区域
  outTraceData: function(index, type) {
    var me = this;
    var traceTab = {
      '0': [
        '<div id="trace-data-', type, '" class="trace-data">',
        '<ul class="trace-tab">',
        '<li data-type="double" class="on" data-no="3" name="', type, '"><span>翻倍追号</span></li>',
        '<li data-type="same" data-no="2" name="', type, '"><span>同倍追号</span></li>',
        '<li data-type="rate" data-no="1" name="', type, '"><span>利润率追号</span></li>',
        '</ul>',
        '<a id="lgenTrace" href="javascript:;" name="rate" rel="lottery">生成追号</a>',
        '<div id="trace-rate" class="trace-rate trace-change trace-hidden" name="lottery">',
        '<ul class="trace-details">',
        '<li>追号期数<select class="lotteryList" name=""><option value="-1">全部</option><option value="5" selected="selected">5期</option><option value="10">10期</option><option value="20">20期</option><option value="25">25期</option></select></li>',
        '<li class="totalIssue">总期数<em>0</em></li>',
        '<li class="totalTraceMoney">追号总金额 ¥<em>-</em>元</li>',
        '</ul><ul class="trace-details"><li>最低收益率<input type="text" name="startRate" class="spinner tracemsg" min="'+me.minratelimite+'" step="1" max="100" value="'+me.minratelimite+'"/>%</li>',
        '<li>起始倍数<input type="text" name="startTimes" class="spinner biggerw tracemsg" min="1" step="1" max="99999" value="1"/></li>',
        '<li>追号期数<input type="text" name="initTotals" class="spinner" min="1" max="120" step="1" value="5"/></li>',
        '</ul>',
        '</div>',
        '<div id="trace-same" class="trace-same trace-change trace-hidden" name="lottery">',
        '<ul class="trace-details">',
        '<li>追号期数<select class="lotteryList" name=""><option value="-1">全部</option><option value="5" selected="selected">5期</option><option value="10">10期</option><option value="20">20期</option><option value="25">25期</option></select></li>',
        '<li class="totalIssue">总期数<em>0</em></li>',
        '<li class="totalTraceMoney">追号总金额 ¥<em>-</em>元</li>',
        '</ul><ul class="trace-details"><li>起始倍数<input type="text" name="startTimes" class="spinner biggerw tracemsg" min="1" max="99999" step="1" value="1"/></li>',
        '<li>追号期数<input type="text" name="initTotals" class="spinner" min="1" max="120" step="1" value="5"/></li>',
        '</ul>', , '</div>',
        '<div id="trace-double" class="trace-double trace-change" name="lottery">',
        '<ul class="trace-details">',
        '<li>追号期数<select class="lotteryList" name=""><option value="-1">全部</option><option value="5" selected="selected">5期</option><option value="10">10期</option><option value="20">20期</option><option value="25">25期</option></select></li>',
        '<li class="totalIssue">总期数<em>0</em></li>',
        '<li class="totalTraceMoney">追号总金额 ¥<em>-</em>元</li>',
        '</ul><ul class="trace-details"><li>隔<input type="text" name="gaps" class="spinner tracemsg" min="1" max="120" step="1" value="2"/>期</li>',
        '<li>倍×<input type="text" name="doubles" class="spinner tracemsg" min="1" max="9999" step="1" value="2"/></li>',
        '<li>追号期数<input type="text" name="initTotals" class="spinner" min="1" max="120" step="1" value="5"/></li>',
        '</ul>', , '</div>',
        '<div class="trace-list trace-hidden"></div>', '<div class="trace-otherlist trace-hidden"></div>', '<div class="trace-otherlist trace-hidden"></div>',
        '</div>'
      ].join('')
    };

    return traceTab[index];
  },
  //初始化
  init: function() {
    var me = this;
    var opt = arguments[0];
    
    //1-有追号  0-没有追号 
    if (opt.lottery === '0') {
      return false;
    }
    var switchTrace = {
      '1': '#lottery .orders .bottom a.submit'
    };
    var traceBoxCount = 1;

    //追号面板初始化
    $(switchTrace[[opt.lottery]]).map(function(k, el) {
      //初始化面板
      var queue = ['lottery'];
      var traceinit = [3, 4];
      var bottom = $(el).closest('.bottom');
      //$(el).before(me.outTraceBox(queue[k]));
      bottom.before(me.outTraceData(k, queue[k]));
      //初始化INPUT增减控件
      me[queue[k]] = $('#trace-data-' + queue[k]);
      me[queue[k]].find('.trace-change input[type="text"].spinner').inputNumber();
      //缓存生成追号按钮dom
      var tracebutton = me[queue[k]].find(me.genButton[queue[k]]);
      var tracechange = me[queue[k]].find('.trace-change');
      var tracetabs = me[queue[k]].find('.trace-tab>li');
      var submitbtn = me[queue[k]].parent().find('div.bottom a.submit');
      var noworders = $('#' + queue[k] + '>div.orders:eq(0)');
      
      tracebutton.data('no', traceinit[k]);
      //生成追号按钮
      me.tracebtn.push(tracebutton);
      //追号方式切换按钮
      me.tracetab.push(tracetabs);
      //追号方式内容tab
      me.tracechange.push(tracechange);
      //追号方式内容tab
      me.orders.push(noworders);
      //追号方式内容tab
      me.submitbtn.push(submitbtn);
    });

    // 追号期数数据列表

    // 发起追号复选框
    $('.trace-box>label').unbind('click').click(function() {
    	var checkbox = $(this).prev('input');
    	var icon = $(this).find('i');
    	
    	checkbox.click();
    	if(checkbox.is(":checked")){
    		icon.addClass('on');
    	}else{
    		icon.removeClass('on');
    	}
    });
    	
    $('.trace-box input[name="autoTrace"]').unbind('click').click(function() {
        if ($(this).hasClass('disabled')) {
          return false;
        }
        var $ordersList = $('#' + Lottery.type + ' .orders .list > ul li');
        var tip = dialog({
          id: 'trace-tip',
          align: 'top',
          skin: 'tip',
          content: '请先选号'
        });
        if ($ordersList.length === 0 && $('#trace-data-lottery').is(':hidden')) {
          tip.show($(this).next()[0]);
          setTimeout(function() {
            tip.close().remove();
          }, 600);
        }
        var traceTyp = $(this).data('type');
        var indexTyp = me.queueDict;
        var nowTraceBox = $('#trace-data-' + traceTyp);
        var submitBtn = me.submitbtn[indexTyp[traceTyp]];
        var traceBtn = me.tracebtn[indexTyp[traceTyp]];
        //追中即停
        var autoStopTrace = $(this).nextAll('label.trace-autoStop');

        if (autoStopTrace.hasClass('disabled')) {
          //显示追号
          if (submitBtn.hasClass('disabled')) {
            return false;
          }
          autoStopTrace.removeClass('disabled');
          autoStopTrace.prev('input').removeAttr('disabled').attr('checked', 'checked');

          //填充追号期数
          me.initDetails(traceBtn, nowTraceBox, 1, me.traceitems, true);

          if (typeof traceBtn.data('sel') !== 'undefined') {
            me.prepareSubmit(nowTraceBox, traceBtn, traceTyp, traceBtn.data('sel'));
          }
          $('#lottery .orders .bottom').addClass('tracing');

        } else {
          //隐藏追号
          autoStopTrace.addClass('disabled');
          autoStopTrace.prev('input').attr('disabled', 'disabled');
          nowTraceBox.hide();
          $('.tracing').removeClass('tracing');
          //清空保存的状态
          //me.resetTraceBox(nowTrace.parent());
        }
    });

    // 追号面板初始化切换
    $('.trace-data').off('click').on('click', 'ul.trace-tab li,a', function(evt) {
      // TAB切换
      if (evt.target.tagName !== 'A') {
        var thistab = $(this);
        var nowTyp = thistab.attr('name');
        var nowTab = thistab.data('type');
        var indexTyp = me.queueDict[nowTyp];
        var nowData = $('#trace-data-' + nowTyp);
        var alltabs = me.tracetab[indexTyp];
        var allchange = me.tracechange[indexTyp];
        var tracebtn = me.tracebtn[indexTyp];
        var tracelist = me.tracelist[nowTyp];
        if ($(this).hasClass('disabled')) {
          if ($(this).data('type') == 'rate' && me.chkRateTrace()) {
            me.showConfirmTip('仅支持复式及对应的单式选号投注可以同时使用利润率追号！', tracebtn);
          }
          return false;
        }
        alltabs.removeClass('on');
        thistab.addClass('on');
        allchange.addClass('trace-hidden');
        allchange.filter('#trace-' + nowTab).removeClass('trace-hidden');
        var nowSel = tracebtn.data('sel');
        var nowNo = $(this).data('no');
        tracebtn.data('no', nowNo);
        //交易市场TAB颜色切换
        if (parseInt(nowNo, 10) > 3) {
          if (nowTab == 'salesame') {
            alltabs.filter('li.tracebuy').removeClass('tracebuy');
            thistab.parent().removeClass('tracebuy');
          } else {
            thistab.parent().addClass('tracebuy');
            thistab.addClass('tracebuy');
          }
        }
        //初始化金额汇总
        me.cashier = 0;
        me.counter[nowTyp] = 0;
        //恢复select
        allchange.find('select.lotteryList').val(5);
        //同步全选
        var syncchkall = tracelist.prev().find('input.chkall');
        syncchkall.attr('checked', false).addClass('nochk');

        //第一次清空选择的追号
        if (typeof nowSel != 'undefined') {
          nowData.find('.trace-list').html(nowData.find('.trace-list').data('init'));
          me.tracelist[nowTyp] = nowData.find('.trace-list>ul.trace-items');
          //绑定事件
          me.bindEvt(tracelist, tracebtn, nowTyp);
          if (typeof nowSel[$(this).data('no')] != 'undefined' && nowSel[$(this).data('no')].length > 0) {
            me.counter[nowTyp] = nowSel[$(this).data('no')].length;
          } else {
            me.counter[nowTyp] = 0;
          }
        } else {
          me.counter[nowTyp] = 0;
        }

        me.prepareSubmit(nowData, tracebtn, nowTyp, nowSel);
        //生成追号
      } else {
        var genBtn = $(this);
        var nowNo = genBtn.data('no');
        var indexTyp = me.queueDict[Lottery.type];
        var nowtab = me.tracetab[indexTyp];
        var nowTraceBox = $('#trace-data-' + Lottery.type);
        var tabonTyp = nowtab.filter('li.on').data('type');
        var nowchg = me.tracechange[indexTyp].filter('#trace-' + tabonTyp);
        var traceBtn = me.tracebtn[indexTyp];
        var rateinsert = nowchg.find('input[name=startRate]');
        
        //单倍利润为负，利润率小于[minratelimite]%时无法追号
        if (genBtn.data('rate') <= me.minratelimite && nowNo == 1) {
          var tip = dialog({
            id: 'tracerateno',
            align: 'top',
            skin: 'tip',
            content: '利润不足'+me.minratelimite+'%，无法选择利润率追号！',
            onshow: function() {
              var that = this;
              setTimeout(function() {
                that.close().remove();
              }, 2000);
              return false;
            }
          }).show(genBtn[0]);
          return false;
        }
        //利润率小于所填利润率时无法追号
        if (genBtn.data('rate') < rateinsert.val() && nowNo == 1) {
          var tip = dialog({
            id: 'tracerateno',
            align: 'top',
            skin: 'tip',
            content: '当前利润率为'+Q.doubleFormat(genBtn.data('rate'))+'%，利润不足'+rateinsert.val()+'%，无法按此利润率追号！',
            onshow: function() {
              var that = this;
              //恢复错误利润率之前的合法利润率
              if (typeof nowtab.filter('li.on').data('vr') !== 'undefined') {
                rateinsert.val(nowtab.filter('li.on').data('vr'));  
              }
              
              setTimeout(function() {
                that.close().remove();
              }, 3000);
              return false;
            }
          }).show(genBtn[0]);
          return false;
        }

        var traceMsg = nowchg.find('.tracemsg');
        var totalTrace = nowchg.find('input[name=initTotals]').val();

        var alltraceMsg = traceMsg.map(function() {
          var $li = $(this).parents('li');
          return $li.html().replace(/<(.*?)>/g, '___').replace(/\r\n/g, '').replace(/(_)\1+/g, ' ' + $(this).val());
        }).get();

        var traceAgainMsg = {
          '1': '<h3>利润率追号：</h3><div class="list listmsg">' + alltraceMsg.join('，') + '<br/>确定要追号 ' + totalTrace + ' 期？</div>',
          '2': '<h3>同倍追号：</h3><div class="list listmsg">' + alltraceMsg.join('，') + '<br/>确定要追号 ' + totalTrace + ' 期？</div>',
          '3': '<h3>翻倍追号：</h3><div class="list listmsg">' + alltraceMsg.join('，') + '<br/>确定要追号 ' + totalTrace + ' 期？</div>',
          '4': '<h3>买彩票 同倍追号：</h3><div class="list listmsg">' + alltraceMsg.join('，') + '<br/>确定要追号 ' + totalTrace + ' 期？</div>',
          '5': '<h3>卖彩票 同倍追号：</h3><div class="list listmsg">' + alltraceMsg.join('，') + '<br/>确定要追号 ' + totalTrace + ' 期？</div>'
        };

        if (typeof nowNo == 'undefined') {
          nowNo = nowtab.filter('li.on').data('no'); 
        }

        traceAgain = dialog({
          title: '提示信息',
          content: traceAgainMsg[nowNo],
          skin: 'confirm-again',
          fixed: true,
          button: [{
            id: 'lt_ok',
            value: '确&nbsp;&nbsp;定',
            callback: function() {
              //清除手动倍数缓存
              nowtab.filter('li.on').removeData('manual');
              //填充追号期数
              me.initDetails(traceBtn, nowTraceBox, 1, me.traceitems, false);
            }
          }, {
            id: 'lt_cancel',
            skin: 'cancel',
            value: '取&nbsp;&nbsp;消'
          }]
        }).showModal();
      }
    });
  },
  //初始化细节
  initDetails: function(genBtn, nowData, type, traceList, isreset) {
    var me = this;
    var tracetpl = me.traceTpl();
    var traceTyp = genBtn.attr('rel');
    var typindex = me.queueDict[traceTyp];
    var tracetabs = me.tracetab[typindex];
    var allchange = me.tracechange[typindex];
    var tabon = tracetabs.filter('li.on');
    var nowchg = me.tracechange[typindex].filter('#trace-' + tabon.data('type'));
    var traceBtn = me.tracebtn[typindex];
    var orders = me.orders[typindex];
    
    var nowlist = me.tracelist[traceTyp];
    var nowTraceBox = $('#trace-data-' + traceTyp);

    traceList.items = Lottery.next;
    var tracelist = nowData.find('.trace-list');

    /*生成追号参数*/
    var chooseNum = parseInt(nowchg.find('input[name=initTotals]').val(), 10);

    if (isreset) {
      if (tracelist.find('>li').size() == 0 || nowData.find('.trace-list').html() == '') {
        
        if (typeof traceList.items == 'undefined') {
          return false;   
        }
        var htmlcache = tmpl.apply(this, ['list_trace', tracetpl, traceList]);
        tracelist.data('init', htmlcache).html(htmlcache).removeClass('trace-hidden');
        //初始化各追号倍数
        tracetabs.filter('li[data-type=double]').data('v', Q.doubleTimes());
        tracetabs.filter('li[data-type=same]').data('v', [1]);
        //初始化最大倍数
        allchange.find('input[name=initTotals]').attr('max',traceList.items.length);
        if (traceTyp == 'market') {
          tracetabs.data('v', [1]);
        }
      } else {
        tracelist.removeClass('trace-hidden');
      }
    } else {
      var nowpercent = nowchg.find('input[name=startRate]').val();
      var nowallv = me.updateMoney(tabon.data('no'), nowchg, orders.data('trace'));
      
      var nowtabno = tracetabs.filter('li.on').data('no');
      var setSel={};
      if (nowallv) {
        
        tabon.data({'v':nowallv,'vr':nowpercent});
        if (typeof traceBtn.data('sel') === 'undefined') {
          setSel = {};
          setSel[nowtabno] = [];
        } else {
          setSel = traceBtn.data('sel');
        }

        var wantSel = $.map($(Array(chooseNum)), function(val, i) {
          return i;
        });
        setSel[nowtabno] = wantSel; 
      }else {
        setSel[nowtabno] = [];
        nowlist.parent().html(nowlist.parent().data('init'));  
      }
      
      setSel[nowtabno] = wantSel;
      me.prepareSubmit(nowlist, traceBtn, traceTyp, setSel);
    }

    nowTraceBox.show();

    me.tracelist[traceTyp] = tracelist.find('>ul.trace-items');
    var traceData = orders.data('trace');
    traceBtn.data('rate', traceData.profixRate);

    //绑定点选事件(单选，全选，手动倍数)
    me.bindEvt(tracelist, genBtn, traceTyp);

    //期数小于5禁用下拉选期菜单
    var chooseIssue = me.tracechange[typindex].find('select.lotteryList');
    if (traceList.items.length < 5) {
      chooseIssue.attr('disabled', 'disabled');
    } else {
      chooseIssue.removeAttr('disabled');
    }

    //追号下拉菜单
    chooseIssue.off('change').on('change', function(evt) {
      var nowMax = traceList.items.length;
      var tabon = tracetabs.filter('li.on');
      var thischg = me.tracechange[typindex].filter('#trace-' + tabon.data('type'));
      if ($(this).val() == '-1' || parseInt($(this).val(), 10) > nowMax) {
        thischg.find('input[name=initTotals]').val(nowMax);
      } else {
        thischg.find('input[name=initTotals]').val($(this).val());
      }
    });
  },
  
  bindNumber:function(el) {
    if ($(el).next().length==0 && $(el).prev().length==0) {
      $(el).inputNumber();  
    }
    return false;
  },
  
  bindEvt: function(traceItems, genBtn, traceTyp) {
    var me = this;
    traceItems.off('click change keyup').on('click change keyup', 'input[type=checkbox],input[type=text].times', function(evt) {

      if ($(this).hasClass('chkall') && evt.type === 'click') {
        //全选
        var typeindex = me.queueDict[traceTyp];
        var nowlist = me.tracelist[traceTyp];
        var genBtn = me.tracebtn[typeindex];
        var tracetabs = me.tracetab[typeindex];
        var nowTab = tracetabs.filter('li.on');
        var nowNo = genBtn.data('no');
        var nowData = $('#trace-data-' + traceTyp);
        if (nowTab.data('v').toString()=='-1') {
          return false;   
        }

        if ($(this).hasClass('nochk')) {
          $(this).prop('checked',true);
          $(this).removeClass('nochk');
        }else {
          $(this).prop('checked',false);
          $(this).addClass('nochk');
        }
        if ($(this).prop('checked')) {
          nowlist.find('input[type="checkbox"]').prop('checked', true).removeClass('nochk');
          nowlist.find('>li').addClass('chkitem');
          nowlist.find('input.times').removeAttr('disabled');
        } else {
          nowlist.parent().html(nowData.find('.trace-list').data('init'));
          me.tracelist[traceTyp] = nowData.find('.trace-list>ul.trace-items');
        }
        me.prepareSubmit(nowlist, genBtn, traceTyp);
      } else if ($(this).hasClass('times')) {
        //手动倍数
        if (evt.type === 'change' || evt.type === 'keyup') {
          var typeindex = me.queueDict[traceTyp];
          var nowlist = me.tracelist[traceTyp];
          var genBtn = me.tracebtn[typeindex];
          var nowTab = me.tracetab[typeindex];
          var nowNo = genBtn.data('no');
          var tabOn = nowTab.filter('li.on');

          var oldManual = tabOn.data('manual');
          if (typeof oldManual == 'undefined') {
            oldManual = {};
            oldManual[$(this).data('index')] = $(this).val();
            tabOn.data('manual', oldManual);
          } else {
            oldManual[$(this).data('index')] = $(this).val();
            tabOn.data('manual', oldManual);
          }
          me.prepareSubmit(nowlist, genBtn, traceTyp);
        }
      } else {
        if (evt.type === 'click') {
          //单选
          var $li = $(this).parents('li');
          var typeindex = me.queueDict[traceTyp];
          var thistime = $li.find('input.times');
          var nowchkindex = $(this).attr('index');
          var thismoney = $li.find('em.traceM');
          var tracetabs = me.tracetab[typeindex];
          var nowsubmit = me.submitbtn[typeindex];
          var noworders = me.orders[typeindex];
          var genBtn = me.tracebtn[typeindex];

          var vGet = {
            'double': 'v',
            'same': 'same',
            'rate': 'rate'
          };
          var nowTab = tracetabs.filter('li.on');
          var nowtabtype = nowTab.data('type');
          var allv = nowTab.data('v');
          var allvr = nowTab.data('vr');
          var nowno = nowTab.data('no');
          var nowtime = 1;
          var nowMoney;

          var moneyKey = {'1':'traceM','2':'traceM','3':'traceM','4':'traceMBuy','5':'traceMSale'};

          var nowchanges = me.tracechange[typeindex];
          var nchange = nowchanges.filter('#trace-' + nowtabtype);

          var traceData = noworders.data('trace');

          if ($(this).hasClass('nochk')) {
            $(this).prop('checked',true);
            $(this).removeClass('nochk');
          }else {
            $(this).prop('checked',false);
            $(this).addClass('nochk');
          }

          if (!$li.hasClass('chkitem')) {
            if (typeof allv !== 'undefined') {
              if (typeof allv[nowchkindex] === 'undefined' && (nowno === 2 || nowno === 4 || nowno === 5)) {
                nowtime = allv[0];
              } else {
                if (typeof allv[nowchkindex] !== 'undefined') {
                  nowtime = allv[nowchkindex];  
                }else {
                  nowtime = allv[allv.length-1];   
                }
                if (nowno === 1) {
                  if (parseInt(nchange.find('input[name=startRate]').val(),10)>parseInt(allvr,10)) {
                    nchange.find('input[name=startRate]').val(allvr);  
                  }
                }
              }
            } else {
              nowtime = thistime.data(vGet[nowtabtype]);
            }

            if (nowtime<0) {
              return false;
            }
            $li.addClass('chkitem');
            nowMoney = parseFloat(nowtime * traceData[moneyKey[nowno]], 10);
            me.cashier += nowMoney;
            me.counter[traceTyp] += 1;

            thistime.val(nowtime).removeAttr('disabled');
          } else {
            $li.removeClass('chkitem');
            nowtime = 0;
            nowMoney = parseFloat(nowtime * traceData[moneyKey[nowno]], 10);
            me.cashier -= nowMoney;
            me.counter[traceTyp] -= 1;
            thistime.val(nowtime).attr('disabled', 'disabled');
          }


          thistime.inputNumber();
          thismoney.html(Lottery.type === 'lottery' ? nowMoney.toFixed(3) : nowMoney).attr('v', nowMoney);
          nchange.find('li.totalTraceMoney em').html(Lottery.type === 'lottery' ? parseFloat(me.cashier, 10).toFixed(3) : parseFloat(me.cashier, 10));
          nchange.find('li.totalIssue em').html(parseInt(me.counter[traceTyp], 10));
          me.prepareSubmit(traceItems, genBtn, traceTyp);
        }
      }
    });
  },
  //准备追号提交表单数据
  prepareSubmit: function(nowData, genBtn, type) {
    var me = this;
    var index = me.queueDict[type];
    if (typeof me.tracelist[type] === 'undefined') {
      return false;
    }

    var traceCounts = {},
      traceTimeCount = 0,
      chkItem = me.tracelist[type].find('li.chkitem input.times');

    var nowsubmit = me.submitbtn[index];
    var noworder = me.orders[index];
    var traceData = noworder.data('trace');
    var tracelist = me.tracelist[type];
    var nowtab = me.tracetab[index];
    var nowtabtyp = nowtab.data('type');
    var nowData = $('#trace-data-' + type);
    var moneyKey = {'1':'traceM','2':'traceM','3':'traceM','4':'traceMBuy','5':'traceMSale'};

    if (typeof genBtn.data('no') == 'undefined') {
      genBtn.data('no',nowtab.filter('.on').data('no'));
    }
    var nowtabno = genBtn.data('no');

    var nowchange = me.tracechange[index];
    //记录选择追号的项目
    var nowSel;
    var oldSel;
    if (arguments.length > 3) {
      oldSel = $.extend({}, arguments[3]);
    }
    if (typeof genBtn.data('sel') === 'undefined') {
      nowSel = {};
      nowSel[nowtabno] = [];
    } else {
      nowSel = genBtn.data('sel');
    }

    var nowIndex = [];

    var setLine = function(inlinetimes, inlinemoney) {
      var nowtime = 0;
      var nowallv = nowtab.filter('li.on').data('v');
      //翻倍
      if (nowtabno === 3) {
        if (typeof nowallv !== 'undefined') {
          if (typeof nowallv[inlinetimes.data('index')] !== 'undefined') {
            nowtime = nowallv[inlinetimes.data('index')];
          } else {
            nowtime = nowallv[nowallv.length - 1];
          }
        } else {
          nowtime = inlinetimes.data('v');
        }
        //同倍
      } else if (nowtabno === 2 || nowtabno === 4 || nowtabno === 5) {
        if (typeof nowallv !== 'undefined') {
          if (typeof nowallv[inlinetimes.data('index')] !== 'undefined') {
            nowtime = nowallv[inlinetimes.data('index')];
          } else {
            nowtime = nowallv[0];
          }
        }
        //利润率
      } else if (nowtabno === 1) {
        if (typeof nowallv !== 'undefined') {
          if (typeof nowallv[inlinetimes.data('index')] !== 'undefined') {
            nowtime = nowallv[inlinetimes.data('index')];
          } else {
            nowtime = inlinetimes.data('same');
          }
        } else {
          nowtime = inlinetimes.data('same');
        }
      }

      //手动倍数
      var tabOn = nowtab.filter('li.on');
      if (typeof tabOn.data('manual') != 'undefined') {
        if (typeof tabOn.data('manual')[inlinetimes.data('index')] != 'undefined') {
          nowtime = tabOn.data('manual')[inlinetimes.data('index')];
        }
      }

      var nowmoney = parseFloat(nowtime * traceData[moneyKey[nowtabno]], 10);
      
      inlinemoney.html(Lottery.type === 'lottery' ? nowmoney.toFixed(3) : nowmoney).attr('v', nowmoney);
      inlinetimes.val(nowtime).removeAttr('disabled');

      return nowmoney;
    }
 
    var traceTotalLen = 0;
    
    if (chkItem.size() > 0) {
      if (arguments.length > 3) {
        if (typeof oldSel[nowtabno] !== 'undefined') {
          if (oldSel[nowtabno].length > 0 && chkItem.size() != oldSel[nowtabno].length) {
            tracelist.parent().html(nowData.find('.trace-list').data('init'));
            me.tracelist[type] = nowData.find('.trace-list>ul.trace-items');
            chkItem = me.tracelist[type].find('li.chkitem input.times');
          }  
        }
        
      }

      var totalMoney = 0;
      traceTotalLen = chkItem.size();
      chkItem.map(function(k, el) {
        var $li = $(el).parents('li');

        nowIndex.push($li.index());
        var inlinetimes = $(el);
        var inlinemoney = $li.find('>span:eq(3) em.traceM');
        var nm = setLine(inlinetimes, inlinemoney);
        traceTimeCount += parseInt(inlinetimes.val(), 10);
        traceCounts[inlinetimes.data('issue')] = parseInt(inlinetimes.val(), 10);

        totalMoney += nm;
      });
      nowchange.find('li.totalIssue em').html(chkItem.size());
      nowchange.find('li.totalTraceMoney em').html(Lottery.type === 'lottery' ? parseFloat(totalMoney).toFixed(3) :parseFloat(totalMoney));
      // 联动全选
      var syncchkall = tracelist.prev().find('input.chkall');
      if (chkItem.length == tracelist.find('li').length) {
        syncchkall.prop('checked', true).removeClass('nochk');
      } else {
        syncchkall.prop('checked', false).addClass('nochk');
      }
    } else {
      nowchange.find('li.totalIssue em').html(0);
      nowchange.find('li.totalTraceMoney em').html(0);
    }

    nowSel[nowtabno] = nowIndex;
    if (arguments.length > 3) {
      nowSel = oldSel;

      if (typeof nowSel[nowtabno] !== 'undefined') {
        if (chkItem.size() == 0 && nowSel[nowtabno].length > 0) {
          var allitem = "li:eq(" + nowSel[nowtabno].join('),li:eq(') + ")";
          var nowallv = nowtab.filter('li.on').data('v');
          var allchkitem = me.tracelist[type].find(allitem);
          var totalMoney = 0;
          traceTimeCount = 0;
          nowchange.find('li.totalIssue em').html(allchkitem.length);

          traceTotalLen = allchkitem.size();
          allchkitem.map(function(k, el) {
            $(el).addClass('chkitem');
            $(el).find('span.chk input').prop('checked', true).removeClass('nochk');
            var inlinetimes = $(el).find('span:eq(2) input.times');
            var inlinemoney = $(el).find('>span:eq(3) em.traceM');
            var nm = setLine(inlinetimes, inlinemoney);
            totalMoney += nm;
            traceTimeCount += parseInt(inlinetimes.val(), 10);
            traceCounts[inlinetimes.data('issue')] = parseInt(inlinetimes.val(), 10);
          });

          // 联动全选
          var syncchkall = tracelist.prev().find('input.chkall');
          if (allchkitem.length == tracelist.find('li').length) {
            syncchkall.prop('checked', true).removeClass('nochk');
          } else {
            syncchkall.prop('checked', false).addClass('nochk');
          }
          nowchange.find('li.totalTraceMoney em').html(Lottery.type === 'lottery' ? parseFloat(totalMoney).toFixed(3) : parseFloat(totalMoney));
        } else {
          if (chkItem.size() == 0) {
            nowchange.find('li.totalIssue em').html(0);
            nowchange.find('li.totalTraceMoney em').html(0);
          }
        }
      } else {
        nowchange.find('li.totalIssue em').html(0);
        nowchange.find('li.totalTraceMoney em').html(0);
      }
    }
    genBtn.data('sel', nowSel);

    //准备初始化追号提交数据
    var nowtrace = noworder.data('trace');

    if (typeof nowtrace == 'undefined') {
      return false;
    }

    var tracemoney = nowtrace[moneyKey[nowtabno]];

    if (nowtrace.type === 'market') {
      var twoTypeTrace = {};
      if (genBtn.data('no') == 4) {
        twoTypeTrace['buytrace'] = {
          'trace': traceCounts,
          'traceCount': traceTotalLen,
          'money': traceTimeCount * tracemoney
        };
      }
      if (genBtn.data('no') == 5) {
        twoTypeTrace['selltrace'] = {
          'trace': traceCounts,
          'traceCount': traceTotalLen,
          'money': traceTimeCount * tracemoney
        };
      }
      genBtn.data(twoTypeTrace);
    } else if (nowtrace.type === 'lottery') {
      genBtn.data({
        'trace': traceCounts,
        'traceCount': traceTotalLen,
        'money': traceTimeCount * tracemoney
      });
    }
  },
  //单独更新追号金额
  updateMoney: function(traceOn, traceChange, data) {
    var getAllv = [];
    var me = this;
    var nowtotalNext = Lottery.next;
    var sumAmount = 0;
    var genBtn = traceChange.parent().find('a#lgenTrace');

    if (typeof nowtotalNext !== 'undefined') {
      var totalIssues = nowtotalNext.length;
      if (traceOn == '1') {
        for (var i = 0, len = totalIssues; i < len; i++) {
          var oldAmount = sumAmount;
          var getTimesRate = 1;
          var rateinsert = traceChange.find('>ul:eq(1) input[name=startRate]').val();

          var nowRate = ((data.profixP - sumAmount) / sumAmount) * 100;
          if (i==0) {
            nowRate = ((data.profixP - data.traceM) / data.traceM) * 100;
            if (parseFloat(nowRate)<parseFloat(rateinsert)) {
              return false;
            }
          }
          getTimesRate = me.computeByMargin(traceChange.find('>ul:eq(1) input[name=startTimes]').val(), traceChange.find('>ul:eq(1) input[name=startRate]').val(), data.traceM, sumAmount, data.profixP);
          
          if (getTimesRate<1) {
            sumAmount = i * data.traceM;  
          }else {
            sumAmount = getTimesRate * data.traceM + oldAmount;
          }
          getAllv.push(getTimesRate <= me.maxtimes ? getTimesRate : me.maxtimes);
        }
      } else if (traceOn == '3') {
        var doubles = 0;
        var getTimesRate = 1;
        for (var i = 0, len = totalIssues; i < len; i++) {
          getTimesRight = me.computeByTimes(doubles, i, traceChange.find('input[name=doubles]').val(), traceChange.find('input[name=gaps]').val());
          doubles = getTimesRight[0];
          getTimesRight = getTimesRight[1];

          if (i > 1 && getAllv[i - 1] == me.maxtimes) {
            break;
          }

          getAllv.push(getTimesRight <= me.maxtimes ? getTimesRight : me.maxtimes);
        }
      } else {
        for (var i = 0, len = totalIssues; i < len; i++) {
          var startTimes = traceChange.find('input[name="startTimes"]').val();
          getAllv.push(startTimes <= me.maxtimes ? startTimes : me.maxtimes);
        }
      }
    }

    return getAllv;
  },
  //单独计算当前下单的所有可用追号的倍数
  updateTimes: function(element, genbtn, data) {
    var me = this;
    var nowtotalNext = Lottery.next;
    var traceTyp = Lottery.type;
    var typindex = me.queueDict[traceTyp];
    var nowData = $('#trace-data-' + traceTyp);
    var genBtn = me.tracebtn[typindex];
    var allRightRate = [];
    var nowRate = ((data.profixP - data.traceM) / data.traceM) * 100;
    var sumAmount = 0;

    if (typeof nowtotalNext !== 'undefined' && traceTyp == 'lottery') {
      var totalIssues = nowtotalNext.length;
      var startRate = element.find('.trace-rate ul:eq(1) input[name=startRate]').val();
      var startTimes = element.find('.trace-rate ul:eq(1) input[name=startTimes]').val();
      for (var i = 0, len = totalIssues; i < len; i++) {
        var oldAmount = sumAmount;
        var getTimesRate = 1;
        getTimesRate = me.computeByMargin(startTimes,startRate, data.traceM, sumAmount, data.profixP);
        if (getTimesRate<1) {
          sumAmount = i * data.traceM;
        }else {
          sumAmount = getTimesRate * data.traceM + oldAmount;
        }
        allRightRate.push(getTimesRate <= me.maxtimes ? getTimesRate : me.maxtimes);
      }
    }
    if (nowRate<me.minratelimite) {
      allRightRate=[-1];  
    }
    element.find('ul.trace-tab li[data-type=rate]').data({'v':allRightRate,'vr':startRate});  

    //更新金额
    var oldSel = genBtn.data('sel');

    me.prepareSubmit(nowData, genBtn, traceTyp, oldSel);
  },
  //根据利润率计算当期需要的倍数[起始倍数，利润率，单倍购买金额，历史购买金额，单倍奖金],返回倍数
  //利润率=（奖金模式-总投注金额）/ 总投注金额
  computeByMargin: function(s, m, b, o, p) {
    s = s ? parseInt(s, 10) : 0;
    m = m ? parseInt(m, 10) : 0; //利润率
    b = b ? Number(b) : 0; //单倍购买金额
    o = o ? Number(o) : 0; //历史购买金额
    p = p ? Number(p) : 0; //单倍奖金
    var t = 0;

    if (b > 0) {
      if (m > 0) {
        t = Math.ceil(((m / 100 + 1) * o) / (p - (b * (m / 100 + 1))));
      } else { //无利润率
        t = 1;
      }
      if (t < s) { //如果最小倍数小于起始倍数，则使用起始倍数
        t = s;
      }
    }

    return t;
  },
  //翻倍倍数
  computeByTimes: function(s, k, d, g) {
    if (k % g === 0) {
      s = s + 1;
    }
    return [s, Math.pow(d, (s - 1))];
  },
  //追号重置
  resetTraceBox: function(el) {
    var me = this;
    if (el.find('input[name=autoTrace]').is(':checked')) {
      el.find('input[name=autoStop]').prop('checked', true);
      el.find('div.trace-data select.lotteryList').val(5);
      el.find('div.trace-data input[name=startTimes]').val(1);
      el.find('div.trace-data input[name=initTotals]').val(5);
      el.find('div.trace-data input[name=gaps]').val(2);
      el.find('div.trace-data input[name=doubles]').val(2);
      el.find('div.trace-data input[name=startRate]').val(me.minratelimite);
      el.find('ul.trace-items li').removeClass('chkitem');
      el.find('ul.trace-items li input.times').val('0').attr('disabled', 'disabled');
      el.find('ul.trace-items li span em.traceM').html('0');
      el.find('ul.trace-items li span.chk input').attr('checked', false);
      el.find('div.trace-fixed span.chk input.chkall').attr('checked', false).addClass('nochk');
      el.find('div.trace-data > a:eq(0)').removeData();
      el.find('ul.trace-tab > li').removeData('manual');
      el.find('input[name=autoTrace]').next('label').trigger('click');
    } else {
      if (el.find('div.trace-data').size() > 0) {
        el.find('div.trace-data select.lotteryList').val(5);
        el.find('div.trace-data input[name=startTimes]').val(1);
        el.find('div.trace-data input[name=initTotals]').val(5);
        el.find('div.trace-data input[name=gaps]').val(2);
        el.find('div.trace-data input[name=doubles]').val(2);
        el.find('div.trace-data input[name=startRate]').val(me.minratelimite);
        el.find('ul.trace-items li').removeClass('chkitem');
        el.find('ul.trace-items li input.times').val('0').attr('disabled', 'disabled');
        el.find('ul.trace-items li span em.traceM').html('0');
        el.find('ul.trace-items li span.chk input').attr('checked', false);
        el.find('div.trace-fixed span.chk input.chkall').attr('checked', false).addClass('nochk');
        el.find('div.trace-data > a:eq(0)').removeData();
        el.find('ul.trace-tab > li').removeData('manual');
      }
    }

  },
  //追号期数重置
  resetTraceDate: function(clear) {
    var me = this;
    var reverseDict = {
      'lottery': 'market',
      'market': 'lottery'
    };
    var nowTyp = Lottery.type;
    var otherTyp = reverseDict[nowTyp];
    var genBtn = me.tracebtn[me.queueDict[nowTyp]];
    var nowData = $('#trace-data-' + nowTyp);
    var otherData = $('#trace-data-' + otherTyp);
    var beforenowSel = genBtn.data('sel');


    if (typeof clear !== 'undefined' || clear) {
      genBtn.removeData('sel');
      beforenowSel = undefined;
    }

    //判断是否连带重置交易市场

    var shouldRefresh = false;

    me.traceitems.items = Lottery.next;

    var traceList = me.traceitems;

    if (typeof traceList.items == 'undefined') {
      return false;   
    }
    var htmlcache = tmpl.apply(this, ['list_trace', me.traceTpl(), traceList]);

    if (typeof me.tracelist[nowTyp] !== 'undefined') {
      var nowlist = me.tracelist[nowTyp].parent();
      nowlist.data('init', htmlcache).html(htmlcache).removeClass('trace-hidden');
    }


    if ($('#' + otherTyp + ' .orders input[name=autoTrace]').is(':checked')) {
      var otherlist = me.tracelist[otherTyp].parent();
      otherlist.data('init', htmlcache).html(htmlcache).removeClass('trace-hidden');
    }

    me.tracelist[nowTyp] = nowData.find('.trace-list>ul.trace-items');
    me.tracelist[otherTyp] = otherData.find('.trace-list>ul.trace-items');
    if (typeof beforenowSel !== 'undefined') {
      me.prepareSubmit(nowData, genBtn, nowTyp, beforenowSel);
    }
  },
  //判断是否能利润率追号
  chkRateTrace: function() {
    var _el = $("#" + Lottery.type);
    var orderList = _el.find('.orders .list > ul:eq(0)');

    var onlyTyp = [];
    var onlyMiddle = [];
    var onlyFirst = [];
    var alltype = orderList.find('li').map(function() {
      var lstTyp = $(this).data('type').split('_');
      var firstMethod = lstTyp[0];
      var midMethod = lstTyp[1];
      var lastMethod = lstTyp[lstTyp.length - 1];
      var chkMethod = lstTyp[lstTyp.length - 1];
      if ($.inArray(midMethod, onlyMiddle) == -1) {
        onlyMiddle.push(midMethod);
      }
      if ($.inArray(firstMethod, onlyFirst) == -1) {
        onlyFirst.push(firstMethod);
      }
      if ($.inArray(chkMethod, onlyTyp) == -1) {
        onlyTyp.push(chkMethod);
      }
    }).get();

    var chkDict = [
      'fs',
      'ds',
      'fsds',
      'dsfs',
      'hds', 'hfs', 'hfshds', 'hdshfs',
      'qds', 'qfs', 'qfsqds', 'qdsqfs',
      'zxfs', 'zxds', 'zxfszxds', 'zxdszxfs',
      'zuxfs', 'zuxds', 'zuxfszuxds', 'zuxdszuxfs',
      '1z1', '2z2', '3z3', '4z4', '5z5', '6z5', '7z5', '8z5',
      'z120', 'z60', 'z30', 'z20', 'z10', 'z5', 'z24', 'z12', 'z6', 'z4', 'z3', 'dwd', 'hs1', 'hs2', 'qs1', 'qs2', 'h2', 'q2',
      'bdd11y', 'dwd11y', 'bdd1', 'bdd2'
    ];

    var secChkDict = [
      'hds', 'hfs', 'hfshds', 'hdshfs',
      'qds', 'qfs', 'qfsqds', 'qdsqfs',
      'rxds', 'rxfs', 'rxdsrxfs', 'rxfsrxds'
    ];

    var lastChkDict = [
      '1z1', '2z2', '3z3', '4z4', '5z5', '6z5', '7z5', '8z5'
    ];

    var otherlastChkDict = [
      'z120', 'z60', 'z30', 'z20', 'z10', 'z5', 'z24', 'z12', 'z6', 'z4', 'z3', 'dwd', 'hs1', 'hs2', 'qs1', 'qs2', 'h2', 'q2',
      'bdd11y', 'dwd11y', 'bdd1', 'bdd2'
    ];

    if ($.inArray(onlyTyp.join(''), chkDict) == -1 || onlyFirst.length > 1) {
      //11选5任选复式&任选单式 - 几中几对应
      if ($.inArray(onlyTyp.join(''), lastChkDict) != -1) {
        return false;
      }
      if ($.inArray(onlyTyp.join(''), otherlastChkDict) != -1 && onlyFirst.length == 1) {
        return false;
      }
      return true;
    } else {
      //二码前后对应
      if ($.inArray(onlyTyp.join(''), secChkDict) != -1 && onlyFirst.length == 1 && onlyMiddle.length > 1) {
        return true;
      }
      return false;
    }
  },
  //追号按钮类型提示
  showTraceTip: function(msg, btn) {
    var me = this;
    var tip = dialog({
      id: 'tracerateno',
      align: 'top',
      skin: 'tip',
      content: msg,
      onshow: function() {
        var that = this;
        setTimeout(function() {
          me.resetTraceDate();
          that.close().remove();
        }, 2000);
        return false;
      }
    }).show(btn[0]);
  },
  //确认类型提示
  showConfirmTip: function(html, btn) {
    var me = this;

    var tip = dialog({
      title: '温馨提示',
      content: html,
      skin: 'confirm-again',
      fixed: true,
      button: [{
        id: 'trace_ok',
        value: '确&nbsp;&nbsp;定',
        callback: function(evt) {
          var that = this;
          me.resetTraceDate();
          that.close().remove();
        }
      }]
    }).showModal();
  },
  //启用和停用利润率追号
  toggleRateTab: function(onoff) {
    var me = this;
    var _el = $("#" + Lottery.type);
    var traceBox = _el.find('div.trace-data');
    var traceTabBtn = _el.find('div.trace-data .trace-tab');
    var traceBtn = _el.find('div.trace-data > a:eq(0)');

    if (onoff) {
      traceTabBtn.find('li[data-no=1]').addClass('disabled').removeClass('on');
      traceTabBtn.find('li.on').removeClass('on');
      traceTabBtn.find('li[data-no=3]').addClass('on');
      traceBtn.attr('name', 'double').data('no', 3);
      traceBox.find('.trace-rate,.trace-same').addClass('trace-hidden');
      traceBox.find('.trace-double').removeClass('trace-hidden');
      traceBox.find('div.trace-fixed input.chkall').attr('checked', false).addClass('nochk');
      me.resetTraceDate();
    } else {
      traceTabBtn.find('li[data-no=1]').removeClass('disabled');
    }
  }
};
/* jshint devel:true */

var Agent = Agent || {};

Agent = {
  w: 1070,
  h: 560,
  usermax: 6,
  uuid: 0,
  counter: null,
  slowlycontrol:null,
  permission: [],
  init: function() {
    var me = this;
    $('.aside .btns a.go-agent').unbind('click').click(function() {
      var fireagent = $(this);
	  if (typeof $(this).attr('lock') === 'undefined') {
        $(this).attr('lock',1);  
      }else {
        return false;
      }
      if ($(this).hasClass('loading')) {
        $(this).removeClass('loading');
      }else {
        $(this).addClass('loading'); 
      }
      if ($(this).hasClass('disabled')) {
        return false;
      }
      Api.getCommon('getproxyinfo', {}, function(p) {
        $('.aside .btns a.go-agent').removeAttr('lock');
        if (p === -1 && !$(".loginlnk").hasClass('waiting')) {
          fireagent.removeClass('loading');
		  $(".loginlnk").trigger('click');
          return false;
        }
        if (p.code == '1002') {
		  fireagent.removeClass('loading');
          return false;
        } else {
          me.showLayout(p.result.userName, p.result.memberCount, (typeof p.result.adminType !== 'undefined' ? p.result.adminType : p.result.userType));
        }
      });
    });
  },
  firevent: {
    'detail': 'showUserinfo',
    'link': 'showLinkRate',
    'user': 'showUser',
    'team': 'showTeaminfo',
    'reg': 'showReg',
    'balance': 'showBalance',
    'change': 'showChange',
    'setting': 'showSetting',
    'permission': 'showPermissions',
    'combine': 'showCombine',
    'combinerecord': 'showCombineRecord',
    'combinereport': 'showCombineReport',
    'quota': 'getQuotas',//查看自己的配额
    'setquota': 'showQuotas'//修改下级的配额
  },
  showLayout: function(name, number, type) {
    var me = this;
    var pop = dialog({
      id: 'agent_list',
      title: ' ',
      skin: 'sobet agent-pop',
      width: me.w,
      height: me.h,
      onshow: function() {
        var that = this;
        $('a.go-agent').removeClass('loading');
        $('body').addClass('lockscroll');
        $(that.node).find('ul.summary em:eq(0)').html(name);
        $(that.node).find('ul.summary em:eq(1)').html(number);
        var allnowper = [];
        if (type == '5') { //管理员时判断团队等权限
          Api.getCommon('qusrpermission', {}, function(powers) {
            if (powers.code == '1') {
              powers.result.map(function(el, k) {
                allnowper.push(el.permissionCode)
              });
              me.permission = allnowper;
              if ($.inArray('CKTDXX', allnowper) == -1) {
                $(that.node).find('.pwp[code=CKTDXX]').hide();
              }
              //DLKH，代理开户
              if ($.inArray('DLKH', allnowper) == -1) {
                $(that.node).find('.pwp[code=DLKH]').hide();
              }
              //管理员无法调整配额
              $(that.node).find('.pwp[code=DLKH]').hide();
            }
          },1);
          //隐藏开户管理员TAB
          if (type != '5') $('ul.panel-regtype li[rel=admin]').show();
          else $('ul.panel-regtype li[rel=admin]').hide();
        } else { //代理用户(非管理员)时判断团队等权限
          Api.getCommon('qpermissionlist', {}, function(powers) {
            if (powers.code == '1') {
              powers.result.map(function(el, k) {
                allnowper.push(el.permissionCode)
              });
              me.permission = allnowper;
            }
          },1);
        }
      },
      onclose: function() {
        $('body').removeClass('lockscroll');
      },
      fixed: true
    });

    //推广链接设定（完成）
    //用户列表 [详情，游戏账变，充值，返点设置] （完成）
    //注册管理（完成）
    //团队（完成）
    Api.getHtml('agent', 'html', {}, function(res) {
      pop.content(res);
      pop.addEventListener('show', function() {
        var $node = $(this.node);
        //TAB功能切换
        $node.find('.title > ul li').unbind('click').click(function() {
          if (typeof $(this).attr('lock') !== 'undefined') {
            return false;  
          }
          $node.find('.title > ul li.on').removeClass('on');
          $(this).addClass('on');
          $(this).attr('lock',1);
          $node.find('.panel-tab').hide();
          $node.find('.panel-tab[name=' + $(this).attr('name') + ']').show();
          var nowtab = $node.find('.panel-sec[name=' + $(this).attr('name') + ']');
          if (typeof $(this).attr('auto') !== 'undefined') {
            if ($(this).attr('name') == 'user' || $(this).attr('name') == 'link' || $(this).attr('name') == 'reg') {
              me[me.firevent[$(this).attr('name')]]($node, {});
            } else {
              if (typeof me[me.firevent[$(this).attr('name')]] !== 'undefined') {
                me[me.firevent[$(this).attr('name')]](-1, nowtab);
              }
            }
          }
        });
        //初始化“推广链接设定”
        me.showLinkRate($node);
      });
      pop.showModal();
    });
  },
  showLinkRate: function($node) {
    $node.find('li.bloading[name=link]').height(260);
    var me = this;
    var link_tpl = [
      '<% for ( var i = 0; i < list.length; i++ ) { %>',
      '<li class="split8">',
      '<span><%=list[i].name%></span>',
      '<span class="small"><%=list[i].point|Q.percentFormat%>%</span>',
      '<span><%=list[i].registerNum%></span>',
      '<span class="small"><%=list[i].expire|Q.expireFormat%></span>',
      '<span class="middle"><%=list[i].createTime%></span>',
      '<span class="small"><%=list[i].status|Q.statusFormat%></span>',
      '<span class="big"><em><%=list[i].link|Q.urlFormat%></em><a class="copyToClip hand" title="点击复制到剪贴板" data-clipboard-text="<%=list[i].link|Q.urlFormat%>">复制</a></span>',
      '<span class="pwp last deletelink" code="SCTGLJ" title="删除" data-id="<%=list[i].linkId%>"><em class="hide">删除</em></span></li>',
      '<% } %>'
    ].join('');
    var ratesec_tpl = [
      '<% for ( var i = 0; i < result.length; i++ ) { %>',
      '<li name="<%=result[i].lottery%>"><%=result[i].lottery|Q.lotteryChs%></li>',
      '<% } %>'
    ].join('');

    var updateLinks = function(nowpage) {
      Api.getCommon('getlinks', {
        'currPage': nowpage
      }, function(d) {
        if (d.result !== undefined) {
          d = d.result;
          //SDTGFD 推广链接设定;
          if ($.inArray('SDTGFD', me.permission) == -1) {
            $node.find('.pwp[code=SDTGFD]').addClass('locked');
          } else {
            $node.find('.pwp[code=SDTGFD]').removeClass('locked');
          }

          var maxPoint = parseFloat(Q.percentFormat(d.maxPoint), 10);
          me.mpoint = d.maxPoint;
          $node.find('.panel-tab[name=link] .ltPoint').attr('data-point', maxPoint).html('传统彩票返点：' + maxPoint + '%');
          $node.find('.panel-tab[name=quota] .panel-fright em').html(maxPoint);
          if (d.list !== undefined && d.list.length > 0) {
            $node.find('.panel-tab[name=link] ul.data').html(tmpl.apply(this, ['lotterylink', link_tpl, d]));
          } else {
            $node.find('.panel-tab[name=link] ul.data').html('<div class="blankplace">您还没有推广链接</div>');
          }
          $node.find('.panel-tab[name=link] div.pager').html(Q.showPagination(d.currPage || 1, d.pageSize, d.totalItem, null)).show();
          $node.find('.panel-tab[name=link] div.pager a').unbind('click').click(function() {
            nowpage = parseInt($(this).attr('page'), 10);
            updateLinks(nowpage);
          });
          // 删除推广链接
          $node.find('.panel-tab[name=link] .deletelink').unbind('click').click(function() {
            if ($(this).hasClass('disabled')) {
              // me.showTip('推广链接返点删除暂无权限，请联系上级代理！', $(this));
              return false;
            }

            var linkId = $(this).attr('data-id');
            var deleteConfirm = dialog({
              title: '温馨提示',
              skin: 'confirm-again',
              fixed: 'true',
              content: '您确定要删除当前推广链接吗？',
              button: [{
                id: 'delete_ok',
                value: '确&nbsp;&nbsp;定',
                callback: function(evt) {
                  Api.getCommon('deletelink', {
                    'linkId': linkId
                  }, function(del) {
                    updateLinks(1);
                  });
                }
              }, {
                id: 'delete_no',
                skin: 'cancel',
                value: '取&nbsp;&nbsp;消'
              }]
            }).showModal();
          });
          //SCTGLJ 推广链接删除全权限;
          if ($.inArray('SCTGLJ', me.permission) == -1) {
            $node.find('.pwp[code=SCTGLJ]').addClass('disabled');
          } else {
            $node.find('.pwp[code=SCTGLJ]').removeClass('disabled');
          }

          // 复制到剪贴板
          var clip = new ZeroClipboard();
          var tip = dialog({
            id: 'copy-tip',
            skin: 'tip',
            align: 'top'
          });
          $node.find('.panel-tab[name=link] ul.data li').each(function(i, el) {
            clip.clip($(el).find('.copyToClip'));
            clip.on('ready', function() {
              this.on('aftercopy', function(event) {
                tip.content('复制成功: ' + event.data['text/plain']);
                tip.show($(event.target)[0]);
                setTimeout(function() {
                  tip.close();
                }, 2000);
              });
            });
          });

          if (ZeroClipboard && ZeroClipboard.state().flash.disabled) {
            $node.find('.panel-tab[name=link] .copyToClip').unbind('click').bind('click', function(evt) {
              evt.preventDefault();

              tip.content('您的浏览器不支持flash插件，安装完flash插件再使用“复制”功能！');
              tip.show($(this)[0]);
              setTimeout(function() {
                tip.close();
              }, 3000);
            });
          }
          var offsetRangePoint = 1;
          if (maxPoint>7.5) {
            offsetRangePoint =0;//范围7.6~7.8，可以平级  
          }
          var range = maxPoint * 10 - offsetRangePoint > 0 ? maxPoint * 10 - offsetRangePoint : 0;
          //最大返点设置为7.7%
          range = range > 77 ? 77 : range; 
          var selectrange = range > 75 ? 75 : range;
          
          var rateselect = $.map($(Array(selectrange)), function(val, i) {
            var setval = parseFloat((i + 1) / 10).toFixed(1);
            return '<option value="' + setval + '">' + setval + '%</option>';
          });
          rateselect.unshift('<option value="0">0.0%</option>');
          rateselect.unshift('<option value="" selected="selected">请选择</option>');

          $node.find('.panel-tab[name=link] select[name=rateset]').html(rateselect.join(''));
          $node.find('.panel-tab[name=reg] select[name=regrate]').html(rateselect.join(''));
          $node.find('.panel-tab[name=setting] select.subrate').html(rateselect.join(''));


          if (range < 76) {
            $node.find('.panel-tab[name=team] div.itemlist ul li.pe').hide(); 
            $node.find('.panel-tab[name=user]').attr('pe',0);
          }else {
            $node.find('.panel-tab[name=team] div.itemlist ul li.pe').show();
            $node.find('.panel-tab[name=user]').attr('pe',1);
          }
          //拖拽返点率
          var maxRate = parseFloat(range / 10).toFixed(1);
          var halfRate = parseFloat((range / 2) / 10).toFixed(1);

          $node.find('.panel-help em:eq(0)').html((maxPoint).toFixed(1));
          $node.find('.panel-help em:eq(1)').html(maxRate);
          me.usermax = parseFloat(maxRate);
          var dispalyMax = parseFloat(maxRate, 10) < 1.1 ? 1 : maxRate;
          var displayRangeOpt = {
            min: 0,
            max: dispalyMax,
            hide_min_max: false,
            from: halfRate,
            from_min: 0,
            from_max: maxRate,
            from_shadow: true,
            grid: true,
            step: 0.1,
          };
          if (parseInt(maxRate, 10) == 0) {
            displayRangeOpt['grid'] = false;
            displayRangeOpt['hide_min_max'] = true;
          }
          $node.find("#raterange").ionRangeSlider(displayRangeOpt);
        }
      },1);
    };
    //设置返点用户名事件
    var lnkname = $node.find('input[name=linkname]');
    var ratesel = $node.find('select[name=rateset]');
    $node.find('input[name=linkname]').off('keyup').on('keyup', function() {
      var value = $(this).val();
      if (value != '' && ratesel.val() != '') {
        $node.find('a.createlink').removeClass('disabled');
      } else {
        $node.find('a.createlink').addClass('disabled');
      }
    });
    //设置返点按钮事件
    $node.find('select[name=rateset]').off('change').on('change', function() {
      if ($node.find('a.createlink').hasClass('locked')) {
        return false;
      }

      if ($(this).val() != '' && lnkname.val() != '') {
        $node.find('a.createlink').removeClass('disabled');
      } else {
        $node.find('a.createlink').addClass('disabled');
      }
    });
    $node.find('a.createlink').unbind('click').click(function() {
      if ($(this).hasClass('locked')) {
        me.showTip('推广链接返点设置暂无权限，请联系商家！', $node.find('a.createlink'));
        return false;
      }
      if ($(this).hasClass('disabled')) {
        //me.showTip('请选择注册返点比率！', $node.find('select[name=rateset]'));
        return false;
      }

      var link_input = $node.find('input[name=linkname]');
      var link_name = link_input.val();

      if (link_name.length > 6) {
        me.showTip('链接名称不能超过6个字符！', link_input);
        return false;
      }

      $(this).addClass('loading');
      Api.getCommon('createlink', {
        name: link_name,
        point: $node.find('select[name=rateset]').val(),
        expire: $node.find('select[name=expire]').val(),
        action: 'POST'
      }, function(d) {
        if (parseInt(d.code, 10) === 1) {
          me.showTip('成功生成推广链接！', $node.find('a.createlink'));
          $node.find('a.createlink').addClass('disabled');
          me.showLinkRate($node);
        } else {
          me.showTip(d.msg, $node.find('a.createlink'));
          $node.find('a.createlink').addClass('disabled');
          me.showLinkRate($node);
        }
        $node.find('a.createlink').removeClass('loading');
      },1);
    });
    //管理员账号开户权限设置列表
    var nowpowerlist = $node.find('.panel-tab[name=reg] ul.data:eq(1)');
    var nowlist = $node.find('.panel-tab[name=reg] ul.data:eq(0)');
    $node.find('.panel-regtype').off('click').on('click', 'li', function(evt) {
      $(this).siblings().removeClass('on');
      $(this).addClass('on');

      //用户名密码初始化
      $node.find('.panel-tab[name=reg] input[name=agent_username]').attr('first', 1).val('');
      $node.find('.panel-tab[name=reg] input[name=agent_pwd]').val('');

      if ($(this).attr('rel') == 'admin') {
        $node.find('ul.head li.listhead[name=regRateList]').hide();
        $node.find('ul.head li.listhead[name=regAdminList]').show();
        nowpowerlist.show();
        $node.find('select.panel-reg-point').hide();
        $node.find('select.panel-reg-point').prev().hide();
        $node.find('.panel-rate').hide();
        $node.find('.panel-power').show();
        nowlist.hide();
      } else {
        $node.find('ul.head li.listhead[name=regRateList]').show();
        $node.find('ul.head li.listhead[name=regAdminList]').hide();
        nowpowerlist.hide();
        nowlist.show();
        $node.find('select.panel-reg-point').show();
        $node.find('.panel-rate').show();
        $node.find('.panel-power').hide();
        $node.find('select.panel-reg-point').prev().show();
      }
    });

    updateLinks(1);
    $node.find('.panel-tab[name=link]').show();


    var LotteryChs = {
      result: []
    };
    var rateselect_tpl = [
      '<option value="" selected="selected">全部</option>',
      '<% for ( var i = 0; i < result.length; i++ ) { %>',
      '<option value="<%=result[i].lottery%>"><%=result[i].ch%></option>',
      '<% } %>'
    ].join('');
    for (code in LotteryClass.names) {
      LotteryChs.result.push({
        'lottery': code,
        'ch': LotteryClass.names[code]
      })
    }
    //初始化select彩种列表
    $node.find('.panel-tab[name=change] select[name=lotteryChg]').html(tmpl.apply(this, ['lotteryselect', rateselect_tpl, LotteryChs]));
    $node.find('.panel-tab[name=setting] select[name=settingList]').html(tmpl.apply(this, ['lotteryselect', rateselect_tpl, LotteryChs]));
    $node.find('.panel-tab[name=combinereport] select[name=lotteryChg]').html(tmpl.apply(this, ['lotteryselect', rateselect_tpl, LotteryChs]));

    //读取代理信息
    Api.getCommon('getproxyinfo', {cache:1}, function(pi) {
      if (typeof pi.result.userName !== 'undefined') {
        $node.find('ul.summary em:eq(0)').html(pi.result.userName);
        $node.find('.panel-tab[name=quota] em.dupnick').html(pi.result.userName);
      }else {
        return false;
      }
      if (typeof pi.result.memberCount !== 'undefined') {
        $node.find('ul.summary em:eq(1)').html(pi.result.memberCount);   
      }
    }, 1);
    //解锁
    $node.find('ul.tablst li[name=link]').removeAttr('lock');
  },
  showUser: function(node, p) {
    var me = this;
    node.find('li.bloading[name=user]').height(350);
    //用户列表四按钮loading
    node.find('li.bloading[name=detail]').height(350);
    node.find('li.bloading[name=detail-rate]').height(350);
    node.find('li.bloading[name=balance]').height(455);
    node.find('li.bloading[name=change]').height(260);
    node.find('li.bloading[name=setting]').height(51);
    node.find('li.bloading[name=detail-pointrate]').height(260);
    node.find('li.bloading[name=combine]').height(350);

    var usr_tpl = [
      '<% for ( var i = 0; i < result.length; i++ ) { %>',
      '<li class=" split41">',
      '<span><%=result[i].userName%></span>',
      '<span><%=result[i].userType|Q.userChs%></span>',
      '<span>￥<%=result[i].balance%></span>',
      '<span class="last">',
      '<a class="hand quota pwp" name="<%=result[i].userId%>" type="<%=result[i].userType%>" username="<%=result[i].userName%>" point="<%=result[i].point|Q.chkquota%>" quota="<%=result[i].point%>" rel="setquota" code="TZPE">调整配额</a>',
      '<a class="hand detail pwp" name="<%=result[i].userId%>" type="<%=result[i].userType%>" username="<%=result[i].userName%>" rel="detail" code="CKXJXX">详情</a>',
      '<a class="hand change pwp" name="<%=result[i].userId%>" type="<%=result[i].userType%>" username="<%=result[i].userName%>" rel="change" code="CKXJZBXX">游戏账变</a>',
      '<%=result[i].userType|Q.setBalance,result[i].userId,',me.mpoint,'%>',
      '<a class="hand setting pwp" name="<%=result[i].userId%>" type="<%=result[i].userType%>" username="<%=result[i].userName%>" rel="setting" code="SDXJFD">返点设置</a>',
      '<%=result[i].userType|Q.setPermission,result[i].userId%>', //设置权限
      '</span></li>',
      '<% } %>'
    ].join('');
    var params = p;
    if (typeof p != 'undefined') {
      if (typeof p.currPage !== 'undefined') {
        params['currPage'] = p.currPage;
      } else {
        params['currPage'] = 1;
      }
    }
    params['pageSize'] = 9;
    params['failed'] = function() {
      node.find('ul.tablst li').removeAttr('lock');    
    };
    Api.getCommon('users', params, function(usr) {
      var usertab = node.find('.panel-tab[name=user]');
      var quotatab = node.find('.panel-tab[name=quota]');
      
      Api.getCommon('getproxyinfo', {cache:1}, function(pi) {
        node.parent().find('ul.summary em:eq(0)').html(pi.result.userName);
        node.parent().find('ul.summary em:eq(1)').html(pi.result.memberCount);
        quotatab.find('em.dupnick').html(pi.result.userName);
      }, 1);

      if (typeof usr.result !== 'undefined') {
        if (usr.result.length > 0) {
          usertab.find('ul.data').html(tmpl.apply(this, ['lotteryusr', usr_tpl, usr]));

          usertab.find('a.quota[point=0]').remove();
          usertab.find('a.quota[type=5]').remove();
          if (typeof usertab.attr('pe') !== 'undefined') {
            if (parseInt(usertab.attr('pe'),10)==0) {
              usertab.find('a.quota').hide();    
            }else {
              usertab.find('a.quota').show();
            }
          }else {
            usertab.find('a.quota').hide();
          }
          //node.find('ul.tablst li[name=user]').removeAttr('auto');
          var allnowper = usertab.data('pwp');
          if (typeof allnowper == 'undefined') {
            allnowper = me.permission;
          }
          //管理员USERTYPE=5隐藏充值
          var ut = $('#globe-welcome span.nickname').attr('typ');
          if (ut == '5') {
            usertab.find('a.balance').hide();
            usertab.find('a.quota').remove();
          } else {
            usertab.find('a.detail[type=5],a.change[type=5],a.setting[type=5]').hide();
          }

          //CKXJXX 查看下级详情;
          if ($.inArray('CKXJXX', allnowper) == -1) {
            usertab.find('.pwp[code=CKXJXX]').hide();
          }
          //CKXJZBXX 查看下级账变;
          if ($.inArray('CKXJZBXX', allnowper) == -1) {
            usertab.find('.pwp[code=CKXJZBXX]').hide();
          }
          //SDXJFD 返点设置;
          if ($.inArray('SDXJFD', allnowper) == -1) {
            usertab.find('.pwp[code=SDXJFD]').hide();
          }

          node.find('.panel-tab[name=user] div.pager').html(Q.showPagination(usr.page.currPage || 1, usr.page.pageSize, usr.page.totalItem, null)).show();
          node.find('.panel-tab[name=user] div.pager a').unbind('click').click(function() {
            var nowpage = parseInt($(this).attr('page'), 10);
            usertab.find('div.pager').html('');
            usertab.find('ul.data').html('<li class="bloading" name="user"><div class="ui-dialog-loading"></div></li>');
            usertab.find('li.bloading[name=user]').height(350);
            
            me.showUser(node, {
              currPage: nowpage
            });
          });
          //用户信息,用户团队,账变,充值,返点设置,权限设置
          usertab.find('ul.data a').unbind('click').click(function() {
            me.showSecondLay(node, usertab, $(this).attr('rel'), $(this).attr('name'));
          });
          //解锁
          node.find('ul.tablst li[name=user]').removeAttr('lock');
        } else {
          usertab.find('ul.data').html('<li name="user" style="height: 350px;"><div class="blankplace">暂无数据</div></li>');
          usertab.find('div.pager').html('');
        }
      } else {
        usertab.find('ul.data').html('<li name="user" style="height: 350px;"><div class="blankplace">暂无数据</div></li>');
        usertab.find('div.pager').html('');
      }
    },1);

    //查询用户
    //格式验证用户名格式和是否存在
    var regUser = node.find('input[name=searchName]');
    node.find('input[name=balanceMin]').inputNumber();
    node.find('input[name=balanceMax]').inputNumber();
    node.find('a.searchUser').unbind('click').click(function() {
      if (parseInt(node.find('input[name=balanceMin]').val(), 10) > parseInt(node.find('input[name=balanceMax]').val(), 10)) {
        var max = node.find('input[name=balanceMax]').val();
        var min = node.find('input[name=balanceMin]').val();
        node.find('input[name=balanceMin]').val(max);
        node.find('input[name=balanceMax]').val(min);
      }
      me.showUser(node, {
        searchName: node.find('input[name=searchName]').val(),
        balanceMin: node.find('input[name=balanceMin]').val(),
        balanceMax: node.find('input[name=balanceMax]').val()
      });
    });
  },
  showReg: function($node) {
    var me = this;
    $node.find('li.bloading[name=reg]').height(350);
    //开户
    $node.find('input.panel-reg-user,input.panel-reg-pwd').off('change keyup').on('change keyup', function() {
      if ($node.find('ul.panel-regtype li.on').attr('name') == '5') {
        if ($node.find('input.panel-reg-pwd:eq(0)').val() != '' && $node.find('input.panel-reg-user:eq(0)').val() != '' && parseInt($node.find('input.panel-reg-pwd:eq(0)').data('error'), 10) > 2 && parseInt($node.find('input.panel-reg-user:eq(0)').data('error'), 10) > 2) {
          $node.find('a.saveuser').removeClass('disabled');
        } else {
          $node.find('a.saveuser').addClass('disabled');
        }
      } else {
        if ($node.find('select[name=regrate]').val() != '' && $node.find('input.panel-reg-pwd:eq(0)').val() != '' && $node.find('input.panel-reg-user:eq(0)').val() != '' && parseInt($node.find('input.panel-reg-pwd:eq(0)').data('error'), 10) > 2 && parseInt($node.find('input.panel-reg-user:eq(0)').data('error'), 10) > 2) {
          $node.find('a.saveuser').removeClass('disabled');
        } else {
          $node.find('a.saveuser').addClass('disabled');
        }
      }
    });
    $node.find('input.panel-reg-user').focus(function() {
      $node.find('input.panel-reg-user').removeAttr('first');
    });
    User.inputFormatCheck($node.find('input.panel-reg-user'), /^[a-zA-Z_][a-zA-Z0-9_]{4,19}$/, function(code, msg) {
      $node.find('input.panel-reg-user:eq(0)').data('error', code);
      if (parseInt(code, 10) < 3) {
        if (msg.type != 'blur') {
          //me.showTip(msg[code], $node.find('input.panel-reg-user'), 600, true);
        }

        $node.find('a.saveuser').addClass('disabled');
      } else {
        if ($node.find('select[name=regrate]').val() != '' && $node.find('input.panel-reg-pwd:eq(0)').val() != '' && $node.find('input.panel-reg-user:eq(0)').val() != '' && parseInt($node.find('input.panel-reg-pwd:eq(0)').data('error'), 10) > 2 && parseInt($node.find('input.panel-reg-user:eq(0)').data('error'), 10) > 2) {
          $node.find('a.saveuser').removeClass('disabled');
        }
      }
    }, '请输入用户名', 1000);
    User.inputFormatCheck($node.find('input.panel-reg-pwd'), /^(?=.*[\d])(?=.*[a-zA-Z])[0-9a-zA-Z!~`\-+\\/@\$#%^&*()]{8,16}$/, function(code, msg) {
      $node.find('input.panel-reg-pwd:eq(0)').data('error', code);
      if (parseInt(code, 10) < 3) {
        if (msg.type != 'blur' && $node.find('input.panel-reg-pwd').val() != '') {
          //me.showTip(msg[code], $node.find('input.panel-reg-pwd'), 600, true);
        }
        $node.find('a.saveuser').addClass('disabled');
      } else {
        if ($node.find('select[name=regrate]').val() != '' && $node.find('input.panel-reg-pwd:eq(0)').val() != '' && $node.find('input.panel-reg-user:eq(0)').val() != '' && parseInt($node.find('input.panel-reg-pwd:eq(0)').data('error'), 10) > 2 && parseInt($node.find('input.panel-reg-user:eq(0)').data('error'), 10) > 2) {
          $node.find('a.saveuser').removeClass('disabled');
        }
      }
    }, '请输入密码', 1000);
    $node.find('select[name=regrate]').off('change').on('change', function() {
      $node.find('em.fromselect').html($(this).val() == '' ? '-' : $(this).val());
      if ($node.find('select[name=regrate]').val() != '' && $node.find('input.panel-reg-pwd:eq(0)').val() != '' && $node.find('input.panel-reg-user:eq(0)').val() != '' && parseInt($node.find('input.panel-reg-pwd:eq(0)').data('error'), 10) > 2 && parseInt($node.find('input.panel-reg-user:eq(0)').data('error'), 10) > 2) {
        $node.find('a.saveuser').removeClass('disabled');
      } else {
        $node.find('a.saveuser').addClass('disabled');
      }
    });
    //开户事件
    $node.find('a.saveuser').unbind('click').click(function() {
      var nowset = $(this);
      if ($(this).hasClass('disabled')) {
        return false;
      }

      var allpers = $node.find('.panel-tab[name=reg] ul.regAdminList input[type=checkbox]').map(function() {
        return '{"code":"' + $(this).attr('name') + '","hasPermissiom":' + ($(this).prop('checked') ? '1' : '0') + '}'
      }).get();

      var p_permission = '[' + allpers.join(',') + ']';

      var usertyp = $node.find('ul.panel-regtype li.on').attr('name');
      //var loginusertyp = $('#globe-welcome .nickname').attr('typ');

      var regParames = {
        userName: $node.find('input.panel-reg-user:eq(0)').val(),
        password: md5($node.find('input.panel-reg-pwd:eq(0)').val()),
        desPassword: strEnc($node.find('input.panel-reg-pwd:eq(0)').val(), '1', '2', '3'),
        point: ($node.find('input#raterange').val() == '' ? 0 : $node.find('input#raterange').val()),
        appId: '2',
        userType: usertyp,
        action: 'POST'
      };

      if (typeof Navigation.shopid !== 'undefined') {
        regParames['shopId'] = Navigation.shopid;
      }

      if (usertyp == '5') {
        regParames['permission'] = p_permission;
      }

      Api.getCommon('agentregister', regParames, function(d) {
        if (parseInt(d, 10) === -1) {
          User.updateMoney();
          $('.aside .btns .go-agent').hide();
          $('.aside .btns').addClass('btns-half');
          pop.close();
          $(".loginlnk").trigger("click");
        } else {
          if (parseInt(d.code, 10) == 1) {
            me.showTip('开户成功！', $node.find('a.saveuser'));
            $node.find('input.panel-reg-user:eq(0)').val('');
            $node.find('input.panel-reg-pwd:eq(0)').val('');
            $node.find('ul.tablst li[name=user]').attr('auto', 1);
            $node.find('a.saveuser').addClass('disabled');
            $node.find('.panel-tab[name=user] div.list ul.data').attr('refresh', 1);
          } else {
            me.showTip(d.msg, $node.find('a.saveuser'));
          }
        }
      },1);
    });
    //开户信息判断
    Api.getCommon('getproxyinfo', {}, function(proxy) {
      if (typeof proxy['result'] !== 'undefined') {
        var d = proxy['result'];
        var userid = d['userId'];
        me.uuid = userid;
        var usertyp = d['userType'];
        var userpower = (usertyp != '5' ? 'qpermissionlist' : 'qusrpermission');
        if (usertyp == '4') {
          $node.find('ul.tablst li[name=combine]').removeClass('noright');
        }

        if (typeof d['adminType'] !== 'undefined') {
          if (d['adminType'] != '5') {
            if (typeof d['userName'] !== 'undefined') {
              $node.find('ul.summary em:eq(0)').html(d['userName']);
            }
            $('ul.panel-regtype li[rel=admin]').show();
          } else {
            if (typeof d['userName'] !== 'undefined') {
              $node.find('ul.summary em:eq(0)').html(d['userName']);
            }
            userpower = 'qusrpermission';
          }
        } else {
          $node.find('ul.summary em:eq(0)').html(d['userName']);
          $('ul.panel-regtype li[rel=admin]').show();
        }

        Api.getCommon(userpower, {}, function(permission) {
          var allnowper = [];
          if (permission.code == '1') {
            permission.result.map(function(el, k) {
              allnowper.push(el.permissionCode)
            });

            //权限列表
            var regpower_tpl_old = [
              '<% for ( var i = 0; i < result.length; i++ ) { %>',
              '<li class=" split2" name=""><span><%=result[i].permissionName%></span><span class="s2last"><input name="<%=result[i].permissionCode%>" class="hand powerchk" type="checkbox" checked="checked"></span></li>',
              '<% } %>'
            ].join('');

            var regpower_tpl = [
              '<% for ( var i = 0; i < result.length; i++ ) { %>',
              '<li class=" split2" name=""><input name="<%=result[i].permissionCode%>" class="hand powerchk" type="checkbox" checked="checked"><%=result[i].permissionName%></li>',
              '<% } %>'
            ].join('');

            var nowpowerlist = $node.find('.panel-tab[name=reg] .panel-power ul.regAdminList');
            nowpowerlist.html(tmpl.apply(this, ['lotterypower', regpower_tpl, permission])).show();
            //判断是否显示滚动条2
            eachHeight = nowpowerlist.find('li:eq(0)').height();
            totalHeight = nowpowerlist.height();

            if (eachHeight * nowpowerlist.find('li').size() > totalHeight) {
              nowpowerlist.removeClass('withoutscroll');
            } else {
              nowpowerlist.addClass('withoutscroll');
            }

            //DLKH，代理开户
            if ($.inArray('DLKH', allnowper) == -1) {
              $node.find('.pwp[code=DLKH]').hide();
              //$node.find('ul.panel-regtype li[rel=member]').addClass('on');
            }
            //CKTDXX，团队
            if ($.inArray('CKTDXX', allnowper) == -1) {
              $node.find('.pwp[code=CKTDXX]').hide();
              //$node.find('ul.panel-regtype li[rel=member]').addClass('on');
            }
            //CKXJXX，用户列表权限集合;
            $node.find('.panel-tab[name=user]').data('pwp', allnowper);

            //用户列表
            me.showUser($node, {});

            //SDTGFD 推广链接设定;
            if ($.inArray('SDTGFD', allnowper) == -1) {
              $node.find('.pwp[code=SDTGFD]').addClass('locked');
            } else {
              $node.find('.pwp[code=SDTGFD]').removeClass('locked');
            }
          }
        });
      }
    },1);
    //解锁
    $node.find('ul.tablst li[name=reg]').removeAttr('lock');
  },
  showPermissions: function(uid, nowtab) {
    var me = this;
    Api.getCommon('qpermissionlist', {}, function(p) {
      if (p.code == '1') {
        //权限列表
        var regpower_tpl = [
          '<% for ( var i = 0; i < result.length; i++ ) { %>',
          '<li class=" split2" name=""><span><label for="p_<%=result[i].permissionCode%>"><%=result[i].permissionName%></label></span><span class="s2last"><input name="<%=result[i].permissionCode%>" id="p_<%=result[i].permissionCode%>" class="hand permissionitem" type="checkbox"></span></li>',
          '<% } %>'
        ].join('');

        nowtab.find('ul.head:eq(0) li[name=regAdminList]').show();
        nowtab.find('ul.data:eq(0)').html(tmpl.apply(this, ['lotterypermission', regpower_tpl, p]));
        var nowpowerlist = nowtab.find('ul.data:eq(0)');
        //判断是否显示滚动条2
        eachHeight = nowpowerlist.find('li:eq(0)').height();
        totalHeight = nowpowerlist.height();

        if (eachHeight * nowpowerlist.find('li').size() > totalHeight) {
          nowpowerlist.removeClass('withoutscroll');
        } else {
          nowpowerlist.addClass('withoutscroll');
        }
        //修改权限时读取用户全部权限
        Api.getCommon('qpermissionbyid', {
          userId: uid
        }, function(nowp) {
          var nowpp = nowp.result;
          var nowhave = {};
          for (i = 0; i < nowpp.length; i++) {
            nowhave[nowpp[i].permissionCode] = nowpp[i].permissionId;
            nowpowerlist.find('.permissionitem[name=' + nowpp[i].permissionCode + ']').prop('checked', true);
          }
          nowpowerlist.show();
        });
      }
    },1);

    nowtab.find('a.savepermission').unbind('click').click(function() {
      var allpers = nowtab.find('ul.regAdminList input[type=checkbox]').map(function() {
        return '{"code":"' + $(this).attr('name') + '","hasPermissiom":' + ($(this).prop('checked') ? '1' : '0') + '}'
      }).get();

      var p_permission = '[' + allpers.join(',') + ']';

      Api.getCommon('mpermission', {
        userId: uid,
        action: 'POST',
        permission: p_permission
      }, function(d) {
        if (parseInt(d.code, 10) == 1) {
          me.showTip('设置成功！', nowtab.find('a.savepermission'));
        } else {
          me.showTip(d.msg, nowtab.find('a.savepermission'));
        }
      },1);

    });
  },
  showSecondLay: function(node, usertab, type, uid) {
    node.find('.panel-tab').hide();
    var nowtab = node.find('.panel-sec[name=' + type + ']');
    nowtab.show();
    nowtab.find('ul.pointrate').hide();
    var me = this;
    me[me.firevent[type]](uid, nowtab);
  },
  showUserinfo: function(uid, nowtab) {
    var me = this;

    var lefth = me.h - nowtab.find('div.panel-sectab').height() - nowtab.find('ul.head-tab').height() - 60;
    nowtab.find('ul.data:eq(0)').show();
    nowtab.find('ul.head-tab').hide();
    nowtab.find('ul.pointrate').hide();

    nowtab.find('a.backinfo').unbind('click').click(function() {
      nowtab.find('ul.data:eq(0)').show();
      nowtab.find('h3').addClass('on');
      nowtab.find('ul.panel-usrinfo li').removeClass('on');
      nowtab.find('ul.head-tab').hide();
      nowtab.find('ul.pointrate').hide();
    });

    nowtab.find('.panel-sectab h3').addClass('on');
    nowtab.find('ul.sectab li.on').removeClass('on');

    Api.getCommon('userinfo', {
      userId: uid
    }, function(info) {
      var infos = {
        'infos': [info.result]
      };
      var infotpl = [
        '<% for ( var i = 0; i < infos.length; i++ ) { %>',
        '<li class="listhead split11"><span>用户名</span><span class="last"><%=infos[i].userName%></span></li>',
        '</span></li>',
        '<li class="split11"><span>用户类型</span><span class="last"><%=infos[i].userType|Q.userChs%></span></li>',
        '</span></li>',
        '<li class="split11"><span>可用金额</span><span class="last">￥<%=infos[i].balance%></span></li>',
        '</span></li>',
        //'<li class="split11"><span>奖金限额</span><span class="last">￥<%=infos[i].awardLimit%></span></li>',
        //'</span></li>',
        '<li class="split11"><span>最后登录时间</span><span class="last"><%=infos[i].lastLogin%></span></li>',
        '</span></li>',
        '<% } %>'
      ].join('');

      var ratesec_tpl = [
        '<% for ( var i = 0; i < userPoints.length; i++ ) { %>',
        '<li name="<%=userPoints[i].lottery%>"><%=userPoints[i].lottery|Q.lotteryChs%></li>',
        '<% } %>'
      ].join('');

      nowtab.find('ul.data:eq(0)').html(tmpl.apply(this, ['lotteryinfo', infotpl, infos]));
      //用户信息彩种列表
      nowtab.find('ul.panel-usrinfo').html(tmpl.apply(this, ['lotteryrate_sec', ratesec_tpl, info.result]));
      nowtab.find('.panel-sectab h3').css({
        "height": nowtab.find('.panel-sectab').height(),
        "line-height": nowtab.find('.panel-sectab').height() + 'px'
      });
      // 绑定彩种点击事件
      nowtab.find('ul.panel-usrinfo li').unbind('click').click(function() {
        var lname = $(this).attr('name');
        nowtab.find('h3').removeClass('on');
        nowtab.find('ul.panel-usrinfo li').removeClass('on');
        $(this).addClass('on');

        nowtab.find('ul.pointrate').html('<li class="bloading" name="detail-pointrate"><div class="ui-dialog-loading"></div></li>');
        nowtab.find('ul.pointrate li.bloading').height(260);

        nowtab.find('ul.data:eq(0)').hide();
        nowtab.find('ul.head-tab').show();
        nowtab.find('ul.pointrate').height(lefth).show();
        Api.getCommon('lotterypointrate', {
          lottery: lname,
          userId: uid
        }, function(prate) {
          nowtab.find('ul.data:eq(0)').hide();
          nowtab.find('ul.head-tab').show();
          var infop = {
            'infos': prate.result
          };

          var infoptpl = [
            '<% for ( var i = 0; i < infos.length; i++ ) { %>',
            '<li class="split5"><span><%=infos[i].playGroupName%></span><span><%=infos[i].bonusName%></span><span><%=infos[i].reward%></span><span><%=infos[i].point|Q.percentFormat%>%</span><span class="last"><%=infos[i].status|Q.agentStatusChs%></span></li>',
            '<% } %>'
          ].join('');
          nowtab.find('ul.pointrate').html(tmpl.apply(this, ['lotteryinfo_p', infoptpl, infop]));

          lefth = me.h - nowtab.find('div.panel-sectab').height() - nowtab.find('ul.head-tab').height() - 60;

          nowtab.find('ul.pointrate').height(lefth).show();
        });
      });
    },1);
  },
  showTeaminfo: function(uid, nowtab) {
    var me = this;
    nowtab.find('li.bloading[name=team]').height(490);
    var startFrom = nowtab.find("input[name=teamStartTime]");
    var endTo = nowtab.find("input[name=teamEndTime]");

    startFrom.datetimepicker({
      id: 'team_start',
      lang: 'zh',
      value: '-1970/01/01',
      minDate: '-1970/03/31',
      maxDate: '+1970/01/01',
      step: 1,
      type: ':first'
    });
    endTo.datetimepicker({
      id: 'team_end',
      lang: 'zh',
      value: '+1970/01/01',
      minDate: '-1970/03/31',
      maxDate: '+1970/01/01',
      step: 1,
      type: ':last'
    });


    var serachParams = {
      startTime: $('#team_start').val() || '',
      endTime: $('#team_end').val() || ''
    };

    var getteaminfo = function(p) {
      p['failed'] = function() {
        nowtab.parent().find('ul.tablst li').removeAttr('lock');    
      };
      Api.getCommon('getteaminfo', p, function(tinfo) {
        if (tinfo == 'error') {
          return false;
        }

        if (tinfo.code == '4006') {
          $('ul.tablst li[name=' + nowtab.attr('name') + ']').hide();
        } else {
          $('ul.tablst li[name=' + nowtab.attr('name') + ']').show();
          var d = tinfo.result;
          if (typeof d !== 'undefined') {
            nowtab.find('div.itemlist ul li:eq(0) span em').html(d.realBetAmount);
            nowtab.find('div.itemlist ul li:eq(1) span em').html(d.bonusAmount);
            nowtab.find('div.itemlist ul li:eq(2) span em').html(d.rebateAmount);
            nowtab.find('div.itemlist ul li:eq(3) span em').html(d.commissonAmount);
            nowtab.find('div.itemlist ul li:eq(4) span em').html(d.payAmount);
            nowtab.find('div.itemlist ul li:eq(5) span em').html(d.withdrawAmount);
            nowtab.find('div.itemlist ul li:eq(6) span em').html(d.newUserCount);
            nowtab.find('div.itemlist ul li:eq(7) span em').html(d.profitAndLoss);  
          }
          
        }

        //解锁
        nowtab.parent().find('ul.tablst li[name=team]').removeAttr('lock');
      },1);

      Api.getCommon('getproxyinfo', {cache:1}, function(pi) {
        if (typeof pi.result !== 'undefined') {
          nowtab.find('div.itemlist ul li:eq(8) span em').html(pi.result.teamBalance);  
        }
      }, 1);
    };
    nowtab.find('a#viewmy').unbind('click').click(function() {
      var reltag = $(this).attr('rel');
      var nametag = $(this).attr('name');
      Api.getCommon('getagentquota',{'userName':nowtab.parent().find('ul.summary em:eq(0)').html()}, function(qo) {
        if (qo !== -1) {
          me.showSecondLay(nowtab.parent(), nowtab, reltag, nametag);  
        }else {
          $(".loginlnk").trigger('click');
        }
      });
    });

    nowtab.find('a.switchbtn').unbind('click').click(function() {
      var swp = {};
      var nowrange = $(this).attr('name');
      var now = new Date();

      $(this).removeClass('disabled').siblings('a.switchbtn').addClass('disabled');

      if (nowrange == '0') {
        swp['startTime'] = now.Format('YYYY-MM-DD 00:00:00');
        swp['endTime'] = now.Format('YYYY-MM-DD 23:59:59');
      }
      if (nowrange == '-1') {
        swp['startTime'] = now.DateAdd('d', -1).Format('YYYY-MM-DD 00:00:00');
        swp['endTime'] = now.DateAdd('d', -1).Format('YYYY-MM-DD 23:59:59');
      }
      if (nowrange == '-6') {
        swp['startTime'] = now.DateAdd('d', -6).Format('YYYY-MM-DD 00:00:00');
        swp['endTime'] = now.Format('YYYY-MM-DD 23:59:59');
      }
      getteaminfo(swp);
    });

    nowtab.find('a.searchTeam').unbind('click').click(function() {
      var swp = {};
      var teamSt = new Date(startFrom.val());
      var teamEd = new Date(endTo.val());
      var oldSt = startFrom.val();
      if (teamSt > teamEd) {
        startFrom.val(endTo.val());
        endTo.val(oldSt);
      }
      
      swp['startTime'] = new Date(startFrom.val()).Format('YYYY-MM-DD 00:00:00');
      swp['endTime'] = new Date(endTo.val()).Format('YYYY-MM-DD 23:59:59');
      
      //swp['startTime'] = startFrom.val();
      //swp['endTime'] = endTo.val();
      getteaminfo(swp);
    });

    // 初始化点击今天
    if (nowtab.find('a.switchbtn:not(.disabled)').length > 0) {
      nowtab.find('a.switchbtn:not(.disabled)').trigger('click');
    } else {
      nowtab.find('a.switchbtn[name=0]').trigger('click');
    }
  },
  showBalance: function(uid, nowtab) {
    Api.getCommon('userinfo', {
      'userId': uid
    }, function(info) {
      if (info.code == '4006') {
        return false;
      }
      var infos = {
        'infos': [info.result]
      };
      var infotpl = [
        '<% for ( var i = 0; i < infos.length; i++ ) { %>',
        '<li class="listhead split11"><span>用户名</span><span class="last"><%=infos[i].userName%></span></li>',
        '</span></li>',
        '<li class="split11"><span>账户余额</span><span class="last">￥<%=infos[i].balance%></span></li>',
        '</span></li>',
        '<li class="split11"><span class="higher">充值金额</span><span class="last higher">￥<input type="text" value="0" name="gooutCash" min="0" max="10000000" step="1" class="money spinner"/></span></li>',
        '</span></li>',
        '<li class="split11"><span class="higher">&nbsp;</span><span class="last higher"><a rel="',
        User.app,
        '/pay/agentTransferIndexView#lowerUserName=<%=infos[i].userName%>&uin=' + uid + '&amount=" target="_blank" class="hand gotolnk">去充值</a></span></li>',
        '</span></li>',
        '<% } %>'
      ].join('');

      nowtab.find('ul.data').html(tmpl.apply(this, ['lotteryinfo', infotpl, infos]));

      nowtab.find('a.gotolnk').off('click').on('click', function(evt) {
        //evt.preventDefault();
        var lnkurl = $(this).attr('rel');
        $(this).attr('href', lnkurl + nowtab.find('input[name=gooutCash]').val());
        return true;
      });

      nowtab.find('input[name=gooutCash]').val(100);
      nowtab.find('input[name=gooutCash]').inputNumber();

      var initurl = nowtab.find('a.gotolnk').attr('rel');
      nowtab.find('a.gotolnk').attr('href', initurl + '0');
    },1);
  },
  showCombine: function(uid, nowtab) {
    var me = this;
    nowtab.find('input[name=jointyp]').val('0');
    nowtab.find('div.list[name=joinform]').hide();
    nowtab.find('a.joinCombine').show();
    nowtab.find('a.sureCombine').css({
      'display': 'none'
    });
    nowtab.find('div.list[name=joinlist]').show();
    nowtab.find('a.sureCombine').html('确认合庄');

    Api.getCommon('searchCombine', {}, function(rates) {
      var d = rates.result;
      if (typeof d.list !== 'undefined') {
        var allrates = {};
        for (i = 0; i < d.list.length; i++) {
          allrates[d.list[i].code] = {
            'b': d.list[i].balanceTotal,
            'sec': d.list[i].seconds
          }
        }
      }
      //查询当前彩种合庄信息
      nowtab.find('input[name=precombine]').on('change', function() {
        var total = allrates[nowtab.find('select[name=combineLottery]').val()].b;
        var sec = allrates[nowtab.find('select[name=combineLottery]').val()].sec;
        var insert = parseInt(nowtab.find('input[name=precombine]').val(), 10);
        var nrate = insert / total;
        var showrate = Q.percentFormat(nrate, 4);
        if (showrate == '0') {
          showrate = Q.percentFormat(nrate, 6);
        }
        nowtab.find('.nowcombinerate').html(showrate + '%');
        nowtab.find('.nowcombinepre').html(Q.doubleFormat((insert / 1950) * (1950 * nrate)));
      });
      nowtab.find('select[name=combineLottery]').on('change', function() {
        if ($(this).val() == '') {
          return false;
        }

        var total = allrates[$(this).val()].b;
        var sec = allrates[$(this).val()].sec;
        var insert = parseInt(nowtab.find('input[name=precombine]').val(), 10);
        var nrate = insert / total;
        var showrate = Q.percentFormat(nrate, 4);
        if (showrate == '0') {
          showrate = Q.percentFormat(nrate, 6);
        }

        var _date = new Date().valueOf() + sec * 1000;
        var ag_clock = nowtab.find('.clock');
        if (me.counter == null) {
          me.counter = ag_clock;
          ag_clock.countdown(_date.toString(), function(event) {
            t = event.offset.hours * 60 * 60 + event.offset.minutes * 60 + event.offset.seconds;
            $(this).html(event.strftime(t >= 3600 ? '%#H:%#M:%#S' : '%#M:%#S'));
          }).on('finish.countdown', function() {
            if (dialog.get('go-next-issue') === undefined) {
              tip = dialog({
                id: 'go-next-issue',
                skin: 'go-next-issue',
                title: '合庄提示',
                content: '<p>本期合庄结束</p>',
                cancel: false,
                fixed: true,
                button: [{
                  id: 'clock_ok',
                  value: '确&nbsp;&nbsp;&nbsp;&nbsp;定',
                  callback: function() {
                    var _datetemp = new Date().valueOf() + 100 * 1000;
                    ag_clock.countdown(_datetemp.toString());
                  }
                }]
              });
              tip.showModal();
            }
          });
        } else {
          ag_clock.countdown(_date.toString());
        }

        nowtab.find('.nowcombinerate').html(showrate + '%');
        nowtab.find('.nowcombinepre').html(Q.doubleFormat((insert / 1950) * (1950 * nrate)));
      });
    },1);
    var nowClist = nowtab.find('ul.combinemoneyList:eq(0)');
    nowClist.html('<li class="blankplace" name="combinelst"><div class="blankplace">您还没有合庄记录</div></li>');

    Api.getCommon('queryCombineLst', {}, function(lst) {
      var d = lst.result;
      var combinetpl = [
        '<% for ( var i = 0; i < list.length; i++ ) { %>',
        '<li class="split8">',
        '<span><%=list[i].time%></span>', '<span class="autohide small"><%=list[i].lottery%></span>', '<span>￥<%=list[i].combineTotal|Q.doubleFormat%></span>', //'<span><%=list[i].method%></span>','<span><%=list[i].issue%></span>',
        '<span>￥<%=list[i].combineTotal|Q.doubleFormat%></span>', '<span><%=list[i].mycombinePercent|Q.percentFormat%>%</span>', '<span class="small">未开始</span>',
        '<span class="big"><%=list[i].applytime%></span>',
        '<span class="hand last"><a class="hand cancelcombine" code="<%=list[i].code%>">取消合庄</a>&nbsp;<a class="recombine hand">补充合庄资金</a></span>',
        '</li>',
        '<% } %>'
      ].join('');

      nowClist.html(tmpl.apply(this, ['combinelist', combinetpl, d]));
      nowClist.find('a.recombine').off('click').on('click', function() {
        nowtab.find('a.sureCombine').html('确认补充');
        nowtab.find('input[name=jointyp]').val('1');
        nowtab.find('div.list[name=joinform]').show();
        nowtab.find('a.joinCombine').hide();
        nowtab.find('a.sureCombine').css({
          'display': 'inline-block'
        });
        nowtab.find('div.list[name=joinlist]').hide();
      });

      nowClist.find('a.cancelcombine').off('click').on('click', function() {
        var nowcancel = $(this);
        nowtab.find('input[name=jointyp]').val('2');
        var d = dialog({
          title: '取消合庄',
          skin: 'confirm-again',
          content: '取消合庄将会把所有的合庄金额全部撤回，您确定要取消合庄吗？',
          button: [{
            id: 'clear_ok',
            value: '确定',
            callback: function() {
              Api.getCommon('joinBanker', {
                lottery: nowClist.find('a.cancelcombine').attr('code'),
                amount: 0,
                type: nowtab.find('input[name=jointyp]').val(),
                action: 'POST'
              }, function(d) {
                if (parseInt(d.code, 10) === 1) {
                  me.showTip('撤庄成功！', nowcancel);
                  d.close().remove();
                } else {
                  me.showTip(d.msg, nowcancel);
                }
                //nowset.removeClass('loading');
              });
              d.close().remove();
            }
          }, {
            id: 'clear_cancel',
            skin: 'cancel',
            value: '取消'
          }]
        }).showModal();
      });
    },1);
    nowtab.find('a.sureCombine').off('click').on('click', function() {
      Api.getCommon('joinBanker', {
        //userId: me.uuid,
        lottery: nowtab.find('select[name=combineLottery]').val(),
        amount: nowtab.find('input[name=precombine]').val(),
        type: nowtab.find('input[name=jointyp]').val(),
        action: 'POST'
      }, function(d) {
        if (parseInt(d.code, 10) === 1) {
          me.showTip(nowtab.find('a.sureCombine').html().replace('确认', '') + '成功！', nowtab.find('a.sureCombine'));

          setTimeout(function() {
            nowtab.find('input[name=jointyp]').val('0');
            nowtab.find('div.list[name=joinform]').hide();
            nowtab.find('a.joinCombine').show();
            nowtab.find('a.sureCombine').css({
              'display': 'none'
            });
            nowtab.find('div.list[name=joinlist]').show();
          }, 2000);
        } else {
          me.showTip(d.msg, nowtab.find('a.sureCombine'));
        }
      });
    });
    nowtab.find('a.joinCombine').off('click').on('click', function() {
      nowtab.find('input[name=jointyp]').val('0');
      nowtab.find('div.list[name=joinform]').show();
      nowtab.find('a.joinCombine').hide();
      nowtab.find('a.sureCombine').css({
        'display': 'inline-block'
      });
      nowtab.find('div.list[name=joinlist]').hide();
    });
  },
  showCombineReport: function(uid, nowtab) {
    var me = this;
    var serachParams = {
      startTime: nowtab.find('input[name=startTime]').val(),
      endTime: nowtab.find('input[name=endTime]').val(),
      issue: nowtab.find('input[name=issueNumber]').val(),
      lottery: nowtab.find('select[name=lotteryChg]').val(),
      method: nowtab.find('select[name=methodChg]').val(),
      currPage: 1,
      pageSize: 6
    };

    if (arguments.length > 2) {
      var pParams = arguments[2];
      serachParams['pageSize'] = pParams['pageSize'];
      serachParams['currPage'] = pParams['currPage'];
      serachParams['page'] = pParams['currPage'];
    }
    Api.getCommon('queryCombineRpt', serachParams, function(rpt) {
      var d = rpt.result;
      var moneychangetpl = [
        '<% for ( var i = 0; i < list.length; i++ ) { %>',
        '<li class="splitmulti">',
        '<span><%=list[i].time%></span>', '<span class="autohide"><%=list[i].lottery%></span>', //'<span><%=list[i].method%></span>',
        '<span><%=list[i].issue%></span>', '<span>￥<%=list[i].combineTotal|Q.doubleFormat%></span>', '<span>￥<%=list[i].combineSale|Q.doubleFormat%></span>',
        '<span class="large">￥<%=list[i].combineBonus|Q.doubleFormat%></span>', '<span class="mini">￥<%=list[i].combineBalance|Q.doubleFormat%></span>', '<span>￥<%=list[i].mycombineTotal|Q.doubleFormat%></span>',
        '<span class="mini"><%=list[i].mycombinePercent|Q.percentFormat%>%</span>', '<span class="inlast">￥<%=list[i].mycombineBalance|Q.doubleFormat%></span>',
        '</li>',
        '<% } %>'
      ].join('');

      if (d.list.length > 0) {
        nowtab.find('ul.data:eq(0)').html(tmpl.apply(this, ['combinereport', moneychangetpl, d]));
        //判断是否显示滚动条
        var eachHeight = nowtab.find('ul.combineList li:eq(1)').height();
        var totalHeight = nowtab.find('ul.combineList').height();
        if (eachHeight * nowtab.find('ul.combineList li').size() > totalHeight) {
          nowtab.find('ul.combineList').removeClass('withoutscroll');
        } else {
          nowtab.find('ul.combineList').addClass('withoutscroll');
        }

        //本页金额变动
        nowtab.find('h4 em').html(parseFloat(d.pageChangeMoney).toFixed(4));
        //分页
        nowtab.find('div.pager').html(Q.showPagination(d.page.currPage || 1, d.page.pageSize, d.page.totalItem, null)).show();
      } else {
        nowtab.find('ul.data:eq(0)').html('<li name="combinereport" style="height: 260px;"><div class="blankplace">暂无数据</div></li>');
        nowtab.find('div.pager').html('');
      }

      nowtab.find('div.pager a').unbind('click').click(function() {
        var nowpage = parseInt($(this).attr('page'), 10);
        var pageParams = {};
        pageParams['currPage'] = nowpage;
        pageParams['page'] = nowpage;
        me.showCombineReport(uid, nowtab, pageParams);
      });
    });
  },
  showCombineRecord: function(uid, nowtab) {
    Api.getCommon('queryCombine', {}, function(lst) {
      var d = lst;
      var combinelsttpl = [
        '<% for ( var i = 0; i < result.length; i++ ) { %>',
        '<li class="split4">',
        '<span><%=result[i].createTime%></span>', '<span class="autohide"><%=result[i].lotteryName%></span>', //'<span><%=list[i].method%></span>',
        '<span>￥<%=result[i].amount|Q.doubleFormat%></span>', '<span class="last"><%=result[i].type|Q.combineChs%></span>',
        '</li>',
        '<% } %>'
      ].join('');
      if (d.result.length > 0) {
        nowtab.find('ul.combineLst:eq(0)').html(tmpl.apply(this, ['combinelst', combinelsttpl, d]));
        //判断是否显示滚动条
        var eachHeight = nowtab.find('ul.combineLst li:eq(1)').height();
        var totalHeight = nowtab.find('ul.combineLst').height();
        if (eachHeight * nowtab.find('ul.combineLst li').size() > totalHeight) {
          nowtab.find('ul.combineLst').removeClass('withoutscroll');
        } else {
          nowtab.find('ul.combineLst').addClass('withoutscroll');
        }

        //分页
        //nowtab.find('div.pager').html(Q.showPagination(d.page.currPage || 1, d.page.pageSize, d.page.totalItem, null)).show();  
      } else {
        nowtab.find('ul.combineLst:eq(0)').html('<li name="combinereport" style="height: 260px;"><div class="blankplace">暂无数据</div></li>');
        nowtab.find('div.pager').html('');
      }
    });
  },
  showChange: function(uid, nowtab) {
    var me = this;
    var userTab = nowtab.siblings().filter('[name=user]');
    var nowname = userTab.find('a.change[name=' + uid + ']').attr('username');
    var serachParams = {
      userName: nowname,
      currPage: 1,
      pageSize: 8,
      userId: uid,
      orderType: 1
    };
    me.getuserChange(serachParams, nowtab);
    var startFrom = nowtab.find("input[name=startTime]");
    var endTo = nowtab.find("input[name=endTime]");
    startFrom.datetimepicker({
      id: 'change_start',
      lang: 'zh',
      value: '-1970/01/01',
      minDate: '-1970/03/31',
      maxDate: '+1970/01/01',
      step: 1,
      type: ':first'
    });
    endTo.datetimepicker({
      id: 'change_end',
      lang: 'zh',
      value: '+1970/01/01',
      minDate: '-1970/03/31',
      maxDate: '+1970/01/01',
      step: 1,
      type: ':last'
    });
    nowtab.find('a.searchChange').off('click').on('click', function(e) {
      var serachP = {
        startTime: nowtab.find('input[name=startTime]').val(),
        endTime: nowtab.find('input[name=endTime]').val(),
        userName: nowtab.find('input[name=userNameChg]').val(),
        lottery: nowtab.find('select[name=lotteryChg]').val(),
        orderType: nowtab.find('select[name=orderTypeChg]').val(),
        mode: nowtab.find('select[name=modeChg]').val(),
        type: nowtab.find('select[name=changeType]').val(),
        currPage: parseInt(nowtab.find('div.pager a.on').attr('page'), 10),
        pageSize: 6,
        userId: uid
      };
      nowtab.find('ul.data:eq(0)').html('<li class="bloading" name="change"><div class="ui-dialog-loading"></div></li>');
      nowtab.find('li.bloading[name=change]').height(260);
      nowtab.find('h4 em').html('');
      me.getuserChange(serachP, nowtab);
    });

    nowtab.find('ul.data:eq(0)').off('scroll').on('scroll', function(e) {
      e.preventDefault();
      e.stopPropagation();
      //e.cancelBubble = true;
    });
  },
  getuserChange: function(serachParams, nowtab) {
    var me = this;
    serachParams['selectType'] = 1;
    nowtab.find("input[name=userNameChg]").val(serachParams['userName']);
    Api.getCommon('accountinfo', serachParams, function(info) {
      var d = info.result;
      var moneychangetpl = [
        '<% for ( var i = 0; i < list.length; i++ ) { %>',
        '<li class="splitmulti">',
        '<span><%=list[i].userName%></span>', '<span class="autohide large"><%=list[i].time%></span>', '<span><%=list[i].type|Q.changeTypeChs%></span>',
        '<span><%=list[i].lottery|Q.lotteryChs%></span>', '<span><%=list[i].orderType|Q.orderTypeChs%></span>', '<span><%=list[i].method|Q.getMethodName,list[i].lottery%></span>',
        '<span><%=list[i].issue%></span>', '<span class="small"><%=list[i].mode|Q.modeName%></span>', '<span>￥<%=list[i].moneyChange%></span>',
        '<span class="last">￥<%=list[i].balance%></span>',
        '</li>',
        '<% } %>'
      ].join('');
      if (d.list.length > 0) {
        nowtab.find('ul.data:eq(0)').html(tmpl.apply(this, ['lotterychange', moneychangetpl, d]));
        //判断是否显示滚动条
        var eachHeight = nowtab.find('ul.changeList li:eq(1)').height();
        var totalHeight = nowtab.find('ul.changeList').height();
        if (eachHeight * nowtab.find('ul.changeList li').size() > totalHeight) {
          nowtab.find('ul.changeList').removeClass('withoutscroll');
        } else {
          nowtab.find('ul.changeList').addClass('withoutscroll');
        }

        //本页金额变动
        nowtab.find('h4 em').html(parseFloat(d.pageChangeMoney).toFixed(4));
        //分页
        nowtab.find('div.pager').html(Q.showPagination(d.page.currPage || 1, d.page.pageSize, d.page.totalItem, null)).show();
      } else {
        nowtab.find('ul.data:eq(0)').html('<li name="change" style="height: 260px;"><div class="blankplace">暂无数据</div></li>');
        nowtab.find('div.pager').html('');
      }
      nowtab.find('div.pager a').unbind('click').click(function() {
        var nowpage = parseInt($(this).attr('page'), 10);
        serachParams['currPage'] = nowpage;
        serachParams['page'] = nowpage;
        me.getuserChange(serachParams, nowtab);
      });
    },1);
  },
  showSetting: function(uid, nowtab) {
    var me = this;
    var refreshUserinfo = function(uid, nowtab) {
      Api.getCommon('userinfo', {
        userId: uid
      }, function(info) {
    	 var infos = {
          'infos': [info.result]
        };
        var infotpl = [
          '<% for ( var i = 0; i < infos.length; i++ ) { %>',
          '<li class="split3"><span><%=infos[i].userName%></span><span><%=infos[i].userName%></span><span class="last">￥<%=infos[i].awardLimit|Q.doubleFormat%></span></li>',
          '</span></li>',
          '<% } %>'
        ].join('');
        var regrate_tpl = [
          '<% for ( var i = 0; i < userPoints.length; i++ ) { %>',
          '<li class=" split2"><span><%=userPoints[i].lottery|Q.lotteryChs%></span><span class="s2last"><%=userPoints[i].lotteryPoint|Q.percentFormat%>%(范围：<%=userPoints[i].lotteryPoint|Q.percentFormat%>%~<%=userPoints[i].agentLotteryPoint|Q.percentFormat%>%)</span></li>',
          '<% } %>'
        ].join('');

        nowtab.find('ul.data:eq(0)').html(tmpl.apply(this, ['lotteryinfo', infotpl, infos]));
        //彩种比率3，单个用户返点设置
        nowtab.find('ul.data:eq(1)').html(tmpl.apply(this, ['lotteryrate', regrate_tpl, info.result]));

        var rateselect_tpl = [
          '<option value="" selected="selected">全部</option>',
          '<% for ( var i = 0; i < userPoints.length; i++ ) { %>',
          '<option value="<%=userPoints[i].lottery%>"><%=userPoints[i].lottery|Q.lotteryChs%></option>',
          '<% } %>'
        ].join('');
        
        nowtab.find('select[name=settingList]').html(tmpl.apply(this, ['lotteryselect', rateselect_tpl, info.result]));
        
        //最大可修改的返点值
        var renderRate = function(rateJson) {
        	
        	var point = Q.floatMul(rateJson.lotteryPoint,1000);
        	var agentPoint = Q.floatMul(rateJson.agentLotteryPoint,1000);
        	var maxPoint = Q.floatMul(rateJson.maxLotteryPoint,1000);
        	
        	var startPoint,endPoint;
        	if(point < maxPoint){
        		startPoint = point + 1;
        		if(agentPoint >= maxPoint){
        			endPoint = maxPoint;
        		}else{
        			endPoint = agentPoint;
        		}
        	}
        	
        	var thisselect = [];
        	if(startPoint){
        		for(var i = startPoint;i<=endPoint;i++){
        			var setval = Q.floatDiv(i,1000);
        			var v = Q.floatDiv(i,10);
        			thisselect.push('<option value="' + setval + '">' + v + '%</option>');
        		}
        	}
          thisselect.unshift('<option value="" selected="selected">请选择</option>');
          nowtab.find('select.subrate').html(thisselect.join(''));
          if (thisselect.length == 1 || nowtab.find('select.subrate').val() === '') {
            nowtab.find('a.setuserpoint').addClass('disabled');
          } else {
            nowtab.find('a.setuserpoint').removeClass('disabled');
          }
        }

        var alllotteryPoint = [],
          lpDict = {};
        info.result.userPoints.map(function(el, k) {
          alllotteryPoint.push(el.lotteryPoint);
          lpDict[el.lottery] = {};
          lpDict[el.lottery].lotteryPoint = el.lotteryPoint;
          lpDict[el.lottery].agentLotteryPoint = el.agentLotteryPoint;
          lpDict[el.lottery].maxLotteryPoint = el.maxLotteryPoint;
        });

        var mp = {};
        mp.lotteryPoint = info.result.selfSscPoint;
        mp.agentLotteryPoint = info.result.agentSscPoint;
		    mp.maxLotteryPoint = info.result.maxSscPoint;
        lpDict[''] = mp;

        if (nowtab.find('select[name=settingList]').val() == '') {
          renderRate(mp);
        } else {
          if (typeof lpDict[nowtab.find('select[name=settingList]').val()] !== 'undefined') {
            renderRate(lpDict[nowtab.find('select[name=settingList]').val()]);
          }
        }

        var eachHeight = nowtab.find('ul.settingList li:eq(1)').height();
        var totalHeight = nowtab.find('ul.settingList').height();
        if (eachHeight * nowtab.find('ul.settingList li').size() > totalHeight) {
          nowtab.find('ul.data:eq(1)').removeClass('withoutscroll');
        } else {
          nowtab.find('ul.data:eq(1)').addClass('withoutscroll');
        }

        nowtab.find('select').off('change').on('change', function() {
        	if (typeof lpDict[$(this).val()] !== 'undefined') {
        		renderRate(lpDict[$(this).val()]);
        	}
          if (nowtab.find('select[name=settingRate]').val() != '') {
            nowtab.find('a.setuserpoint').removeClass('disabled');
          } else {
            nowtab.find('a.setuserpoint').addClass('disabled');
          }
        });
      },1);
    }

    nowtab.find('a.setuserpoint').unbind('click').click(function() {
      var nowset = $(this);
      if ($(this).hasClass('disabled')) {
        if (nowtab.find('select[name=settingRate]').val() == '') {
          me.showTip('请选择彩种返点比率', nowtab.find('select[name=settingRate]'));
        }
        return false;
      }
      var lname = $(this).attr('name');
      nowset.addClass('loading');
      Api.getCommon('setpoints', {
        userId: uid,
        lottery: nowtab.find('select.firstlbSetting').val(),
        point: nowtab.find('select.subrate').val(),
        action: 'POST'
      }, function(d) {
        if (parseInt(d.code, 10) === 1) {
          me.showTip('设置返点成功！', nowtab.find('a.setuserpoint'));
          refreshUserinfo(uid, nowtab);
        } else if (d == -1) {
          $('.loginlnk').trigger('click');
        } else {
          me.showTip(d.msg, nowtab.find('a.setuserpoint'));
        }
        nowset.removeClass('loading');
      },1);
    });

    refreshUserinfo(uid, nowtab);
  },
  getQuotas: function(uid, nowtab) {
    var me = this;
    var pnode = $(nowtab).parent();
    var nick = pnode.find('ul.summary em:eq(0)').html();
    
    //返回
    $(nowtab).find('a.backlnk').unbind('click').click(function() {
      pnode.find('.title > ul li.on').removeClass('on');
      pnode.find('.title > ul li[name=team]').addClass('on');
      pnode.find('.panel-tab').hide();
      pnode.find('.panel-tab[name=team]').show();  
    });
    
    $(nowtab).find('em.dupnick').html(nick);
    $(nowtab).find('li.bloading[name=quota]').height(260);

    var renderQuota = function() {
      var quotaParams = {'userName':nick};
      Api.getCommon('getagentquota',quotaParams, function(qo) {
        //渲染列表
        var d = qo.result;
        var quotatpl = [
          '<% for ( var i = 0; i < list.length; i++ ) { %>',
          '<li class="split5">',//<span>返点</span><span>状态</span><span>配额总量</span><span>消耗配额</span><span class="last">剩余配额</span></li>
          '<span><%=list[i].point%>%</span>',
          '<span><%=list[i].quotaCount%></span>', //'<span><%=list[i].method%></span>',
          '<span><%=list[i].quotaAssigned%></span>',
          '<span><%=list[i].quotaTotal%></span>',
          '<span><%=list[i].quotaFinal%></span>',
          '</li>',
          '<% } %>'
        ].join('');

        if (d.list.length > 0) {
          nowtab.find('ul.data:eq(0)').html(tmpl.apply(this, ['quotalist', quotatpl, d]));
          //判断是否显示滚动条
          var eachHeight = nowtab.find('ul.data li:eq(1)').height();
          var totalHeight = nowtab.find('ul.data').height();
          if (eachHeight * nowtab.find('ul.data li').size() > totalHeight) {
            nowtab.find('ul.data').removeClass('withoutscroll');
          } else {
            nowtab.find('ul.data').addClass('withoutscroll');
          }
        } else {
          nowtab.find('ul.data:eq(0)').html('<li name="combinereport" style="height: 260px;"><div class="blankplace">暂未分配配额</div></li>');
        }
      },1);  
    }
    renderQuota();
  },
  showQuotas: function(uid, nowtab) {
    var me = this;
    var pnode = $(nowtab).parent();
    //返回
    $(nowtab).find('a.backlnk').unbind('click').click(function() {
      pnode.find('.title > ul li.on').removeClass('on');
      pnode.find('.title > ul li[name=user]').addClass('on');
      pnode.find('.panel-tab').hide();
      pnode.find('.panel-tab[name=user]').show();  
    });
    var nick = $(nowtab).parent().find('ul.summary em:eq(0)').html();
    var userTab = nowtab.siblings().filter('[name=user]');
    var nowname = userTab.find('a.quota[name=' + uid + ']').attr('username');
    var quotapoint = Q.floatMul(userTab.find('a.quota[name=' + uid + ']').attr('quota'),100);
    $(nowtab).find('em.dupnick').html(nowname);
    $(nowtab).find('li.bloading[name=setquota]').height(260);
    var refreshQuota = function() {
      Api.getCommon('getagentquotabyusr', {
        userId:uid
      }, function(d) {
        //渲染列表
        var d = d.result;
        if (d.resultList.length==0) {
          return false;  
        }
        nowtab.find('.panel-fright em').html(quotapoint);
        var quotatpl = [
          '<% for ( var i = 0; i < resultList.length; i++ ) { %>',
          '<li class="split6">',//<span>返点</span><span>状态</span><span>配额总量</span><span>消耗配额</span><span class="last">剩余配额</span></li>
          '<span><%=resultList[i].point%>%</span>',
          //'<span><%=resultList[i].status%></span>', //'<span><%=list[i].method%></span>',
          '<span><%=resultList[i].quotaCount%></span>',
          '<span><%=resultList[i].quotaAssigned%></span>',
          '<span><%=resultList[i].quotaFinal%></span>',
          '<span>最多<em><%=resultList[i].maxAssigend%></em>：<input type="text" name="distribute" value="" min="0" max="<%=resultList[i].maxAssigend%>" class="spinner" onkeypress="return event.charCode >= 48 && event.charCode <= 57"/><a class="hand surequota" name="<%=resultList[i].quotaId%>" rel="assigned">确定</a></span>',
          '<span class="last">最多<em><%=resultList[i].maxgc%></em>：<input type="text" name="recover" value="" min="0" max="<%=resultList[i].maxgc%>" class="spinner"/><a class="hand surequota" rel="quotagc" name="<%=resultList[i].quotaId%>">确定</a></span>',
          //'<span></span>',
          '</li>',
          '<% } %>'
        ].join('');

        if (d.resultList.length > 0) {
          nowtab.find('ul.data:eq(0)').html(tmpl.apply(this, ['quotalist', quotatpl, d]));
          //判断是否显示滚动条
          var eachHeight = nowtab.find('ul.data li:eq(1)').height();
          var totalHeight = nowtab.find('ul.data').height();
          if (eachHeight * nowtab.find('ul.data li').size() > totalHeight) {
            nowtab.find('ul.data').removeClass('withoutscroll');
          } else {
            nowtab.find('ul.data').addClass('withoutscroll');
          }
          nowtab.find('input[name=distribute]').val(0).inputNumber();
          nowtab.find('input[name=recover]').val(0).inputNumber();

          //调整配额
          
          $(nowtab).find('a.surequota').unbind('click').click(function() {
            var nowset = $(this);
            var thisline= $(this).parent().parent();
            var urlswitch = $(this).attr('rel')=='assigned'?'quotaassign':'quotagc';
            var urlparams = {
              id:$(this).attr('name'),
              quotaAssigned: thisline.find('input:eq(0)').val()
            };
            if ($(this).attr('rel')=='quotagc') {
              urlparams = {
                id:$(this).attr('name'),
                quotagc: thisline.find('input:eq(1)').val()
              };  
            }
            Api.getCommon(urlswitch,urlparams, function(res) {
              if (parseInt(res.code, 10) === 1) {
                me.showTip('设置配额成功', nowset);
              } else {
                me.showTip('设置配额失败，原因：'+res.msg, nowset);
              }
              refreshQuota();   
            },1);  
          });
        } else {
          nowtab.find('ul.data:eq(0)').html('<li name="combinereport" style="height: 260px;"><div class="blankplace">暂无数据</div></li>');
        }
      },1);  
    }
    refreshQuota();
  },
  //按钮类型提示
  showTip: function(msg, btn) {
    var second = 1200;
    var autofocus = true;
    if (arguments.length > 2) {
      second = arguments[2];
    }
    if (arguments.length > 3) {
      autofocus = arguments[3];
    }
    var me = this;
    var tip = dialog({
      id: 'tracerateno',
      align: 'top',
      skin: 'tip',
      content: msg,
      onshow: function() {
        var that = this;
        setTimeout(function() {
          that.close().remove();
          if (btn[0].tagName == 'INPUT' && autofocus && (btn[0].type == 'text' || btn[0].type == 'password')) {
            btn.focus();
          }
        }, second);
        return false;
      }
    }).show(btn[0]);
  }
};

Agent.init();
/* jshint devel:true */

var Report = Report || {};

Report = {
  w: 1070,
  h: 560,
  maxrate: 7.5,
  usermax: 6,
  init: function() {
    var me = this;
    $('.aside .btns a.go-report').unbind('click').click(function() {
      if ($(this).hasClass('disabled')) {
        return false;   
      }
      
      Api.getCommon('agentlink', {}, function(p) {
        if (parseInt(p, 10) === -1) {
          User.chkLogin(function() {
            me.showLayout();
          });
          return false;
        } else {
          me.showLayout();
        }
      });
    });
  },
  showLayout: function() {
    var me = this;
    var pop = dialog({
      id: 'report_list',
      title: ' ',
      skin: 'sobet report-pop',
      width: me.w,
      height: me.h,
      onshow: function() {
        $('body').addClass('lockscroll');
      },
      onclose: function() {
        $('body').removeClass('lockscroll');
      },
      fixed: true
    });
    //推广链接设定（完成）
    //用户列表 [详情，游戏账变，充值，返点设置] （完成）
    //注册管理（完成）
    //团队（完成）
    Api.getHtml('report', 'html', {}, function(res) {
      pop.content(res);
      pop.addEventListener('show', function() {
        var $node = $(this.node);
        //设置loading默认高度
        $node.find('li.bloading[name=search]').height(260);
        $node.find('li.bloading[name=bonus]').height(350);
        $node.find('li.bloading[name=change]').height(260);
        
        //日期选择控件
        var startFrom = $node.find('.panel-tab[name=change] input[name=startTime]');
        var endTo = $node.find('.panel-tab[name=change] input[name=endTime]');
        var s_startFrom = $node.find('.panel-tab[name=search] input[name=startTime]');
        var s_endTo = $node.find('.panel-tab[name=search] input[name=endTime]');
        var b_startFrom = $node.find('.panel-tab[name=bonus] input[name=startTime]');
        var b_endFrom = $node.find('.panel-tab[name=bonus] input[name=endTime]');
        var team_startFrom = $node.find('.panel-tab[name=searchteam] input[name=startTime]');
        var team_endFrom = $node.find('.panel-tab[name=searchteam] input[name=endTime]');

        s_startFrom.datetimepicker({
          id: 'search_start_dtp',
          lang: 'zh',
          value: '-1970/01/01',
          minDate: '-1970/03/31',
          maxDate: '+1970/01/01',
          step: 1,
          type: ':first'
        });
        s_endTo.datetimepicker({
          id: 'search_end_dtp',
          lang: 'zh',
          value: '+1970/01/01',
          minDate: '-1970/03/31',
          maxDate: '+1970/01/01',
          step: 1,
          type: ':last'
        });
        startFrom.datetimepicker({
          id: 'change_start_dtp',
          lang: 'zh',
          value: '-1970/01/01',
          minDate: '-1970/03/31',
          maxDate: '+1970/01/01',
          step: 1,
          type: ':first'
        });
        endTo.datetimepicker({
          id: 'change_end_dtp',
          lang: 'zh',
          value: '+1970/01/01',
          minDate: '-1970/03/31',
          maxDate: '+1970/01/01',
          step: 1,
          type: ':last'
        });
        b_startFrom.datetimepicker({
          id: 'bonus_start_dtp',
          lang: 'zh',
          timepicker: false,
          format:'Y/m/d',
          value: '-1970/01/08',
          minDate: '-1970/03/31',
          maxDate: '-1970/01/01'
        });
        b_endFrom.datetimepicker({
          id: 'bonus_end_dtp',
          lang: 'zh',
          timepicker: false,
          format:'Y/m/d',
          value: '+1970/01/01',
          minDate: '-1970/03/31',
          maxDate: '+1970/01/01'
        });
        team_startFrom.datetimepicker({
          id: 'team_start_dtp',
          lang: 'zh',
          value: '-1970/01/01',
          minDate: '-1970/03/31',
          maxDate: '+1970/01/01',
          step: 1,
          type: ':first'
        });
        team_endFrom.datetimepicker({
          id: 'team_end_dtp',
          lang: 'zh',
          value: '+1970/01/01',
          minDate: '-1970/03/31',
          maxDate: '+1970/01/01',
          step: 1,
          type: ':last'
        });
        
        //默认展开推广链接生成
        $node.find('.panel-tab[name=search]').show();
        me.showSecondLay($node, $node.find('.panel-tab[name=search]'), 'search');

        //功能切换
        $node.find('ul.tab li').unbind('click').click(function() {
          $node.find('ul.tab li.on').removeClass('on');
          $(this).addClass('on');
          $node.find('.panel-tab').hide();
          var nowtab = $node.find('.panel-tab[name=' + $(this).data('type') + ']');
          var nowtyp = $(this).data('type');
          $node.find('.panel-tab[name=' + $(this).data('type') + ']').show();

          if(!$(this).hasClass('showed')){
        	  $(this).addClass('showed');
              me.showSecondLay($node, nowtab, nowtyp);
          }
          //window.location.hash = $(this).attr('name');
        });  
        //彩种
        Api.getCommon('lotterypoints', {}, function(rate) {
        	
        	// 选择彩种中去除 WBG
        	$.each(rate.result,function(index,e){
        		if(e.lottery == "WBG"){
        			rate.result.splice(index,1);
        			return false;
        		}
        		return true;
        	});
        	
          var rateselect_tpl = [
            '<option value="" selected="selected">所有彩种</option>',
            '<% for ( var i = 0; i < result.length; i++ ) { %>',
            '<option value="<%=result[i].lottery%>"><%=result[i].lottery|Q.lotteryChs%></option>',
            '<% } %>'
          ].join('');
          //初始化select彩种列表
          $node.find('.panel-tab[name=search] select[name=lotteryChg]').html(tmpl.apply(this, ['lotteryselect', rateselect_tpl, rate]));
          $node.find('.panel-tab[name=change] select[name=lotteryChg]').html(tmpl.apply(this, ['lotteryselect', rateselect_tpl, rate]));
          $node.find('.panel-tab[name=searchteam] select[name=lotteryChg]').html(tmpl.apply(this, ['lotteryselect', rateselect_tpl, rate]));
          
        });

      });
      pop.showModal();
    });
  },
  showSecondLay: function(node, thistab, type) {
    var detailFun = {
      'search': 'showSearch',
      'searchteam':'showSearchTeam',
      'change': 'showChange',
      'bonus': 'showBonus'
    };
    var me = this;

    //setTimeout(function() {
    me[detailFun[type]]({}, thistab);
    //},10000);
    //me[detailFun[type]](thistab);
  },
  showSearch: function(p, tab) {
    var me = this;
    p['startTime'] = tab.find('#search_start').val();
    p['endTime'] = tab.find('#search_end').val();
    p['orderType'] = 1;
    p['userName'] = tab.find('#search_username').val();
    p['lottery'] = tab.find('select[name=lotteryChg]').val();    
   
    tab.find('ul.head li span.switch:eq(0)').html('下注总额');
    tab.find('ul.head li span.switch:eq(1)').html('返点总额');
    tab.find('ul.head li span.switch:eq(2)').html('实际下注总额');
    tab.find('ul.head li span.switch:eq(3)').html('返奖总额');

    Api.getCommon('reportquery', p, function(report) {
    	
      var report_tpl = [
        '<% for ( var i = 0; i < list.length; i++ ) { %>',
        '<li class="split10 <%=list[i].isSelf|Q.isSelf%>"><span><%=list[i].userName%></span>',
        '<span>￥<%=list[i].payAmount%></span>',
        '<span>￥<%=list[i].withdrawAmount%></span>',
        '<span>￥<%=list[i].realBetAmount%></span>',
        '<span>￥<%=list[i].bonusAmount%></span>',
        '<span>￥<%=list[i].rebateAmount|Q.formatNull%></span>',
        '<span>￥<%=list[i].commissonAmount%></span>',
        '<span>￥<%=list[i].activityBonus%></span>',
        '<span>￥<%=list[i].profitAndLoss%></span>',
        '<span class="last">￥<%=list[i].userBlance%></span>',
        '</li>',
        '<% } %>'
      ].join('');

      //查询
      tab.find('a.search').unbind('click').click(function() {
        tab.find('ul.data:eq(0)').html('<li class="bloading" name="search"><div class="ui-dialog-loading"></div></li>');
        tab.find('li.bloading[name=search]').height(350);

        var serachParams = {
          userName: tab.find('#search_username').val(),
          startTime: tab.find('#search_start').val(),
          endTime: tab.find('#search_end').val(),
          lottery: tab.find('select[name=lotteryChg]').val(),
          orderType: 1,
          type: tab.find('select[name=lotteryMode]').val(),
          pageSize: 6
        };

        serachParams['currPage'] = 1;
        serachParams['page'] = 1;
        me.showSearch(serachParams, tab);
      });  

      if(report === -1){
 		 $(".loginlnk").trigger('click');
 		 return false;
 	  }
      
      if (report.code == 1) {
        //有数据情况
        if (report.result.list.length>0) {
          tab.find('ul.data:eq(0)').html(tmpl.apply(this, ['reportsearch', report_tpl, report.result]));
          
          //判断是否显示滚动条
          var eachHeight = tab.find('ul.head:eq(0) li:eq(0)').height();
          var totalHeight = tab.find('ul.data:eq(0)').height();
          if (eachHeight * tab.find('ul.data:eq(0) li').size() < totalHeight) {
            tab.find('ul.data:eq(0)').removeClass('withoutscroll');
          } else {
            tab.find('ul.data:eq(0)').addClass('withoutscroll');
          }

          //分页
          tab.find('div.pager').html(Q.showPagination(report.result.page.currPage || 1, report.result.page.pageSize, report.result.page.totalItem, null)).show();


          tab.find('div.pager a').unbind('click').click(function() {
            var serachParams = {
              userName: tab.find('#search_username').val(),
              startTime: tab.find('#search_start').val(),
              endTime: tab.find('#search_end').val(),
              lottery: tab.find('select[name=lotteryChg]').val(),
              orderType: 1,
              type: tab.find('select[name=lotteryMode]').val(),
              pageSize: 6
            };

            var nowpage = parseInt($(this).attr('page'), 10);
            serachParams['currPage'] = nowpage;
            serachParams['page'] = nowpage;
            me.showSearch(serachParams, tab);
          });

        //无数据情况
        }else {
          tab.find('ul.data:eq(0)').html('<li class="blankplace" name="search"><div class="blank">暂无数据</div></li>');
          tab.find('li.blankplace[name=search]').height(350);
        }
      }else {
        tab.find('ul.data:eq(0)').html('<li class="blankplace" name="search"><div class="blank">' + report.msg + '</div></li>');
        tab.find('li.blankplace[name=search]').height(350);
      }
    });
  },
  showSearchTeam: function(p, tab) {
    var me = this;
    p['startTime'] = tab.find('#searchteam_start').val();
    p['endTime'] = tab.find('#searchteam_end').val();
    p['pageSize'] = 9;
    
    Api.getCommon('getteamreport', p, function(report) {
      var report_tpl = [
        '<% for ( var i = 0; i < list.length; i++ ) { %>',
        '<li class="split11 <%=list[i].isSelf|Q.isSelf%>"><span class="large" title="<%=list[i].userName%>"><a class="team_username"><%=list[i].userName%></a></span>',
        '<span><%=list[i].newUserCount%></span>',
        '<span>￥<%=list[i].payAmount%></span>',
        '<span>￥<%=list[i].withdrawAmount%></span>',
        '<span>￥<%=list[i].realBetAmount%></span>',
        '<span>￥<%=list[i].bonusAmount%></span>',
        '<span>￥<%=list[i].rebateAmount|Q.formatNull%></span>',
        '<span>￥<%=list[i].commissonAmount%></span>',
        '<span>￥<%=list[i].activityBonus%></span>',
        '<span class="last">￥<%=list[i].profitAndLoss|Q.doubleFormat,4%></span>',
        '</li>',
        '<% } %>'
      ].join('');
      //查询
      tab.find('a.search').unbind('click').click(function() {
    	tab.find('.team-level').removeClass('level-lock');
        tab.find('ul.data:eq(0)').html('<li class="bloading" name="searchteam"><div class="ui-dialog-loading"></div></li>');
        tab.find('li.bloading[name=searchteam]').height(350);

        var serachParams = {
          userName: tab.find('#searchteam_username').val(),
          startTime: tab.find('#searchteam_start').val(),
          endTime: tab.find('#searchteam_end').val(),
          lottery: tab.find('select[name=lotteryChg]').val(),
          pageSize: 9
        };

        serachParams['currPage'] = 1;
        serachParams['page'] = 1;
        me.showSearchTeam(serachParams, tab);
      });  
      
      if(report === -1){
 		 	$(".loginlnk").trigger('click');
 		 	return false;
  	  }
      if (report.code == 1) {
        
        //有数据情况
        if (report.result.list.length>0) {
          tab.find('ul.data:eq(0)').html(tmpl.apply(this, ['reportsearchteam', report_tpl, report.result]));
          
          var levelDiv = tab.find('.team-level');
          
          var currentName = report.result.list[0].userName;
          
          if(currentName){
        	  if(!levelDiv.hasClass('level-lock')){
            	  tab.find('.team-level').addClass('level-lock');
                  tab.find('.team-level').html('<a>' + currentName + '</a>');
              }
        	  var cName = tab.find('.team-level a:last').html();
        	  tab.find('.team-level').attr('currentName',cName);
          }
          
          //汇总
          var totalCount = report.result.pageSum;
          tab.find('ul.data:eq(0)').append(['<li class="split11 ">',
            '<span class="large">小计（分页）</span>',
            '<span>'+totalCount.totalNewUserCount+'</span>',
            '<span>￥'+totalCount.totalPayAmount+'</span>',
            '<span>￥'+totalCount.totalWithdrawAmount+'</span>',
            '<span>￥'+totalCount.totalRealBetAmount+'</span>',
            '<span>￥'+totalCount.totalBonusAmount+'</span>',
            '<span>￥'+totalCount.totalRebateAmount+'</span>',
            '<span>￥'+totalCount.totalCommissonAmount+'</span>',
            '<span>￥'+totalCount.totalActivityBonus+'</span>',
            '<span class="last">￥'+parseFloat(totalCount.totalProfitAndLoss).toFixed(4)+'</span>','</li>'].join(''))

          //判断是否显示滚动条
          var eachHeight = tab.find('ul.head:eq(0) li:eq(0)').height();
          var totalHeight = tab.find('ul.data:eq(0)').height();
          if (eachHeight * tab.find('ul.data:eq(0) li').size() < totalHeight) {
            tab.find('ul.data:eq(0)').removeClass('withoutscroll');
          } else {
            tab.find('ul.data:eq(0)').addClass('withoutscroll');
          }

          //列表上方层级导航
          tab.find('.team-level>a').unbind('click').click(function() {
        	  var username = $(this).html();       	  
        	  $(this).nextAll('a,span').remove();
        	  
        	  tab.find('.team-level').attr('currentName',username);
        	  
        	  tab.find('ul.data:eq(0)').html('<li class="bloading" name="searchteam"><div class="ui-dialog-loading"></div></li>');
              tab.find('li.bloading[name=searchteam]').height(350);
              
              var serachParams = {
                userName: username,
                startTime: tab.find('#searchteam_start').val(),
                endTime: tab.find('#searchteam_end').val(),
                lottery: tab.find('select[name=lotteryChg]').val(),
                pageSize: 9
              };

              serachParams['currPage'] = 1;
              serachParams['page'] = 1;
              me.showSearchTeam(serachParams, tab);
          });
          
          
          //点击列表中的用户名查询下级
          tab.find('a.team_username').unbind('click').click(function() {
        	  var username = $(this).html();
        	  
        	  var currentName = tab.find('.team-level').attr('currentName');
        	  if(username == currentName){
        		  return;
        	  }
        	  
        	  var levelHtml = '<span>&nbsp;&gt;&nbsp;</span><a>' + username + '</a>';
              tab.find('.team-level').attr('currentName',username).append(levelHtml);
        	  
        	  tab.find('ul.data:eq(0)').html('<li class="bloading" name="searchteam"><div class="ui-dialog-loading"></div></li>');
              tab.find('li.bloading[name=searchteam]').height(350);
              
              var serachParams = {
                userName: username,
                startTime: tab.find('#searchteam_start').val(),
                endTime: tab.find('#searchteam_end').val(),
                lottery: tab.find('select[name=lotteryChg]').val(),
                pageSize: 9
              };

              serachParams['currPage'] = 1;
              serachParams['page'] = 1;
              me.showSearchTeam(serachParams, tab);
          });
          
          //分页
          tab.find('div.pager').html(Q.showPagination(report.result.page.currPage || 1, report.result.page.pageSize, report.result.page.totalItem, null)).show();
          tab.find('div.pager a').unbind('click').click(function() {
        	  var currentName = tab.find('.team-level').attr('currentName');
            var serachParams = {
              userName:currentName,
              startTime: tab.find('#searchteam_start').val(),
              endTime: tab.find('#searchteam_end').val(),
              lottery: tab.find('select[name=lotteryChg]').val(),
              pageSize: 9
            };

            var nowpage = parseInt($(this).attr('page'), 10);
            serachParams['currPage'] = nowpage;
            serachParams['page'] = nowpage;
            me.showSearchTeam(serachParams, tab);
          });

        //无数据情况
        }else {
          tab.find('ul.data:eq(0)').html('<li class="blankplace" name="searchteam"><div class="blank">暂无数据</div></li>');
          tab.find('li.blankplace[name=searchteam]').height(350);
          tab.find('div.pager').html('').show();
        }
      }else {
        tab.find('ul.data:eq(0)').html('<li class="blankplace" name="searchteam"><div class="blank">' + report.msg + '</div></li>');
        tab.find('li.blankplace[name=searchteam]').height(350);
        tab.find('div.pager').html('').show();
      }
    });  
  },
  showChange: function(p, tab) {
    var me = this;
    
    p['startTime']=tab.find('input[name=startTime]').val();
    p['endTime'] = tab.find('input[name=endTime]').val();
    p['orderType']= 1;
    p['pageSize']= 10;
    Api.getCommon('accountinforeport', p, function(info) {

      var moneychangetpl = [
        '<% for ( var i = 0; i < list.length; i++ ) { %>',
        '<li class="splitmulti">',
        '<span><%=list[i].userName%></span>',
        '<span class="autohide"><%=list[i].time%></span>',
        '<span><%=list[i].type|Q.changeTypeChs%></span>',
        '<span><%=list[i].lottery|Q.lotteryChs%></span>',
        '<span><%=list[i].method|Q.getMethodName,list[i].lottery%></span>',
        '<span class="large"><%=list[i].orderItemId|Q.getItemIdForChange%></span>',
        '<span class="mini"><%=list[i].mode|Q.modeName%></span>',
        '<span>￥<%=list[i].moneyChange%></span>',
        '<span class="last">￥<%=list[i].balance%></span>',
        '</li>',
        '<% } %>'
      ].join('');

      //查询
      tab.find('a.search').unbind('click').click(function() {
        tab.find('ul.data:eq(0)').html('<li class="bloading" name="change"><div class="ui-dialog-loading"></div></li>');
        tab.find('li.bloading[name=change]').height(260);
        tab.find('h4 em').html('');
        tab.find('.pager').html('');

        var serachP = {
          userName: tab.find('#change_username').val(),
          isQueryTeam: tab.find('#change_teamChk').prop('checked'),
          startTime: tab.find('input[name=startTime]').val(),
          endTime: tab.find('input[name=endTime]').val(),
          lottery: tab.find('select[name=lotteryChg]').val(),
          orderType: 1,
          mode: tab.find('select[name=modeChg]').val(),
          type: tab.find('select[name=changeType]').val(),
          currPage: parseInt(tab.find('div.pager a.on').attr('page'), 10),
          pageSize: 10
        };

        serachP['currPage'] = 1;
        serachP['page'] = 1;
        me.showChange(serachP, tab);
      });

      if(info === -1){
 		 	$(".loginlnk").trigger('click');
 		 	return false;
  	}
    var d = info.result;

    if (d.list.length==0) {
      tab.find('ul.data:eq(0)').html('<li class="blankplace" name="change"><div class="blank">暂无数据</div></li>');
      tab.find('li.blankplace[name=change]').height(260);
    }
    
      if (tab.find('ul.data:eq(0) li.bloading').size() > 0 || typeof tab.find('ul.data:eq(0)').attr('refresh') != 'undefined') {
        
        if (d.list.length>0) {
          tab.find('ul.data:eq(0)').html(tmpl.apply(this, ['lotterychange', moneychangetpl, d]));
          tab.find('ul.data:eq(0)').removeAttr('refresh');
          
          //判断是否显示滚动条
          var eachHeight = tab.find('ul.head li:eq(0)').height();

          var totalHeight = tab.find('ul.changeList').height();
          if (eachHeight * tab.find('ul.changeList li').size() < totalHeight) {
            tab.find('ul.changeList').removeClass('withoutscroll');
          } else {
            tab.find('ul.changeList').addClass('withoutscroll');
          }
          
          tab.find('a.change-issue').unbind('click').click(function(evt){
        	  evt.preventDefault();
              
        	  var obj = {
        	     'orderId': $(this).attr('data-id')
              };
        	  
              Api.getRecencyDetail(obj, function(d) {
            	  Lottery.popDetail(d.result.istrace, obj);
              });
          });
          
        }
        //本页金额变动
        tab.find('h4 em').html(parseFloat(d.pageChangeMoney).toFixed(4));
        //分页
        tab.find('div.pager').html(Q.showPagination(d.page.currPage || 1, d.page.pageSize, d.page.totalItem, null)).show();

        tab.find('div.pager a').unbind('click').click(function() {
          var serachP = {
            userName: tab.find('#change_username').val(),
            isQueryTeam: tab.find('#change_teamChk').prop('checked'),
            startTime: tab.find('input[name=startTime]').val(),
            endTime: tab.find('input[name=endTime]').val(),
            lottery: tab.find('select[name=lotteryChg]').val(),
            orderType: 1,
            mode: tab.find('select[name=modeChg]').val(),
            type: tab.find('select[name=changeType]').val(),
            currPage: parseInt(tab.find('div.pager a.on').attr('page'), 10),
            pageSize: 10
          };

          tab.find('ul.data:eq(0)').attr('refresh',1);
          var nowpage = parseInt($(this).attr('page'), 10);
          serachP['currPage'] = nowpage;
          serachP['page'] = nowpage;
          me.showChange(serachP, tab);
        });
        
      }

    });
  },
  showBonus: function(p, tab) {
    var me = this;
    if (typeof p['pageSize'] === 'undefined') {
      p['pageSize'] =6;  
    }
    if (typeof p['startTime'] === 'undefined') {
      var chooseDate = tab.find('#bonus_start').val().split(' ')[0];     
      p['startTime'] =chooseDate+' 00:00:00';  
    }
    if (typeof p['endTime'] === 'undefined') {
      var chooseDateEnd = tab.find('#bonus_end').val().split(' ')[0];
      p['endTime'] =chooseDateEnd+' 23:59:59';  
    }
    Api.getCommon('commission', p, function(commission) {
      //查询
      tab.find('a.search').unbind('click').click(function() {
        tab.find('ul.data:eq(0)').html('<li class="bloading" name="bonus"><div class="ui-dialog-loading"></div></li>');
        tab.find('li.bloading[name=bonus]').height(350);

        var chooseDate = tab.find('#bonus_start').val().split(' ')[0];
        var chooseDateEnd = tab.find('#bonus_end').val().split(' ')[0];
        var serachParams = {
          startTime: chooseDate+' 00:00:00',
          endTime: chooseDateEnd+' 23:59:59',
          pageSize: 6
        };

        serachParams['currPage'] = 1;
        serachParams['page'] = 1;
        me.showBonus(serachParams, tab);
      });
      if(commission === -1){
 		 	$(".loginlnk").trigger('click');
 		 	return false;
  	  }
      if (typeof commission.result['list'] !== 'undefined') {
        if (commission.result['list'].length>0) {
          var commission_tpl = [
            '<% for ( var i = 0; i < list.length; i++ ) { %>',
            '<li class="split41"><span><%=list[i].userName%></span><span><%=list[i].calcTime%></span><span><%=list[i].orderType|Q.orderTypeChs%></span><span class="last">￥<%=list[i].commissionAmount|Q.formatNull%></span></li>',
            '<% } %>'
          ].join('');

          tab.find('ul.data:eq(0)').html(tmpl.apply(this, ['commissiondata', commission_tpl, commission.result]));
          //判断是否显示滚动条
          var eachHeight = tab.find('ul.head:eq(0) li:eq(0)').height();
          var totalHeight = tab.find('ul.data:eq(0)').height();

          if (eachHeight * tab.find('ul.data:eq(0) li').size() < totalHeight) {
            tab.find('ul.data:eq(0)').removeClass('withoutscroll');
          } else {
            tab.find('ul.data:eq(0)').addClass('withoutscroll');
          }

          //分页
          tab.find('div.pager').html(Q.showPagination(commission.result.page.currPage || 1, commission.result.page.pageSize, commission.result.page.totalItem, null)).show();


          tab.find('div.pager a').unbind('click').click(function() {
            var chooseDate = tab.find('#bonus_start').val().split(' ')[0];
            var chooseDateEnd = tab.find('#bonus_end').val().split(' ')[0];
            
            var serachParams = {
              startTime: chooseDate+' 00:00:00',
              endTime: chooseDateEnd+' 23:59:59',
              pageSize: 6
            };

            var nowpage = parseInt($(this).attr('page'), 10);
            serachParams['currPage'] = nowpage;
            serachParams['page'] = nowpage;
            me.showBonus(serachParams, tab);
          });
        }else {
          tab.find('ul.data:eq(0)').html('<li class="blankplace" name="bonus"><div class="blank">暂无数据</div></li>');
          tab.find('li.blankplace[name=bonus]').height(350);  
        }
      }else {
        tab.find('ul.data:eq(0)').html('<li class="blankplace" name="bonus"><div class="blank">暂无数据</div></li>');
        tab.find('li.blankplace[name=bonus]').height(350);  
      }
    });
  }
};

Report.init();
/* jshint devel:true */

var Live = Live || {};

Live = {
  socket: null,
  prizeTimeout: null,
  start: function() {
    var me = this;

    me.initPrize();

    me.socket = io.connect('http://' + location.host);

    me.socket.on('connect', function() {
      // console.log('connected! start to login...');
      me.socket.emit('login', {
        userName: User.name,
        sig: Cookies.get('SIG') || '',
        appId: globeId(User.local_path)
      });
    });

    me.socket.on('message', function(d) {
    	//console.info('收到消息');
    	//console.info(d);
      if (typeof d === 'string') {
        d = JSON.parse(d);
        if(d.type !== undefined && d.type === 1) {
          d = d['message'];
          d = JSON.parse(d);
          // console.log(d);
          me.createHtml([d]);
        } else if(d.type !== undefined && d.type === 2) {
        	if(Lottery.lt == d.lottery){
        		//console.info('更新中奖号码');
        		Lottery.updateIssueInfo();
        	}
        } 
      }
    });

    me.socket.on('disconnect', function() {
      // console.log('user disconnected!');
    });
  },
  resume: function() {
    var me = this;
    me.socket.emit('login', {
      userName: User.name,
      sig: Cookies.get('SIG') || '',
      appId: globeId(User.local_path)
    });
  },
  stop: function() {
    var me = this;
    me.socket.disconnect();
  },
  initPrize: function() {
    var me = this;
    var $prize = $('.prize');

    if ($prize.length === 0) {
      $prize = $('<div class="prize"><div class="p-list"></div><div class="p-close">关闭全部</div></div>');
      //$prize.css('left', $('.aside').offset().left);
      $('body>.lotterybody').append($prize);

      $prize.find('.p-close').unbind().click(function() {
        me.hidePrize();
      });
    }
  },
  createHtml: function(d) {
    var me = this;
    var $pList = $('.prize .p-list');
    var items = [];
    var item = [];
    if (d && d.length > 0) {
      for (var i = 0; i < d.length; i++) {
        item = ['<div class="p-dt"><div class="close"></div><p>恭喜您:<br>',
          '在<span>', Q.lotteryChs(d[i].lottery), '</span>-',
          '<span>', Q.getMethodName(d[i].method, d[i].lottery), '</span>中',
          '<br>第<span>', d[i].issue, '</span>期中奖<br>奖金<span class="money">', d[i].bonus,
          '</span></p></div>'
        ];
        items.push(item.join(''));
      }

      $pList.append(items.join(''));
      me.showPrize();

      $pList.find('.close').unbind().click(function() {
        me.hidePrize($(this).parent('.p-dt'));
      });
    }
  },
  showPrize: function() {
    var me = this;
    var $prize = $('.prize');
    var $pList = $prize.find('.p-dt');

    $prize.show();
    $pList.each(function(i, el) {
      setTimeout(function() {
        $(el).stop(true, false).animate({
          'opacity': 1,
          'height': '75px'
        }, 700, 'easeInOutCubic', function() {
          if (i === $pList.length - 1) {
            prizeTimeout = setTimeout(function() {
              me.hidePrize();
            }, 1000 * 15);
          }
        });
      }, 700 * i);
    });
  },
  hidePrize: function(dt) {
    var me = this;
    var $prize = $('.prize');
    var $pList = $prize.find('.p-dt');

    if (dt !== undefined) {
      $(dt).stop(true, false).animate({
        'opacity': 0,
        'height': '0px'
      }, 700, 'easeInOutCubic', function() {
        $(this).remove();
        if ($prize.find('.p-dt').length === 0) {
          $prize.hide();
        }
      });
    } else {
      clearTimeout(me.prizeTimeout);
      $pList.each(function(i, el) {
        $(el).stop(true, false).animate({
          'opacity': 0,
          'height': '0px'
        }, 700, 'easeInOutCubic', function() {
          $(this).remove();
          if (i === $pList.length - 1) {
            $prize.hide();
          }
        });
      });
    }
  }
};
/* jshint devel:true */
$(document).ready(function() {
  //导航初始化
  //Navigation.init();
  
  NProgress.start();
  
  if($('#lotteryClass dd[data-lt=' + Q.getUrlParam('lt') + ']').length > 0){
	  Lottery.lt = Q.getUrlParam('lt');
  }else{
	  Lottery.lt = Cookies.get('lt') || $('#lotteryClass dl:eq(0) dd:eq(0)').data('lt') || 'CQSSC';
  }
  
  //彩种切换时清空投注模式用
  Lottery.old_lt = Lottery.lt;
  
  Lottery.type = 'lottery';

  $(document.body).append('<iframe id="login-iframe" style="display: none;"></iframe>');
  $("iframe#login-iframe").attr('src', '/lottery/u/login?backType=0&t=' + (new Date()).getTime());
  $("iframe#login-iframe").load(function() {
    Api.getOdds(function(d) {
      if (d.code && d.result) {
        // 将返回结果赋值给odds 并更新页面奖金模式
        Lottery.odds = d.result;

        // 初始化选号投注盘 交易行情选号盘
        Lottery.init();

        Lottery.updateIssueInfo();

        /*
        // 渲染完选号盘再做新手判断
        if (Cookies.get('lottery_passed') === undefined) {
          Guide.newbieTour();
        }
         */
        
        // 右下角跳转头部
        //Guide.resetTipBtm();
        
        // 追号初始化
        Trace.init({
          'lottery': 1
        });
        
        NProgress.done();
      }
    });

    setTimeout(function() {
      $("iframe#login-iframe").remove();
    }, 1000);
  });

  //Q.smartResize();
  
  /**
  $(window).on("debouncedresize", function(event) {
    //新手指引
    Guide.resetTipBorderPos();
    Guide.resetTipBtm();
  });

  $(window).on('onload scroll resize', function(e) {
    if (e.type == 'scroll') {
      Guide.resetTipBtm();
    }
  });
  */
  
  //获取活动轮播图
  Api.getActivity('pageSize=5',function(d) {
	  d = d.result;
      var data = d.entities;
      if(data && typeof(data) != 'undefined'){
        for (var i = 0; i < data.length; i++) {
            var eachIndexImg = '<div class="gallery-cell"><a href="sobet/activity/goDetailById?id=' + data[i].id + '"><img src="' + data[i].thumbnailPath + '" height="152" width="210"></a></div>';
            $('.aside #scrollImg').append(eachIndexImg);
        };
        $('.aside #scrollImg').flickity({
            autoPlay: true,
            prevNextButtons: false,
            wrapAround:true
        });
      }
  });
  
  $('.guide-float-left,.guide-float').hide();
  
  $('#lotteryClass dt').click(function(evt) {
    evt.preventDefault();
    $(this).toggleClass('off');
    $(this).nextAll('dd').slideToggle('fast');
  });

  $('#lotteryClass dd').click(function(evt) {
    evt.preventDefault();

    var lt = $(this).attr('data-lt');
    $(window).scrollTop(0);

    if (lt) {
      Cookies.set('lt', lt);
      
      Lottery.old_lt = Lottery.lt;
      Lottery.lt = lt;

      Lottery.updateIssueInfo();
      Lottery.init();
    }
  });

  /**
  // WBG亿万彩开奖直播
  $('#lotteryClass, .main').on('click', '.tv-living', function(evt) {
    evt.preventDefault();
    evt.stopPropagation();

    var draggie;
    var width = $(window).width();
    var height = $(window).height();
    var html = '<div id="tvLiving"><h2 title="拖拽移动当前窗口">WBG亿万彩开奖直播... <span>x</span></h2>' +
      '<object id="flashObj" width="480" height="270" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=9,0,47,0">' +
      '<param name="movie" value="http://c.brightcove.com/services/viewer/federated_f9?isVid=1&isUI=1" />' +
      '<param name="bgcolor" value="#FFFFFF" />' +
      '<param name="flashVars" value="@videoPlayer=4372140149001&playerID=3875138597001&playerKey=AQ~~,AAADhlKg3Nk~,FY5afzSF6auJkIKzvxmmRAd0DE7VIy7P&domain=embed&dynamicStreaming=true" />' +
      '<param name="base" value="http://admin.brightcove.com" />' +
      '<param name="seamlesstabbing" value="false" />' +
      '<param name="allowFullScreen" value="true" />' +
      '<param name="swLiveConnect" value="true" />' +
      '<param name="allowScriptAccess" value="always" />' +
      '<embed src="http://c.brightcove.com/services/viewer/federated_f9?isVid=1&isUI=1" bgcolor="#FFFFFF" flashVars="@videoPlayer=4372140149001&playerID=3875138597001&playerKey=AQ~~,AAADhlKg3Nk~,FY5afzSF6auJkIKzvxmmRAd0DE7VIy7P&domain=embed&dynamicStreaming=true" base="http://admin.brightcove.com" name="flashObj" width="480" height="270" seamlesstabbing="false" type="application/x-shockwave-flash" allowFullScreen="true" allowScriptAccess="always" swLiveConnect="true" pluginspage="http://www.macromedia.com/shockwave/download/index.cgi?P1_Prod_Version=ShockwaveFlash">' +
      '</embed></object></div>';

    if ($('#tvLiving').length === 0) {
      $('body').append(html);
      $('#tvLiving').css({
        left: width - 480,
        top: height - 300
      }).show().addClass('bounceInRight').one('webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend', function() {
        $('#tvLiving').removeClass('bounceInRight');
      });

      draggie = new Draggabilly($('#tvLiving')[0], {
        containment: 'body',
        handle: 'h2'
      });

      $('#tvLiving span').unbind('click').click(function(evt) {
        draggie.destroy();
        $('#tvLiving').fadeOut('fast').remove();
      });
    }
  });
  */
  
  /**
  // 弹框投注查询
  $('.aside .btns .go-history').click(function(evt) {
    if ($(this).hasClass('disabled')) {
      return false;
    }

    evt.preventDefault();
    Lottery.queryHistory();
  });
  */
  
  /**
  // 问号按钮提示信息
  $('.faq-tip').hover(function() {
    var id = $(this).attr('data-id');
    var title = $(this).attr('data-title');
    var content = $(this).attr('data-tip');
    var tip = dialog({
      id: id,
      align: 'top',
      skin: 'tip',
      content: '<strong style="font-weight: bold">' + title + '</strong><p style="text-indent: 2em">' + content + '</p>'
    }).show($(this)[0]);
    $(this).addClass('faq-tip-hover');
  }, function() {
    var id = $(this).attr('data-id');
    dialog.get(id).close();
    $(this).removeClass('faq-tip-hover');
  });
  */
  
  
  /**
  // 新手指引
  // 教程重播浮窗
  $("#newbie_guide").click(function() {
    $(".guide-box").find('.tip_skip').click();
    Guide.newbieTour();
  });
*/
  
  
//  $('.guide-float li').unbind('click').click(function(evt) {
//    if ($(this).hasClass('newbeeguide')) {
//      $(".guide-box").find('.tip_skip').click();
//      Guide.newbieTour();
//    }
//
//    if ($(this).hasClass('gotop') && $(window).scrollTop() > 0) {
//      Guide.scrollToPos(0);
//    }
//  });

  
  $('.guide-float li.gotop').unbind('click').click(function(evt) {
    if ($(window).scrollTop() > 0) {
      Guide.scrollToPos(0);
    }
  });
  
  if (User !== undefined && User.loginOk === undefined) {
    User.loginOk = function() {
      if (typeof Lottery !== 'undefined') {
        Api.getOdds(function(d) {
          if (d.code && d.result) {
            // 将返回结果赋值给odds 并更新页面奖金模式
            Lottery.odds = d.result;
            Lottery.updateOdds();
          }
        });
        Lottery.updateIssueInfo();
        Lottery.updateRecency();
      }

      // 开始推送
      Live.resume();
    };
  }
  // 开始推送
  Live.start();
});